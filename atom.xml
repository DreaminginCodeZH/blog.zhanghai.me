<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[梦断代码]]></title>
  <subtitle><![CDATA[乐天知命]]></subtitle>
  <link href="http://blog.zhanghai.me/atom.xml" rel="self"/>
  <link href="http://blog.zhanghai.me"/>
  <updated>2015-03-31T02:49:38.282Z</updated>
  <id>http://blog.zhanghai.me/</id>
  <author>
    <name><![CDATA[张海]]></name>
  </author>
  <generator uri="http://zespia.tw/hexo">Hexo</generator>
  <entry>
    <title type="html"><![CDATA[LinearLayout 的拖放操作和动画]]></title>
    <link href="http://blog.zhanghai.me/drag-and-drop-with-animation-on-linearlayout/"/>
    <id>http://blog.zhanghai.me/drag-and-drop-with-animation-on-linearlayout/</id>
    <published>2015-02-25T05:04:38.000Z</published>
    <updated>2015-03-07T09:35:17.000Z</updated>
    <content type="html"><![CDATA[<h2 id="前言">前言</h2>
<p>Android 中<code>ListView</code>的拖放操作和动画实现已经被<a href="https://www.youtube.com/watch?v=_BZIvjMgH-Q" target="_blank" rel="external">这个 DevByte</a> 和<a href="https://android.googlesource.com/platform/development/+/master/samples/devbytes/animation/ListViewDraggingAnimation" target="_blank" rel="external">相关的样例</a>说明，并且也有 <a href="https://github.com/nhaarman/ListViewAnimations" target="_blank" rel="external">ListViewAnimations</a> 这样强大的开源库进行了集成。但是，一番 Google 后，我发现基于<code>LinearLayout</code>的相关实现却不多。</p>
<p>然而，有时我们可能需要使用<code>LinearLayout</code>替代<code>ListView</code>来实现列表，例如不需要<code>ListView</code>的视图回收机制（比如使用<code>Fragment</code>作为列表项），或者我们需要把这个视图放在<code>ScrollView</code>中。</p>
<p>在使用<code>LinearLayout</code>实现拖放和动画时，实现代码相比于之前提到的<code>ListView</code>实现也需要一些变动。因为我在网络上没有找到相应的资料，所以写下这篇文章来记录这个过程。</p>
<a id="more"></a>
<h2 id="拖放">拖放</h2>
<blockquote class="callout"><div class="title">前置阅读</div><a href="https://developer.android.com/guide/topics/ui/drag-drop.html" target="_blank" rel="external">Drag and Drop | Android Developers</a><br></blockquote>

<p>为<code>LinearLayout</code>设定<a href="http://developer.android.com/reference/android/view/View.OnDragListener.html" target="_blank" rel="external"><code>View.OnDragListener</code></a>很简单，其机制在官方教程中有详细说明，在此不再赘述。</p>
<p>但是，官方教程中给出的样例在释放被拖动条目后只会显示一条<code>Toast</code>，而一般的需求则是拖放排序。所以在参考了网上的一些文章后，我给出了下面这个简单的实现。与官方样例相比，添加的主要是在<code>ViewGroup</code>中交换子视图的实现，以及将被拖动的视图作为<code>LocalState</code>传递。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">setupDragSort</span>(View view) {</div><div class="line">    view.setOnDragListener(<span class="keyword">new</span> View.OnDragListener() {</div><div class="line">        <span class="annotation">@Override</span></div><div class="line">        <span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onDrag</span>(<span class="keyword">final</span> View view, DragEvent event) {</div><div class="line">            ViewGroup viewGroup = (ViewGroup)view.getParent();</div><div class="line">            View dragView = (View)event.getLocalState();</div><div class="line">            <span class="keyword">switch</span> (event.getAction()) {</div><div class="line">                <span class="keyword">case</span> DragEvent.ACTION_DROP:</div><div class="line">                    <span class="keyword">if</span> (view != dragView) {</div><div class="line">                        swapViewGroupChildren(viewGroup, view, dragView);</div><div class="line">                    }</div><div class="line">                    <span class="keyword">break</span>;</div><div class="line">            }</div><div class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">        }</div><div class="line">    });</div><div class="line">    view.setOnLongClickListener(<span class="keyword">new</span> View.OnLongClickListener() {</div><div class="line">        <span class="annotation">@Override</span></div><div class="line">        <span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onLongClick</span>(View view) {</div><div class="line">            view.startDrag(<span class="keyword">null</span>, <span class="keyword">new</span> View.DragShadowBuilder(view), view, <span class="number">0</span>);</div><div class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">        }</div><div class="line">    });</div><div class="line">}</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">swapViewGroupChildren</span>(ViewGroup viewGroup, View firstView, View secondView) {</div><div class="line">    <span class="keyword">int</span> firstIndex = viewGroup.indexOfChild(firstView);</div><div class="line">    <span class="keyword">int</span> secondIndex = viewGroup.indexOfChild(secondView);</div><div class="line">    <span class="keyword">if</span> (firstIndex &lt; secondIndex) {</div><div class="line">        viewGroup.removeViewAt(secondIndex);</div><div class="line">        viewGroup.removeViewAt(firstIndex);</div><div class="line">        viewGroup.addView(secondView, firstIndex);</div><div class="line">        viewGroup.addView(firstView, secondIndex);</div><div class="line">    } <span class="keyword">else</span> {</div><div class="line">        viewGroup.removeViewAt(firstIndex);</div><div class="line">        viewGroup.removeViewAt(secondIndex);</div><div class="line">        viewGroup.addView(firstView, secondIndex);</div><div class="line">        viewGroup.addView(secondView, firstIndex);</div><div class="line">    }</div><div class="line">}</div></pre></td></tr></table></figure>

<video controls loop src="/drag-and-drop-with-animation-on-linearlayout/swap.mp4" onclick="this.paused ? this.play() : this.pause()"></video>

<p>这个实现已经可以完成拖动排序，然而界面效果却不理想：被拖动的条目没有消失，列表在拖动过程中也没有作出相应的改变。下面我们将使用 Android 的属性动画实现这种界面效果。</p>
<h2 id="在拖动过程中响应更改">在拖动过程中响应更改</h2>
<p>言归正传。为了实现拖放过程中的动画，我们的目标是使用<code>LinearLayout</code>的列表视图能够对用户的拖动实时作出相应，也就是每次当用户的拖动越过某个临界线的时候，就将列表展现为被拖动条目在这里放下时的预览。因此，需要完成的工作就是将被拖动视图的<code>Visibility</code>设置为<code>View.INVISIBLE</code>，此时被拖动视图参与布局计算，但不进行绘制（已经被用户拖起），再不断改变列表中各个条目的位置。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">setupDragSort</span>(View view) {</div><div class="line">    view.setOnDragListener(<span class="keyword">new</span> View.OnDragListener() {</div><div class="line">        <span class="annotation">@Override</span></div><div class="line">        <span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onDrag</span>(<span class="keyword">final</span> View view, DragEvent event) {</div><div class="line">            ViewGroup viewGroup = (ViewGroup)view.getParent();</div><div class="line">            DragState dragState = (DragState)event.getLocalState();</div><div class="line">            <span class="keyword">switch</span> (event.getAction()) {</div><div class="line">                <span class="keyword">case</span> DragEvent.ACTION_DRAG_STARTED:</div><div class="line">                    <span class="keyword">if</span> (view == dragState.view) {</div><div class="line">                        view.setVisibility(View.INVISIBLE);</div><div class="line">                    }</div><div class="line">                    <span class="keyword">break</span>;</div><div class="line">                ...</div><div class="line">                <span class="keyword">case</span> DragEvent.ACTION_DRAG_ENDED:</div><div class="line">                    <span class="keyword">if</span> (view == dragState.view) {</div><div class="line">                        view.setVisibility(View.VISIBLE);</div><div class="line">                    }</div><div class="line">                    <span class="keyword">break</span>;</div><div class="line">            }</div><div class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">        }</div><div class="line">    });</div><div class="line">    view.setOnLongClickListener(<span class="keyword">new</span> View.OnLongClickListener() {</div><div class="line">        <span class="annotation">@Override</span></div><div class="line">        <span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onLongClick</span>(View view) {</div><div class="line">            view.startDrag(<span class="keyword">null</span>, <span class="keyword">new</span> View.DragShadowBuilder(view), <span class="keyword">new</span> DragState(view), <span class="number">0</span>);</div><div class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">        }</div><div class="line">    });</div><div class="line">}</div><div class="line"></div><div class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">DragState</span> </span>{</div><div class="line"></div><div class="line">    <span class="keyword">public</span> View view;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">int</span> index;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="title">DragState</span>(View view) {</div><div class="line">        <span class="keyword">this</span>.view = view;</div><div class="line">        index = ((ViewGroup)view.getParent()).indexOfChild(view);</div><div class="line">    }</div><div class="line">}</div></pre></td></tr></table></figure>

<p>一个很自然的想法是，在用户拖动条目经过某个其他条目超过一般高度时，就将这个条目在父视图中的位置与被拖动条目互换（而不是等到用户拖动完成时）。这样就基本实现了布局系统中的改变。然而，由于在用户快速拖动时，Android 可能来不及向每个经过的视图发送消息，这种方式可能导致列表顺序的改变的问题（我在自己测试时就遇到了）。</p>
<p>所以在实现视图交换时，我们需要使用递归的方式进行，直到两个视图达到相邻。实现代码如下。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">setupDragSort</span>(View view) {</div><div class="line">    view.setOnDragListener(<span class="keyword">new</span> View.OnDragListener() {</div><div class="line">        <span class="annotation">@Override</span></div><div class="line">        <span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onDrag</span>(<span class="keyword">final</span> View view, DragEvent event) {</div><div class="line">            ...</div><div class="line">            <span class="keyword">switch</span> (event.getAction()) {</div><div class="line">                ...</div><div class="line">                <span class="keyword">case</span> DragEvent.ACTION_DRAG_LOCATION: {</div><div class="line">                    <span class="keyword">if</span> (view == dragState.view){</div><div class="line">                        <span class="keyword">break</span>;</div><div class="line">                    }</div><div class="line">                    <span class="keyword">int</span> index = viewGroup.indexOfChild(view);</div><div class="line">                    <span class="keyword">if</span> ((index &gt; dragState.index && event.getY() &gt; view.getHeight() / <span class="number">2</span>)</div><div class="line">                            || (index &lt; dragState.index && event.getY() &lt; view.getHeight() / <span class="number">2</span>)) {</div><div class="line">                        swapViews(viewGroup, view, index, dragState);</div><div class="line">                    } <span class="keyword">else</span> {</div><div class="line">                        swapViewsBetweenIfNeeded(viewGroup, index, dragState);</div><div class="line">                    }</div><div class="line">                    <span class="keyword">break</span>;</div><div class="line">                }</div><div class="line">                ...</div><div class="line">            }</div><div class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">        }</div><div class="line">    });</div><div class="line">    ...</div><div class="line">}</div><div class="line"></div><div class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">swapViewsBetweenIfNeeded</span>(ViewGroup viewGroup, <span class="keyword">int</span> index,</div><div class="line">                                             DragState dragState) {</div><div class="line">    <span class="keyword">if</span> (index - dragState.index &gt; <span class="number">1</span>) {</div><div class="line">        <span class="keyword">int</span> indexAbove = index - <span class="number">1</span>;</div><div class="line">        swapViews(viewGroup, viewGroup.getChildAt(indexAbove), indexAbove, dragState);</div><div class="line">    } <span class="keyword">else</span> <span class="keyword">if</span> (dragState.index - index &gt; <span class="number">1</span>) {</div><div class="line">        <span class="keyword">int</span> indexBelow = index + <span class="number">1</span>;</div><div class="line">        swapViews(viewGroup, viewGroup.getChildAt(indexBelow), indexBelow, dragState);</div><div class="line">    }</div><div class="line">}</div><div class="line"></div><div class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">swapViews</span>(ViewGroup viewGroup, <span class="keyword">final</span> View view, <span class="keyword">int</span> index,</div><div class="line">                              DragState dragState) {</div><div class="line">    swapViewsBetweenIfNeeded(viewGroup, index, dragState);</div><div class="line">    swapViewGroupChildren(viewGroup, view, dragState.view);</div><div class="line">    dragState.index = index;</div><div class="line">}</div></pre></td></tr></table></figure>

<video controls loop src="/drag-and-drop-with-animation-on-linearlayout/realtime.mp4" onclick="this.paused ? this.play() : this.pause()"></video>

<h2 id="动画">动画</h2>
<p>接下来是交换过程中动画的实现。在实现过程中，我参考了 <a href="https://github.com/justasm/DragLinearLayout" target="_blank" rel="external">justasm 的 DragLinearLayout</a> 中的代码，在此表示感谢。</p>
<blockquote class="callout"><div class="title">前置阅读</div><a href="https://developer.android.com/guide/topics/graphics/prop-animation.html" target="_blank" rel="external">Property Animation | Android Developers</a></blockquote>

<p>在实现动画时，我们主要利用的是 Android 的属性动画机制，涉及到的是<code>View</code>的<a href="http://developer.android.com/reference/android/view/View.html#Y" target="_blank" rel="external"><code>Y</code></a>这个属性。</p>
<p>在谈及实际实现之前，值得在此提及的是<code>View</code>的<code>Left</code>和<code>Top</code>与<code>X</code>和<code>Y</code>的关系。<code>Left</code>和<code>Top</code>是在视图树布局过程中按照视图层级和布局参数等得出的，表示特定视图在屏幕上被布局系统分配的位置；而<code>X</code>和<code>Y</code>则是用于在实际绘制视图时定位的依据。</p>
<p>这种实现的好处是，通过将实际绘制时与布局时的视图位置独立起来，可以实现动画过程中视图的位移、旋转等视觉变换，而不必受到布局系统中视图定位的拘束。顺带一提，<code>X</code>和<code>Y</code>其实是由<code>Left</code>和<code>Top</code>分别加上<code>TRANSLATION_X</code>和<code>TRANSLATION_Y</code>得到的，这是因为实际上视图还是要依赖于布局才能定位。</p>
<p>言归正传。为了让视图位置的变化更加平滑，需要让视图的绘制位置从上一个位置渐变到下一个位置。我们在需要改变视图位置时可以通过<a href="http://developer.android.com/reference/android/view/View.html#getY%28%29" target="_blank" rel="external"><code>View.getY()</code></a>得到视图当前的绘制位置，但视图的下一个位置则需要经过下一次布局计算后才能获得。因此，我们使用一个常见的技巧，也就是利用<a href="http://developer.android.com/reference/android/view/ViewTreeObserver.OnPreDrawListener.html" target="_blank" rel="external"><code>ViewTreeObserver.OnPreDrawListener</code></a>，在绘制之前获取已经计算完成的布局位置，在这时开始进行视图动画。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">swapViews</span>(ViewGroup viewGroup, <span class="keyword">final</span> View view, <span class="keyword">int</span> index,</div><div class="line">                              DragState dragState) {</div><div class="line">    swapViewsBetweenIfNeeded(viewGroup, index, dragState);</div><div class="line">    <span class="keyword">final</span> <span class="keyword">float</span> viewY = view.getY();</div><div class="line">    swapViewGroupChildren(viewGroup, view, dragState.view);</div><div class="line">    dragState.index = index;</div><div class="line">    postOnPreDraw(view, <span class="keyword">new</span> Runnable() {</div><div class="line">        <span class="annotation">@Override</span></div><div class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span>() {</div><div class="line">            ObjectAnimator</div><div class="line">                    .ofFloat(view, View.Y, viewY, view.getTop())</div><div class="line">                    .setDuration(getDuration(view))</div><div class="line">                    .start();</div><div class="line">        }</div><div class="line">    });</div><div class="line">}</div><div class="line"></div><div class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getDuration</span>(View view) {</div><div class="line">    <span class="keyword">return</span> view.getResources().getInteger(android.R.integer.config_shortAnimTime);</div><div class="line">}</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">postOnPreDraw</span>(View view, <span class="keyword">final</span> Runnable runnable) {</div><div class="line">    <span class="keyword">final</span> ViewTreeObserver observer = view.getViewTreeObserver();</div><div class="line">    observer.addOnPreDrawListener(<span class="keyword">new</span> ViewTreeObserver.OnPreDrawListener() {</div><div class="line">        <span class="annotation">@Override</span></div><div class="line">        <span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onPreDraw</span>() {</div><div class="line">            <span class="keyword">if</span> (observer.isAlive()) {</div><div class="line">                observer.removeOnPreDrawListener(<span class="keyword">this</span>);</div><div class="line">            }</div><div class="line">            runnable.run();</div><div class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">        }</div><div class="line">    });</div><div class="line">}</div></pre></td></tr></table></figure>

<p>如此，我们就基本完成了拖放操作和动画的实现。效果如下：</p>
<video controls loop src="/drag-and-drop-with-animation-on-linearlayout/animation.mp4" onclick="this.paused ? this.play() : this.pause()"></video>

<h2 id="附加：删除条目">附加：删除条目</h2>
<p>既然写了这么多，最后再顺带给出一个删除条目及相应动画的实现。其中的<code>view</code>参数是在<code>viewGroup</code>外的一个拖放目标，用于删除。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">setupDragDelete</span>(View view, <span class="keyword">final</span> ViewGroup viewGroup) {</div><div class="line">    view.setOnDragListener(<span class="keyword">new</span> View.OnDragListener() {</div><div class="line">        <span class="annotation">@Override</span></div><div class="line">        <span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onDrag</span>(View view, DragEvent event) {</div><div class="line">            <span class="keyword">switch</span> (event.getAction()) {</div><div class="line">                <span class="keyword">case</span> DragEvent.ACTION_DRAG_ENTERED:</div><div class="line">                    view.setActivated(<span class="keyword">true</span>);</div><div class="line">                    <span class="keyword">break</span>;</div><div class="line">                <span class="keyword">case</span> DragEvent.ACTION_DRAG_EXITED:</div><div class="line">                    view.setActivated(<span class="keyword">false</span>);</div><div class="line">                    <span class="keyword">break</span>;</div><div class="line">                <span class="keyword">case</span> DragEvent.ACTION_DROP:</div><div class="line">                    DragState dragState = (DragState)event.getLocalState();</div><div class="line">                    removeView(viewGroup, dragState);</div><div class="line">                    <span class="keyword">break</span>;</div><div class="line">                <span class="keyword">case</span> DragEvent.ACTION_DRAG_ENDED:</div><div class="line">                    <span class="comment">// NOTE: Needed because ACTION_DRAG_EXITED may not be sent when the drag</span></div><div class="line">                    <span class="comment">// ends within the view.</span></div><div class="line">                    view.setActivated(<span class="keyword">false</span>);</div><div class="line">                    <span class="keyword">break</span>;</div><div class="line">            }</div><div class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">        }</div><div class="line">    });</div><div class="line">}</div><div class="line"></div><div class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">removeView</span>(ViewGroup viewGroup, DragState dragState) {</div><div class="line">    viewGroup.removeView(dragState.view);</div><div class="line">    <span class="keyword">int</span> childCount = viewGroup.getChildCount();</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = dragState.index; i &lt; childCount; ++i) {</div><div class="line">        <span class="keyword">final</span> View view = viewGroup.getChildAt(i);</div><div class="line">        <span class="keyword">final</span> <span class="keyword">float</span> viewY = view.getY();</div><div class="line">        postOnPreDraw(view, <span class="keyword">new</span> Runnable() {</div><div class="line">            <span class="annotation">@Override</span></div><div class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span>() {</div><div class="line">                ObjectAnimator</div><div class="line">                        .ofFloat(view, View.Y, viewY, view.getTop())</div><div class="line">                        .setDuration(getDuration(view))</div><div class="line">                        .start();</div><div class="line">            }</div><div class="line">        });</div><div class="line">    }</div><div class="line">}</div></pre></td></tr></table></figure>

<p>需要注意的是，如果<code>LinearLayout</code>的高度设置为<code>wrap_content</code>，则为了避免动画被视图边界剪裁，以及在<code>ScrollView</code>中高度正确变化，需要手动对<code>LinearLayout</code>的高度进行动画；这同时涉及到需要覆盖<code>ScrollView</code>中<code>measureChild()</code>方法来计算我们所请求的高度。我在下面的完整实现中完成了这个部分。</p>
<blockquote class="callout"><div class="title">完整实现</div><a href="https://gist.github.com/DreaminginCodeZH/b0c42a56e49ca907a9cb" target="_blank" rel="external">在 GitHub 上浏览</a></blockquote>
]]></content>
    <category scheme="http://blog.zhanghai.me/tags/android/" term="Android"/>
    <category scheme="http://blog.zhanghai.me/tags/programming/" term="编程"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[Bash Scripting Notes]]></title>
    <link href="http://blog.zhanghai.me/bash-scripting-notes/"/>
    <id>http://blog.zhanghai.me/bash-scripting-notes/</id>
    <published>2015-02-15T13:08:11.000Z</published>
    <updated>2015-03-02T08:59:17.000Z</updated>
    <content type="html"><![CDATA[<p>This is my notebook for bash scripting.</p>
<h2 id="Styling">Styling</h2>
<p>Use <a href="https://google-styleguide.googlecode.com/svn/trunk/shell.xml" target="_blank" rel="external">Google style guide for shell</a>.</p>
<a id="more"></a>
<h2 id="Organization">Organization</h2>
<p>Use functions; use a <code>main</code> function and call it by <code>main &quot;$@&quot;</code> at the end of the script.</p>
<h2 id="Boolean_variable">Boolean variable</h2>
<p>Use <code>1</code> or <code>0</code> literal for boolean; test by <code>[[ ${bool_val} -eq 1 ]]</code>.</p>
<h2 id="Local_variable">Local variable</h2>
<p>Use <code>local</code> for function local variable; seprate declaration and assignment.</p>
<h2 id="getopt">getopt</h2>
<p>Always quote <code>&quot;$@&quot;</code> to preserve correct word splitting.</p>
<h2 id="Read_password">Read password</h2>
<p>Use <code>read -p &lt;prompt&gt; -s &lt;variable&gt;; echo</code> to read password.</p>
<h2 id="Using_sudo">Using sudo</h2>
<p>Include this function and call it before you’re going to use <code>sudo</code>.</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="title">prepare_sudo</span></span>() {</div><div class="line">    <span class="built_in">sudo</span> -v</div><div class="line">}</div></pre></td></tr></table></figure>

<h2 id="Here_document">Here document</h2>
<p>Use Here document for usage(), etc.</p>
<p>You can utilize the following technique to write a here document as root</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">sudo</span> tee <span class="string">"<span class="variable">${profile_path}</span>"</span> &gt;/dev/null &lt;&lt;EOF</div></pre></td></tr></table></figure>

<h2 id="Wait_for_certain_condition">Wait for certain condition</h2>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> $(seq <span class="number">0</span> <span class="string">"<span class="variable">${timeout}</span>"</span>); <span class="keyword">do</span></div><div class="line">    check_something;</div><div class="line">    sleep <span class="number">1</span>;</div><div class="line"><span class="keyword">done</span></div></pre></td></tr></table></figure>

<h2 id="Watch_file_changes">Watch file changes</h2>
<p>Use <code>inotifywait</code>.</p>
<h1 id="Colored_makepkg-like_functions">Colored makepkg-like functions</h1>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">msg_blue()·{</div><div class="line">    <span class="built_in">printf</span>·<span class="string">"<span class="variable">${BLUE}</span>==&gt;<span class="variable">${ALL_OFF}</span><span class="variable">${BOLD}</span>·<span class="variable">$1</span><span class="variable">${ALL_OFF}</span>\n"</span></div><div class="line">}</div><div class="line"></div><div class="line">note()·{</div><div class="line">    <span class="built_in">printf</span>·<span class="string">"<span class="variable">${BLUE}</span>==&gt;<span class="variable">${ALL_OFF}</span><span class="variable">${YELLOW}</span>·NOTE:<span class="variable">${ALL_OFF}</span><span class="variable">${BOLD}</span>·<span class="variable">$1</span><span class="variable">${ALL_OFF}</span>\n"</span></div><div class="line">}</div><div class="line"></div><div class="line">ALL_OFF=<span class="string">"<span class="variable">$(tput·sgr0)</span>"</span></div><div class="line">BOLD=<span class="string">"<span class="variable">$(tput·bold)</span>"</span></div><div class="line">BLUE=<span class="string">"<span class="variable">${BOLD}</span><span class="variable">$(tput·setaf·4)</span>"</span></div><div class="line">YELLOW=<span class="string">"<span class="variable">${BOLD}</span><span class="variable">$(tput·setaf·3)</span>"</span></div></pre></td></tr></table></figure>

]]></content>
    <category scheme="http://blog.zhanghai.me/tags/note/" term="Note"/>
    <category scheme="http://blog.zhanghai.me/tags/programming/" term="Programming"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[C 语言应试笔记]]></title>
    <link href="http://blog.zhanghai.me/c-exam-notes/"/>
    <id>http://blog.zhanghai.me/c-exam-notes/</id>
    <published>2015-02-15T10:38:12.000Z</published>
    <updated>2015-03-02T08:59:17.000Z</updated>
    <content type="html"><![CDATA[<h2 id="前言">前言</h2>
<p>这是我在大一时 C 语言课程考试前总结的坑们，每次相关考试前都会复习一次。如果你发现可以补充的地方，欢迎评论。</p>
<a id="more"></a>
<h2 id="正文">正文</h2>
<p><code>if</code> 语句没有花括号时只包含之后一行，如：</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (condition)</div><div class="line">    optionally_executed();</div><div class="line">    always_executed();</div></pre></td></tr></table></figure>

<p><code>if else</code>语句在没有花括号时，<code>else</code>总是匹配最近的<code>if</code>（Dangling Else），如：</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (a)</div><div class="line">    <span class="keyword">if</span> (b) do_b();</div><div class="line"><span class="keyword">else</span> do_c();</div></pre></td></tr></table></figure>

<p>实际上是：</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (a) {</div><div class="line">    <span class="keyword">if</span> (b) {</div><div class="line">        do_b();</div><div class="line">    } <span class="keyword">else</span> {</div><div class="line">        do_c();</div><div class="line">    }</div><div class="line">}</div></pre></td></tr></table></figure>

<p><code>switch</code>语句在缺少<code>break</code>时将 Fall through。</p>
<p>求值逻辑表达式时<code>真</code>为<code>1</code>，<code>假</code>为<code>0</code>。 判断逻辑表达式时，<code>非0</code>为<code>真</code>，<code>0</code>为<code>假</code>。</p>
<p><code>*p++</code>等价于<code>*(p++)</code>，因后自增<code>++</code>优先级高于解引用<code>*</code>。</p>
<p>注意整型除法结果被截断， <code>int n = 2; 1 / n == 0</code>。</p>
<p>注意本地变量需要初始化。</p>
<p>注意变量作用域屏蔽，如：</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">int</span> b;</div><div class="line"><span class="keyword">void</span> f() { <span class="keyword">int</span> a = <span class="number">0</span>, b = <span class="number">1</span>; }</div></pre></td></tr></table></figure>

<p>注意<code>int</code>溢出，若易发生溢出（如阶乘操作）应使用<code>long</code>或<code>double</code>代替。</p>
<p>负数的位移操作中符号位也参与位移；左操作数为负数的右移<code>&gt;&gt;</code>结果由实现定义，Turbo C为补1。</p>
<p><code>a/b</code>与<code>a%b</code>结果在<code>a</code>与<code>b</code>中有一个为负数时由实现定义，但保证<code>a / b * b + a % b</code>结果为<code>a</code>。</p>
<p>过滤回车结束的输入字符串：</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">i = <span class="number">0</span>;</div><div class="line"><span class="keyword">while</span> ((ch = getchar()) != <span class="string">'\n'</span>) {</div><div class="line">    <span class="keyword">if</span> (ch ... ) {</div><div class="line">        <span class="keyword">continue</span>;</div><div class="line">    }</div><div class="line">    str[i++] = ch;</div><div class="line">}</div><div class="line">str[i] = <span class="string">'\0'</span>;</div></pre></td></tr></table></figure>

<p>C语言二维数组存储采用Row-major方式，即在内存中存储为row1, row2, row3…，初始化时必须给出列数以确定行中元素个数，静态变量中未初始化元素自动为0，使用时可以将列数溢出到下一行，即偏移值计算为row_count * row + column。</p>
<p>注意分号：</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> (...);</div><div class="line">            do_something();</div></pre></td></tr></table></figure>

<p><code>do_something</code>只执行一次。</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (<span class="number">0</span>);</div><div class="line">    do_something();</div></pre></td></tr></table></figure>

<p><code>do_something</code>一定会被执行。</p>
<p><code>sizeof()</code>表达式的值在编译时确定。编译器不计算其中表达式的值，仅将其替换为对应类型。<code>sizeof</code>应用于数组时结果为 数组元素个数 * 元素大小，应用于指针时为指针变量长度（在32位机器上地址长度为32，故值为8；64位机器上为16）。</p>
<p>无论<code>x</code>是数组还是指针，在定义上编译器认为<code>x[3]</code>与<code>*(x+3)</code>是等价的。但根据x的类型是数组还是指针, 编译器将为<code>x+3</code>或<code>sizeof(x)</code>生成不同的代码。</p>
<p>类似<code>char []</code>类型的数组名被视为指向<code>char</code>的指针，<code>char[][]</code>也被视为指向<code>char[]</code>的指针。</p>
<p>注意<code>&amp;&amp;</code>或<code>||</code>具有<code>短路求值</code>特性，不会执行无必要求值的表达式。</p>
<p>注意含中文字符的文件应保存为<code>GB*</code>编码，例如<code>GB18030</code>。</p>
<p><code>strcpy(dst, src)</code>中目标在前，源在后。</p>
<p>注意<code>int a, b, c</code>，<code>c = 2a + b</code>非法（需要<code>*</code>）。</p>
<p>注意<code>x&lt;=y&lt;=z</code>意为<code>(x&lt;=y)&lt;=z</code>，意义非预期但合法。</p>
<p><code>scanf</code>遇到空白字符截止，为输入一行可使用<code>scanf(&quot;[^\n]&quot;,str)</code>或<code>gets()</code>。</p>
<p>注意：<code>scanf(&quot;%s&quot;, s)</code>输入<code>&quot;How are you?&quot;</code>遇到空格截断，只得到<code>How</code>。</p>
<p><code>strcpy(char *dst, char *src) { while(*dst++ = *src++); };</code>中<code>++</code>优先级高于<code>*</code></p>
<p><code>[]</code>、<code>()</code>优先级高于<code>*</code>，故<code>int *array[1]</code>等价于<code>(int *)array[1]</code>，为int指针的数组；<code>int (*p)[1]</code>为指向<code>int</code>数组的指针。</p>
<p>解读方法：以<code>int **a[1][2]</code>为例。从a出发，优先向右解读。（<a href="http://unixwiz.net/techtips/reading-cdecl.html" target="_blank" rel="external">来源</a>）</p>
<ol>
<li><code>a</code> is … <code>int</code></li>
<li><code>a</code> is <code>array</code> of 1 … <code>int</code></li>
<li><code>a</code> is <code>array</code> of 1 <code>array</code> of 2 … <code>int</code></li>
<li><code>a</code> is <code>array</code> of 1 <code>array</code> of 2 <code>pointer</code>s to … <code>int</code></li>
<li><code>a</code> is <code>array</code> of 1 <code>array</code> of 2 <code>pointer</code>s to <code>poiner</code> to <code>int</code></li>
</ol>
<p>优先级：<em>后置自增/自减</em>、函数调用、数组元素、结构成员 &gt; 前置自增/自减、正负、类型装换、<em>解引用</em>、取地址、数据类型大小、内存操作、（逻辑、位）非 &gt; 结构成员解引用 &gt; 乘除、取余 &gt; 加减 &gt; <em>位移</em> &gt; 比较 &gt; 等价 &gt; （逻辑、位）与、或、异或 &gt; 三元条件、（复合）赋值。</p>
<p>字符串字面值与字符常量中转义序列<code>\ddd</code>可以为1、2、3位8进制数（0~7），上限为377；<code>\xhh</code>可以为1、2位十六进制数（0~F）。</p>
<p>转义序列列表：</p>
<table>
<thead>
<tr>
<th>转移序列</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>\a</code></td>
<td><code>BEL</code></td>
</tr>
<tr>
<td><code>\b</code></td>
<td><code>BS</code></td>
</tr>
<tr>
<td><code>\f</code></td>
<td><code>FF</code></td>
</tr>
<tr>
<td><code>\n</code></td>
<td><code>LF</code></td>
</tr>
<tr>
<td><code>\r</code></td>
<td><code>CR</code></td>
</tr>
<tr>
<td><code>\t</code></td>
<td><code>HT</code></td>
</tr>
<tr>
<td><code>\v</code></td>
<td><code>VT</code></td>
</tr>
<tr>
<td><code>\\</code></td>
<td><code>\</code></td>
</tr>
<tr>
<td> <code>\&#39;</code></td>
<td><code>&#39;</code></td>
</tr>
<tr>
<td><code>\&quot;</code></td>
<td><code>&quot;</code></td>
</tr>
<tr>
<td><code>\0</code></td>
<td><code>NULL</code></td>
</tr>
<tr>
<td><code>\ddd</code></td>
<td>八进制</td>
</tr>
<tr>
<td><code>\xhh</code></td>
<td>十六进制</td>
</tr>
</tbody>
</table>
<p>0~255的数字也可以作为有效的字符取值。</p>
<p><code>int i = -1; printf(&quot;%d&quot;, (unsigned int)i);</code>打印出<code>-1</code>，因为<code>%d</code>为有符号整型。</p>
<p>使用草稿纸记录变量取值以计算程序输出，或对某些类型可理解程序意图猜测程序输出，或两者结合。</p>
<p><code>10^-6</code>表示为<code>1e-6</code>。</p>
<p>通过<code>memset(array,0,sizeof(array))</code>可以实现数组重初始化。（需要<code>string.h</code>）</p>
<p>宏<code>#</code>代表将此后的文本变为字符串；<code>##</code>代表连接文本；含有<code>#</code>与<code>##</code>的宏不进行参数展开，可利用包装宏展开。（<a href="http://learn.akae.cn/media/ch21s02.html" target="_blank" rel="external">参考</a>）</p>
<p>宏函数定义：</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="preprocessor">#<span class="keyword">define</span> func_name(var) \</span></div><div class="line"><span class="keyword">do</span> { \</div><div class="line">    do_something(); \</div><div class="line">} <span class="keyword">while</span> (<span class="number">0</span>)</div></pre></td></tr></table></figure>

<p>调用与函数调用一致：</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">func_name(var);</div></pre></td></tr></table></figure>

<p><code>scanf</code>中<code>f</code>为<code>float</code>，<code>lf</code>为<code>double</code>；<code>printf</code>中<code>f</code>为<code>double</code>；<code>lf</code>未定义。</p>
<p><code>,</code>逗号表达式对左侧表达式求值并丢弃返回值，之后对右侧表达式求值并返回其返回值。</p>
<p><code>#define SWAP(a,b) (a)^=(b)^=(a)^=(b)</code>可实现无临时变量的交换。</p>
<table>
<thead>
<tr>
<th>字符</th>
<th>ASCII</th>
</tr>
</thead>
<tbody>
<tr>
<td>0</td>
<td>48</td>
</tr>
<tr>
<td>A</td>
<td>65</td>
</tr>
<tr>
<td>a</td>
<td>97</td>
</tr>
</tbody>
</table>
<p>变量命名法则：<code>[A-Za-z_][A-Za-z0-9_]*</code>，且不含关键字。</p>
<p><code>auto</code>，<code>register</code>，<code>volatile</code>均为C关键字。</p>
<p><code>007</code>为八进制数字，注意范围为<em>0-7</em>，<code>0x0F</code>为十六进制数字。</p>
<p><code>strcat</code>实现：</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> <span class="built_in">strcat</span>(<span class="keyword">char</span> *str1, <span class="keyword">char</span> *str2) {</div><div class="line">    <span class="keyword">while</span> (*str && *++str);</div><div class="line">    <span class="keyword">while</span> (*str1++ = *str2++);</div><div class="line">}</div></pre></td></tr></table></figure>

]]></content>
    <category scheme="http://blog.zhanghai.me/tags/note/" term="笔记"/>
    <category scheme="http://blog.zhanghai.me/tags/programming/" term="编程"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[求是潮手机站 Android 客户端 V3]]></title>
    <link href="http://blog.zhanghai.me/qsc-mobile-android-v3/"/>
    <id>http://blog.zhanghai.me/qsc-mobile-android-v3/</id>
    <published>2014-12-16T11:33:35.000Z</published>
    <updated>2015-03-02T08:59:17.000Z</updated>
    <content type="html"><![CDATA[<p><img src="/qsc-mobile-android-v3/0.png" alt="零"></p>
<a id="more"></a>
<p><img src="/qsc-mobile-android-v3/1.png" alt="一"></p>
<p><img src="/qsc-mobile-android-v3/2.png" alt="二"></p>
<p><img src="/qsc-mobile-android-v3/3.png" alt="三"></p>
<p><img src="/qsc-mobile-android-v3/4.png" alt="四"></p>
]]></content>
    <category scheme="http://blog.zhanghai.me/tags/career/" term="职业"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[Arch Linux Notes]]></title>
    <link href="http://blog.zhanghai.me/arch-linux-notes/"/>
    <id>http://blog.zhanghai.me/arch-linux-notes/</id>
    <published>2014-11-03T06:18:11.000Z</published>
    <updated>2015-03-31T02:48:20.000Z</updated>
    <content type="html"><![CDATA[<p>This is my notebook for some small tips and tricks when using Arch Linux.</p>
<h2 id="Why_Arch_Linux?">Why Arch Linux?</h2>
<ul>
<li><p>It is fresh and simple in package dependency.</p>
</li>
<li><p>It has a powerful Arch User Repository and makes it easy for you to make/modify your package.</p>
</li>
<li><p>It has a detailed Arch Wiki comprising useful experiences and recommendations.</p>
</li>
<li><p>It gets you to learn the basic knowledge required to be a Linux user/administrator/programmer.</p>
</li>
</ul>
<a id="more"></a>
<h2 id="NTFS_partitions_auto_mounting">NTFS partitions auto mounting</h2>
<ol>
<li><p>Use <code>gnome-disks</code>, select partition and click the settings button below, click and then modify mount options in the popup menu.</p>
</li>
<li><p>Install <code>ntfs-config</code> and enable auto mounting.</p>
</li>
</ol>
<h2 id="Disable_Nvidia_graphics">Disable Nvidia graphics</h2>
<p>Install <code>bumblebee</code> and <code>bbswitch</code>.</p>
<p>And create <code>/etc/modprobe.d/nouveau_blacklist.conf</code> as follow, or else <code>bbswitch</code> will find Nvidia graphics in use by <code>nouveau</code>.</p>
<figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">blacklist nouveau</div></pre></td></tr></table></figure>

<p>You can verify <code>bbswitch</code> status by <code>cat /proc/acpi/bbswitch</code> and view its log by <code>dmesg | grep bbswitch</code>.</p>
<p>Note that <code>nouveau</code> kernel module is shipped in <code>linux</code>.</p>
<h2 id="Shrink_pacman_cache">Shrink pacman cache</h2>
<p>From <a href="https://wiki.archlinux.org/index.php/pacman" target="_blank" rel="external">Arch Wiki</a>:</p>
<p><code>paccache -r</code> deletes all the cached versions of each package except for the most recent 3 (without confirmation).</p>
<p><code>paccache -ruk0</code> removes all the cached versions of uninstalled packages.</p>
<p>See <code>paccache -h</code> for dry run and other parameters.</p>
<h2 id="Make_programs_use_proxy">Make programs use proxy</h2>
<p>There are several ways to make a program proxied. Part of the following comes from <a href="https://wiki.archlinux.org/index.php/proxy_settings" target="_blank" rel="external">Arch Wiki</a>.</p>
<ul>
<li><p>Environment variables</p>
<p>  Some programs respect proxy set via environment variables.</p>
  <!-- Unable to wrap a backtick code block in a list item. -->
  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">export</span> http_proxy=http://<span class="number">10.203</span>.<span class="number">0.1</span>:<span class="number">5187</span>/</div><div class="line"><span class="keyword">export</span> https_proxy=<span class="variable">$http_proxy</span></div><div class="line"><span class="keyword">export</span> ftp_proxy=<span class="variable">$http_proxy</span></div><div class="line"><span class="keyword">export</span> rsync_proxy=<span class="variable">$http_proxy</span></div><div class="line"><span class="keyword">export</span> no_proxy=<span class="string">"localhost,127.0.0.1,localaddress,.localdomain.com"</span></div></pre></td></tr></table></figure>

<p>  It is sometimes advised that you export these environment variables again, with their names upper cased.</p>
</li>
<li><p>Proxychains</p>
<p>  Install <a href="https://www.archlinux.org/packages/?name=proxychains-ng" target="_blank" rel="external">proxychains-ng</a>. Proxychains hooks some C library functions so that programs gets proxied. However the Java VM cannot be proxied this way.</p>
  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">proxychains &lt;YOUR_PROGRAM&gt;</div></pre></td></tr></table></figure>
</li>
<li><p>Java</p>
<p>  From <a href="http://docs.oracle.com/javase/8/docs/technotes/guides/net/proxies.html" target="_blank" rel="external">the documentation of Java</a>:</p>
<ul>
<li><p>HTTP</p>
<ul>
<li><p>http.proxyHost: the host name of the proxy server</p>
</li>
<li><p>http.proxyPort: the port number, the default value being 80.</p>
</li>
<li><p>http.nonProxyHosts: a list of hosts that should be reached directly, bypassing the proxy. This is a list of patterns separated by ‘|’. The patterns may start or end with a ‘*’ for wildcards. Any host matching one of these patterns will be reached through a direct connection instead of through a proxy.</p>
</li>
</ul>
</li>
<li><p>HTTPS</p>
<ul>
<li><p>https.proxyHost</p>
<p>https.proxyPort</p>
</li>
</ul>
</li>
<li><p>FTP</p>
<ul>
<li><p>ftp.proxyHost (Typo in official documentation)</p>
</li>
<li><p>ftp.proxyPort</p>
</li>
<li><p>ftp.nonProxyHosts</p>
</li>
</ul>
</li>
<li><p>SOCKS</p>
<ul>
<li><p>socksProxyHost for the host name of the SOCKS proxy server</p>
</li>
<li><p>socksProxyPort for the port number, the default value being 1080</p>
</li>
<li><p>socksProxyVersion for the version of the SOCKS protocol, the default being 5, and alternatively 4 can be specified.</p>
</li>
</ul>
<p>Note: socksProxyVersion and more properties are documented at <a href="http://docs.oracle.com/javase/8/docs/technotes/guides/net/properties.html" target="_blank" rel="external">another documentation of Java</a>.</p>
<p>Sample usage:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">java -Dhttp.proxyHost=webcache.example.com -Dhttp.proxyPort=<span class="number">8080</span> -Dhttp.nonProxyHosts=”localhost|host.example.com”</div></pre></td></tr></table></figure>

</li>
</ul>
</li>
</ul>
<p>Note that you can tunnel http(s) request to local socks client using <a href="https://www.archlinux.org/packages/?name=delegate" target="_blank" rel="external">DeleGate</a>.</p>
<h2 id="GNOME_proxy_setting">GNOME proxy setting</h2>
<p>You can utilize GNOME’s proxy setting in <code>Settings &gt; Network</code> even if you use <code>netctl</code> instead of <code>Network Manager</code>. Both HTTP and SOCKS proxy are supported.</p>
<p>Note that the proxy setting will also be read and set to corresponding environment variables by <code>gnome-terminal</code>, and no option is offered to turn this behavior off. To avoid setting proxy environment variables, reset the environment variables in your <code>.bashrc</code>.</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Unset global proxy set by gnome-terminal</span></div><div class="line"><span class="comment"># See https://github.com/GNOME/gnome-terminal/blob/master/src/terminal-util.c</span></div><div class="line"><span class="built_in">unset</span> http_proxy https_proxy ftp_proxy all_proxy no_proxy</div><div class="line"><span class="built_in">unset</span> HTTP_PROXY HTTPS_PROXY FTP_PROXY ALL_PROXY NO_PROXY</div></pre></td></tr></table></figure>

<h2 id="GNOME_online_account">GNOME online account</h2>
<p>You can log in your Google account and all the things will be configured and synchronized automatically to your laptop. It can be a huge boost for your work flow.</p>
<p>If you need a proxy to access Google, configure it as in the GNOME proxy setting section.</p>
<h2 id="DNS_and_resolvconf">DNS and resolvconf</h2>
<p>DNS is managed by <code>resolvconf</code> in Arch Linux. In order to supply your own DNS, edit <code>/etc/resolvconf.conf</code>.</p>
<p>There are two options you may normally want to specify:</p>
<figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="setting">name_servers=<span class="value">&lt;DNS1&gt; #Prepended into DNS list</span></span></div><div class="line"><span class="setting">name_servers_append=<span class="value"><span class="string">"&lt;DNS2&gt; &lt;DNS3&gt; ..."</span></span></span></div></pre></td></tr></table></figure>

<p>After modification, you may want to execute <code>resolvconf -u</code> to update <code>resolv.conf</code>.</p>
<p>Note that <code>dhcpd</code> also setup DNS for interfaces via <code>resolvconf</code>, in <code>/run/resolvconf/interface/&lt;INTERFACE&gt;</code>. You can override its behavior by executing <code>dhcpcd -S domain_name_servers=&lt;DNS&gt;</code>, or inside <code>dhcpcd.conf</code>.</p>
<h2 id="Create_software_AP_(Access_Point),_a-k-a-_virtual_WiFi">Create software AP (Access Point), a.k.a. virtual WiFi</h2>
<p>Install AUR package <code>create_ap</code>; you may want to remove the <code>wifi.service</code> it automatically creates when installed and use your own.</p>
<p>Check the Capabilities section in <code>iw list</code> along with <code>/usr/share/doc/hostapd/hostapd.conf</code> to determine <code>ht_capab</code>.</p>
<p>Note that in ZJU, ZJUWLAN occupies channel 1 and 6, so you’d better specify another channel.</p>
<p>Sample systemd service:</p>
<p>File: <code>&lt;YOUR_SSID&gt;@.service</code></p>
<figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="title">[Unit]</span></div><div class="line"><span class="setting">Description=<span class="value">Create AP service for &lt;YOUR_SSID&gt;</span></span></div><div class="line"><span class="setting">After=<span class="value">network.target</span></span></div><div class="line"></div><div class="line"><span class="title">[Service]</span></div><div class="line"><span class="setting">Type=<span class="value">simple</span></span></div><div class="line"><span class="setting">ExecStart=<span class="value">/usr/bin/create_ap -c <span class="number">13</span> -w <span class="number">2</span> -m nat --ieee80211n --ht_capab [HT40-][HT40+][SMPS-STATIC][GF][SHORT-GI-<span class="number">20</span>][SHORT-GI-<span class="number">40</span>][DSSS_CCK-<span class="number">40</span>] &lt;YOUR_WLAN_INTERFACE&gt; %i &lt;YOUR_SSID&gt; &lt;YOUR_PASSPHRASE&gt;</span></span></div><div class="line"><span class="setting">ExecStop=<span class="value">pkill hostapd</span></span></div><div class="line"><span class="setting">KillSignal=<span class="value">SIGINT</span></span></div><div class="line"><span class="setting">Restart=<span class="value"><span class="keyword">on</span>-failure</span></span></div><div class="line"><span class="setting">RestartSec=<span class="value"><span class="number">5</span></span></span></div><div class="line"></div><div class="line"><span class="title">[Install]</span></div><div class="line"><span class="setting">WantedBy=<span class="value">multi-user.target</span></span></div></pre></td></tr></table></figure>

<p>However on my own machine, I cannot share a secure (with password) network.</p>
<h2 id="Raise_inotify_limit_for_IntelliJ_IDEA">Raise inotify limit for IntelliJ IDEA</h2>
<p>Write the following line to <code>/etc/sysctl.d/99-sysctl.conf</code></p>
<figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">fs.inotify.max_user_watches = 524288</div></pre></td></tr></table></figure>

<h2 id="Sysrq">Sysrq</h2>
<p>Write the following line to <code>/etc/sysctl.d/99-sysctl.conf</code> to enable all the sysrq operations.</p>
<figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">kernel.sysrq = 1</div></pre></td></tr></table></figure>

<p>Reboot to make changes take effect, or execute <code>echo 1 &gt;/proc/sys/kernel/sysrq</code>.</p>
<p>Hold <code>Alt</code>, and press the following key sequence.</p>
<ol>
<li><code>SysRq</code></li>
<li><code>R</code>    unRaw</li>
<li><code>E</code>    tErminate</li>
<li><code>I</code>    kIll</li>
<li><code>S</code>    Sync</li>
<li><code>U</code>    Unmount</li>
<li><code>B</code>    reBoot</li>
</ol>
<p>Note that the key <code>C</code> can make your kernel panic immediately.</p>
<h2 id="Watch_FS_buffer_status">Watch FS buffer status</h2>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">watch grep <span class="operator">-e</span> Dirty: <span class="operator">-e</span> Writeback: /proc/meminfo</div></pre></td></tr></table></figure>

<p>You can execute <code>sync</code> to flush the buffer immediately.</p>
<h2 id="Map_Alt_Gr_(Right_Alt)_to_Alt_in_tty">Map Alt Gr (Right Alt) to Alt in tty</h2>
<p>From <a href="https://wiki.archlinux.org/index.php/Keyboard_Configuration_in_Console_%28%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87%29" target="_blank" rel="external">Arch Wiki</a></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> /usr/share/kbd/keymaps/i386/qwerty</div><div class="line">cp us.map.gz us-two-alt-keys.map.gz</div><div class="line">gunzip us-two-alt-keys.map.gz</div></pre></td></tr></table></figure>

<p>Edit <code>us-two-alt-keys.map</code>，replace <code>include &quot;linux-with-alt-and-altgr&quot;</code> with <code>include &quot;linux-with-two-alt-keys&quot;</code>.</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gzip us-two-alt-keys.map</div></pre></td></tr></table></figure>

<p>Edit <code>/etc/vconsole.conf</code>, replace <code>KEYMAP=us</code> with <code>KEYMAP=us-two-alt-keys</code>.</p>
<p>Reboot.</p>
<h2 id="Execute_previous_commands_in_bash">Execute previous commands in bash</h2>
<p><code>Ctrl+R</code> (I-search backward in emacs) can let you quickly execute command in your history.</p>
<p><code>!!</code> is substituted to be the last command in your history, but be careful when using it, for example <code>echo !!</code> will lead to unexpected behavior if <code>!!</code> is substituted to be <code>something &amp;&amp; poweroff</code>, then <code>poweroff</code> will be executed. To avoid such cases, always wrap it with quotes, like <code>echo &#39;!!&#39;</code>.</p>
<h2 id="Input_tab_or_newline_character_in_bash">Input tab or newline character in bash</h2>
<p><code>Ctrl+V</code> in bash works as <code>Ctrl+Q</code> in emacs, which will insert the next character literally.</p>
<h2 id="Install_font">Install font</h2>
<p>From <a href="https://wiki.archlinux.org/index.php/Fonts" target="_blank" rel="external">Arch Wiki</a>:</p>
<p>Drop your font files into <code>~/.fonts/</code>, <code>cd</code> into that directory, and execute the following command.</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">echo</span> -n <span class="string">"Updating font cache... "</span></div><div class="line">fc-cache &gt;/dev/null <span class="operator">-f</span></div><div class="line">mkfontscale</div><div class="line">mkfontdir</div><div class="line"><span class="built_in">echo</span> <span class="keyword">done</span></div></pre></td></tr></table></figure>

<h2 id="Handle_filesystem_package_update">Handle filesystem package update</h2>
<p>Use <code>diff</code> and your editor to manually merge your <code>passwd</code>, <code>shadow</code>, <code>group</code> and <code>gshadow</code> with the <code>*.pacnew</code> one(s), then execute <code>pwconv</code> and <code>groupconv</code> for updating the shadow ones (<code>*-</code>).</p>
<h2 id="Analyze_boot_time">Analyze boot time</h2>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">systemd-analyze blame</div><div class="line">systemd-analyze critical-chain</div></pre></td></tr></table></figure>

<p>For more information, see <code>man systemd-analyze</code>.</p>
<p>Sometimes man-db.service may slow down the booting drastically, see <a href="https://bbs.archlinux.org/viewtopic.php?pid=1409295" target="_blank" rel="external">this thread</a>, <a href="https://bugs.archlinux.org/task/41511" target="_blank" rel="external">this issue</a>, and <a href="https://bugs.archlinux.org/task/41688" target="_blank" rel="external">this issue</a>.</p>
<h2 id="System_backup_using_tar">System backup using tar</h2>
<p>Install AUR package <code>system-tar-and-restore</code>.</p>
<p>Example: <code>/etc/backup.conf</code></p>
<figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"># Configuration file for backup.sh script.</div><div class="line"># Place it in /etc/backup.conf and edit it to your needs.</div><div class="line"></div><div class="line"></div><div class="line"># Set the interface. Available options: cli dialog.</div><div class="line">BRinterface="cli"</div><div class="line"></div><div class="line"># Uncomment to disable colors.</div><div class="line">#BRnocolor="Yes"</div><div class="line"></div><div class="line"># Uncomment to enable verbose archiver output.</div><div class="line">#BRverb="Yes"</div><div class="line"></div><div class="line"># Set the destination directory. Default is /.</div><div class="line">BRFOLDER="/run/media/zh/ZH-HDD/"</div><div class="line"></div><div class="line"># Uncomment to set alternative archive name. Default is 'Backup-$(hostname)-$(date +%d-%m-%Y-%T)'.</div><div class="line">#BRNAME="my_backup"</div><div class="line"></div><div class="line"># Set the archiver. Available options: tar bsdtar.</div><div class="line">BRarchiver="tar"</div><div class="line"></div><div class="line"># Set the compressor. Available options: gzip bzip2 xz none.</div><div class="line">BRcompression="gzip"</div><div class="line"></div><div class="line"># Uncomment to keep /home's hidden files and folders only.</div><div class="line">#BRhome="No"</div><div class="line"></div><div class="line"># Uncomment to completely exclude /home directory. Use with BRhome="No".</div><div class="line">#BRhidden="No"</div><div class="line"></div><div class="line"># Uncomment to set additional archiver options.</div><div class="line">BR_USER_OPTS="--exclude=/var/cache/* --exclude=/home/zh/.cache/* --acls --xattrs"</div><div class="line"></div><div class="line"># Uncomment to disable genkernel check in gentoo.</div><div class="line">#BRgenkernel="No"</div><div class="line"></div><div class="line"># Uncomment to be quiet.</div><div class="line">#BRquiet="Yes"</div></pre></td></tr></table></figure>

<p>To start a backup, execute <code>backup.sh</code> as root.</p>
<h2 id="Rename_files_with_number">Rename files with number</h2>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">find -name <span class="string">'*.png'</span> | sort -n -r | gawk <span class="string">'{ printf "mv %s %03d.png\n", $0, NR }'</span> | bash</div></pre></td></tr></table></figure>

<p>100 files, reversely:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">find -name <span class="string">'*.png'</span> | sort -n -r | gawk <span class="string">'{ printf "mv %s %03d.png\n", $0, 100 - NR }'</span> | bash</div></pre></td></tr></table></figure>

<p>Starting with 100:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">find -name <span class="string">'*.png'</span> | sort -n -r | gawk <span class="string">'{ printf "mv %s %03d.png\n", $0, 100 + NR }'</span> | bash</div></pre></td></tr></table></figure>

<h2 id="Shell_calculator">Shell calculator</h2>
<p>From <a href="http://askubuntu.com/questions/378661/any-command-line-calculator-for-ubuntu" target="_blank" rel="external">an AskUbuntu question</a>.</p>
<p>Add the following lines to your <code>.bashrc</code>.</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">=() {</div><div class="line">input=<span class="string">"<span class="variable">${@//pi/π}</span>"</span></div><div class="line"><span class="built_in">echo</span> <span class="operator">-ne</span> <span class="string">"<span class="variable">$input</span>\nquit"</span> | gcalccmd | sed <span class="string">'s:^&gt; ::g'</span></div><div class="line">}</div></pre></td></tr></table></figure>

<p>For example, <code>= &quot;e^(i*pi)+asin(1)/90&quot;</code> gives <code>0</code>.</p>
<h2 id="GNOME_3_Start_up_applications">GNOME 3 Start up applications</h2>
<p>As of GNOME 3.12, <code>gnome-session-properties</code> is removed. Instead, launch <code>gnome-tweak-tool</code> and go to the corresponding tab. If you cannot add a start up application (the add button not responding), try launching <code>gnome-tweak-tool</code> from your terminal.</p>
<p>To truly manage your start up applications, go to <code>~/.config/autostart/</code> and edit the desktop files there.</p>
<h2 id="Pomodoro_for_GNOME_3">Pomodoro for GNOME 3</h2>
<p>Install AUR package <code>gnome-shell-pomodoro</code>.</p>
<h2 id="Clipboard_management_tool_for_GNOME_3">Clipboard management tool for GNOME 3</h2>
<p>Install AUR package <code>gpaste</code>, restart GNOME shell and enable the extension GPaste.</p>
<h2 id="Convert_video_to_animated_GIF">Convert video to animated GIF</h2>
<p>Adapted From <a href="http://dtbaker.net/random-linux-posts/convert-video-avi-mpeg-mp4-to-a-gif-animation-on-linux/" target="_blank" rel="external">dtbaker</a> and <a href="http://superuser.com/questions/556029/how-do-i-convert-a-video-to-gif-using-ffmpeg-with-reasonable-quality/556031" target="_blank" rel="external">a SuperUser question</a>.</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mkdir frames</div><div class="line">ffmpeg -ss &lt;HH:MM:SS[.XXX]|START_SECONDS&gt; -t&lt;HH:MM:SS[.XXX]|DURATION_SECONDS&gt; -i &lt;YOUR_VIDEO_FILE&gt; [-r &lt;FPS&gt;] <span class="operator">-s</span> &lt;WIDTH_NORMALLY_480&gt;x&lt;HEIGHT_NORMALLY_270&gt; ./frames/frame%<span class="number">04</span>d.png</div><div class="line">convert -delay &lt;<span class="number">100</span>/FPS&gt; -loop <span class="number">0</span> -layers Optimize ./frames/frame*.png output.gif</div></pre></td></tr></table></figure>

<p>If you need to compress your GIF file, use <code>gifsicle</code> or do it <a href="http://ezgif.com/optimize" target="_blank" rel="external">online</a>; for cropping, you also can use <a href="http://ezgif.com/crop" target="_blank" rel="external">this site</a> with option “Crop with Gifsicle” (ImageMagick output seems corrupted).</p>
<h2 id="Convert_SVG_to_PNG_(or_else)">Convert SVG to PNG (or else)</h2>
<pre><code><span class="comment">inkscape</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">export</span><span class="literal">-</span><span class="comment">png=</span>&lt;<span class="comment">OUTPUT_FILE</span>&gt; <span class="literal">-</span><span class="literal">-</span><span class="comment">export</span><span class="literal">-</span><span class="comment">width=</span>&lt;<span class="comment">WIDTH</span>&gt; <span class="literal">-</span><span class="literal">-</span><span class="comment">export</span><span class="literal">-</span><span class="comment">height=</span>&lt;<span class="comment">HEIGHT</span>&gt;
</code></pre><p><code>--export-dpi</code> is also available.</p>
<p>See <code>man inkscape</code> for more formats.</p>
<h2 id="Bitmap_operation">Bitmap operation</h2>
<p>Resize:</p>
<pre><code><span class="title">mogrify</span> -interpolate bicubic -resize <span class="number">50</span>% <span class="regexp">*.png</span>
</code></pre><p>Crop:</p>
<pre><code><span class="title">mogrify</span> -crop 1080x1845+<span class="number">0</span>+<span class="number">75</span> <span class="regexp">*.png</span>
</code></pre><h2 id="Merge_PDFs">Merge PDFs</h2>
<pre><code><span class="input"><span class="prompt">pdfunite &lt;SOURCE_PDF_FILES&gt;</span> &lt;<span class="constant">OUTPUT_PDF_FILE</span>&gt;</span>
</code></pre><h2 id="Convert_GB*_encoded_mp3_tag_to_Unicode">Convert GB* encoded mp3 tag to Unicode</h2>
<p>Install package <code>easytag</code>.</p>
<p>Note that EasyTag may become the handler for MIME type <code>inode/directory</code>, instead of your own file manager, say, Nautilus. You can delete the default association for Easytag and inode/directory in <code>~/.local/share/applications/mimeapps.list</code>, which is managed by <code>gvfs-mime</code>. See also the MIME type section.</p>
<h2 id="MIME_type_handling">MIME type handling</h2>
<p>In GNOME, there are two components managing the default application for a MIME type.</p>
<p>The first one, which is system-wide, can be queried or set via <code>xdg-mime</code>.</p>
<p>The second one, which is a per-user setting, can be queried or set via <code>gvfs-mime</code>, or manually editing <code>~/.local/share/applications/mimeapps.list</code>.</p>
<p>The second one takes precedence, and I guess <code>gvfs-mime</code> is implemented partially for GNOME Open with dialog.</p>
<h2 id="Google_URL_in_Google_Chrome">Google URL in Google Chrome</h2>
<p>Open <code>~/.config/google-chrome/Default/Preferences</code>, edit <code>last_known_google_url</code> and <code>last_prompted_google_url</code>.</p>
<p>If Chrome keeps reverting the url, visiting <a href="https://www.google.com/ncr" target="_blank" rel="external">https://www.google.com/ncr</a> may help.</p>
<h2 id="Screenshot">Screenshot</h2>
<p>Shortcut keys for screenshot is listed in the search category of its setting.</p>
<ol>
<li><p>Screen to file: <code>PrtSc</code></p>
</li>
<li><p>Window to file: <code>Alt</code> + <code>PrtSc</code></p>
</li>
<li><p>Area to file: <code>Shift</code> + <code>PrtSc</code></p>
</li>
<li><p>To clipboard instead: <code>Ctrl</code> + above</p>
</li>
<li><p>Record: <code>Shift + Ctrl + Alt + R</code></p>
</li>
</ol>
<p>To open a dialog for settings before screenshot, execute <code>gnome-screenshot -i</code>.</p>
<h2 id="Draw_graphs">Draw graphs</h2>
<p>LibreOffice Draw, and use its connectors instead of bare wires. Shift for regular shape and Ctrl + Mouse move for cloning can also be handy.</p>
<h2 id="Render_GFM">Render GFM</h2>
<p>Bash script from <a href="https://gist.github.com/jaburns/33d88f4aa99bb4ab6ad6" target="_blank" rel="external">jaburn’s gist</a>.</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="shebang">#!/usr/bin/env bash</span></div><div class="line"></div><div class="line">data=<span class="string">"<span class="variable">$(</span></span></div><div class="line">    cat "$1" \</div><div class="line">      | sed 's/"/\\"/g' \</div><div class="line">      | sed ':a;N;$!ba;s/\n/\\n/g' \</div><div class="line">)"</div><div class="line"></div><div class="line"><span class="keyword">if</span> [[ -z <span class="string">"<span class="variable">$2</span>"</span> ]]; <span class="keyword">then</span></div><div class="line">    context=<span class="string">''</span></div><div class="line"><span class="keyword">else</span></div><div class="line">    context=<span class="string">",\"context\":\"<span class="variable">$2</span>\""</span></div><div class="line"><span class="keyword">fi</span></div><div class="line"></div><div class="line"><span class="built_in">echo</span> <span class="string">'&lt;!DOCTYPE html&gt;'</span></div><div class="line"><span class="built_in">echo</span> <span class="string">'&lt;html&gt;&lt;head&gt;&lt;style&gt;'</span></div><div class="line">curl <span class="operator">-s</span> <span class="string">'https://gist.githubusercontent.com/andyferra/2554919/raw/2e66cabdafe1c9a7f354aa2ebf5bc38265e638e5/github.css'</span></div><div class="line"><span class="built_in">echo</span> <span class="string">'&lt;/style&gt;&lt;/head&gt;&lt;body&gt;'</span></div><div class="line">curl <span class="operator">-s</span> --data <span class="string">"{\"text\":\"<span class="variable">$data</span>\",\"mode\":\"gfm\"<span class="variable">$context</span>}"</span> <span class="string">'https://api.github.com/markdown'</span></div><div class="line"><span class="built_in">echo</span> <span class="string">'&lt;/body&gt;&lt;/html&gt;'</span></div></pre></td></tr></table></figure>

]]></content>
    <category scheme="http://blog.zhanghai.me/tags/note/" term="Note"/>
    <category scheme="http://blog.zhanghai.me/tags/software/" term="Software"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[Android 设计简明教程]]></title>
    <link href="http://blog.zhanghai.me/android-design-guide/"/>
    <id>http://blog.zhanghai.me/android-design-guide/</id>
    <published>2014-11-02T10:23:15.000Z</published>
    <updated>2015-03-02T08:59:17.000Z</updated>
    <content type="html"><![CDATA[<p><img src="/android-design-guide/android_design_elements_landing.png" alt="欢迎"></p>
<h2 id="零、前言">零、前言</h2>
<p>这是我作为一名 Android 开发者对 Android 设计的理解。在这个教程中，我主要参考<a href="http://developer.android.com/design/index.html" target="_blank" rel="external">官方的设计教程</a>，同时会加入一些自己的见解，并穿插一些实用资源。其中 <a href="http://www.geekpark.net/users/163712/topics" target="_blank" rel="external">NovaDNG</a> 的几篇文章对我影响较大，对此十分感谢。</p>
<p>在今年，Google 已经推出了新的 <a href="https://www.google.com/design/spec/material-design/introduction.html" target="_blank" rel="external">Material 设计标准</a>，对真实世界进行抽象的模拟，实现了在各个平台上的统一设计标准。我对这个标准的理念认同，然而在布局等细节上有些许分歧。诸位可以学习完 Android 设计后继续学习 Material 设计，作出自己的判断。</p>
<a id="more"></a>
<h2 id="一、设计原则">一、<a href="http://developer.android.com/design/get-started/principles.html" target="_blank" rel="external">设计原则</a></h2>
<p>为了对设计中的问题解决提供指导，设计师结合他们所追求的设计理念和实际的设计案例，制定了一系列的设计原则。</p>
<p>在学习 Android 设计的过程中，首先接触 Android 官方推荐的设计原则，可以在设计过程的初期就逐渐熟悉并得到运用。在这以后，经过长期的观察与设计，大家也可以渐渐总结出自己的设计原则。总而言之，有所坚持，有所变通。</p>
<p>以下是一些官方设计原则页面上提及的设计规范，但按照我个人的设计理念，重新进行了组织。</p>
<ol>
<li><p>一致</p>
<p> 一致性是众多原则所共同要求的特性。一致性符合人的认知习惯，无论是编程还是设计，一致性都能够带来清晰与优雅。</p>
<ul>
<li><p>保持应用界面的一致性。相似的内容应当拥有相似的布局，使得用户得以通过经验快速熟悉应用。</p>
</li>
<li><p>保持应用逻辑的一致性。相似的界面元素应当拥有相似的功能，使得用户能够举一反三，至于熟练。</p>
<p>  <img src="/android-design-guide/android_principles_looks_same.png" alt="一致的 ActionBar Spinner 导航"></p>
<p>  如上图 ActionBar 中的导航，都是通过点击 Spinner（下拉列表框）来更改主界面正在浏览内容的分类。</p>
</li>
<li><p>保持与 Android 界面的一致性。其他平台（如 iOS）拥有自己的设计风格，但 Android 也有着自己的视觉语言，即拟物。Android 用户在应用中期待的是和平台一致的用户界面，因此，请不要将其他平台的设计元素强行引入，相反，寻找并使用 Android 的表现方式。所谓入乡随俗。</p>
<p>  <img src="/android-design-guide/holo_everywhere.png" alt="Holo 主题中的控件"></p>
<p>  以上是 Holo 主题中的一些控件的展示，可以注意到整体设计风格与 iOS 的不同。这在之后会继续讨论。</p>
</li>
</ul>
</li>
<li><p>简约</p>
<p> 简约不是简陋，而是合适简化与强大功能的结合。</p>
<ul>
<li><p>使用拟真的界面元素，经过适当的抽象在实物与概念化间达到平衡，从而给用户以熟悉而优雅的体验。</p>
<p>  <img src="/android-design-guide/android_principles_real_objects.png" alt="通过拟真的交互方式将图标分组"></p>
<p>  拟真是 Android 的核心设计理念，这在之后的 Android 风格介绍中会进行说明。</p>
</li>
<li><p>简化界面的布局，突出常用的功能，而将不常用者隐藏于菜单等二级界面，降低用户的认知负担，加快学习进程。</p>
<p>  <img src="/android-design-guide/android_principles_information_when_need_it.png" alt="将功能装入 Action Overflow"></p>
</li>
<li><p>适当而不过度的界面动画，可以为操作过程增加趣味，同时间接说明界面间的逻辑关系。</p>
<p>  <img src="/android-design-guide/android_principles_delight.png" alt="启动器（主屏幕）翻页到达边缘的动画"></p>
</li>
</ul>
</li>
<li><p>友好</p>
<ul>
<li><p>让用户能够自定义应用，同时记住用户的偏好，让用户拥有在应用中的归属感。</p>
</li>
<li><p>为用户作出最佳的决定，但总是让用户最终确认。</p>
<p>  <img src="/android-design-guide/android_principles_decide_for_me.png" alt="自动打开 Beam"></p>
<p>  用户是为了方便生活而使用应用，因此，应用应当尽力简化用户的操作，根据当前的状态，提供最合理的默认值。同时，为了不让用户感到惊讶或受到侵犯，在执行决定之前总是征求他们的同意。</p>
</li>
<li><p>只在必要时提醒用户，避免打扰。</p>
<p>  <img src="/android-design-guide/android_principles_important_interruption.png" alt="日历在事件即将开始时的提醒是可以接受的"></p>
<p>  Android 中的通知栏是经常被国产应用滥用的地方，常常可以见到许多广告或是不需要的信息被应用探出在此。我自己，以及一批用户对此都深恶痛绝。</p>
<p>  通知栏中仅仅应当出现用户自己设定的内容，或者是真正具有足够重要性的内容。并且即便如此，还是应当尽量减少应用弹出的通知，避免对用户的打扰。</p>
</li>
<li><p>友好地提示用户的错误，隐藏技术细节，突出重要信息，提供易于操作的解决方案。</p>
<p>  <img src="/android-design-guide/android_principles_keep_it_brief.png" alt="简洁明了的提示文本"></p>
<p>  <img src="/android-design-guide/android_principles_error.png" alt="清晰详细的操作指示"></p>
</li>
<li><p>给予用户操作及时的反馈，让用户放心，并获得成就感。</p>
<p>  <img src="/android-design-guide/android_confirm_ack_acknowledge.png" alt="日历应用创建事件后的提醒"></p>
<p>  例如在修改成功后使用 Toast 提示，以及使用向导而非直接让用户填写长表单。关于进行提醒反馈的时机将会在之后进行详细讨论。</p>
</li>
</ul>
</li>
</ol>
<p>以上设计原则中，有很多与用户体验相关，因为设计的目标之一即是对用户友好。下面是一篇来源于 Android 官方视频的文章，可供参考。</p>
<blockquote class="callout"><div class="title">延伸阅读</div><a href="http://www.geekpark.net/topics/188876" target="_blank" rel="external">Android 应用中十大常见 UX 错误</a></blockquote>

<h2 id="二、设计样式">二、设计样式</h2>
<h3 id="风格">风格</h3>
<p>可以先来谈谈其他平台的设计风格。iOS 历史版本的设计风格是拟物，即尝试将实际物体的形状、材质，都在图像资源中体现，来为用户提供友好而熟悉的体验。而当前版本的  iOS 及 Windows Phone 当前的设计风格是扁平化的。其设计的目的是使用大量的纯色与矩形，减少界面元素装饰对用户精力的分散，突出交互元素的内容。</p>
<p>Android 的设计风格可以称之为拟真。拟真与拟物相似，但又并非拟物。拟真是对显示中物体的部分抽象，即保留人们熟悉的物体外形，而去除物体的具体材质，同时加上柔和的阴影。通过拟真的设计，可以避免由于完全拟物带来的认知过载，同时防止过于抽象带来的认知困难，这就是 Android 的设计风格。</p>
<p>顺便一提，在 Android 的设计中，一般建议阴影是从前上方 45 度角照明产生的，这在启动器图标和卡片等界面元素的设计中都有体现。</p>
<p><img src="/android-design-guide/android_iconography_launcher_example2.png" alt="Android 拟真风格的图标"></p>
<h3 id="主题"><a href="http://developer.android.com/design/style/themes.html" target="_blank" rel="external">主题</a></h3>
<p>Android 4 原生主题的名称为 Holo，具有暗色和亮色两个风格，以及一个暗色 ActionBar，亮色界面的变种风格。通过使用原生的主题，可以让应用程序快速获得与 Android 匹配的视觉体验。</p>
<p><img src="/android-design-guide/android_themes_holo_light.png" alt="Holo Light"></p>
<p><img src="/android-design-guide/android_themes_holo_dark.png" alt="Holo (Dark)"></p>
<p>将原生主题使用自己的配色进行修改，使得应用同时具有自己的特色，也是一种常见的方案。修改主题的任务较为繁琐，所幸可以使用 <a href="http://romannurik.github.io/AndroidAssetStudio/" target="_blank" rel="external">Android Asset Studio</a> 这个第三方工具进行主题的生成。</p>
<p><img src="/android-design-guide/android_asset_studio.png" alt="Android Asset Studio"></p>
<p>Android Asset Studio 可以进行图标和主题等资源的生成，极大地简化设计的实现过程。</p>
<p>在此之外，虽然 Holo 主题是 Android 设计的代表性元素，但也并不是 Android 设计的全部。具体的探讨，可以参考以下这篇文章。</p>
<blockquote class="callout"><div class="title">延伸阅读</div><a href="http://www.geekpark.net/topics/179488" target="_blank" rel="external">Android Design 与 Holo Theme</a></blockquote>

<h3 id="度量"><a href="http://developer.android.com/design/style/metrics-grids.html" target="_blank" rel="external">度量</a></h3>
<blockquote class="callout"><div class="title">提示</div>这一小节部分内容与 Android 中应用程序的具体实现有所关联，设计者在初期仅需了解即可。</blockquote>

<p>Android 的设备规格是碎片化的，因此 Android 也有专门设计的方式应对。</p>
<p>设备使用 DPI（Dots per Inch，每英寸像素数）表示屏幕像素密度，从而在不同清晰度的设备上呈现相通的物理大小。</p>
<p>相应地，在进行设计时，也有不同的单位可以选择。</p>
<ol>
<li><p>px（Pixel，像素）（少用）</p>
<p> px 是图像中最基本的单位，在显示器上固定显示为一个点的大小。因此，当屏幕上的像素密度不一致时，显示在屏幕上的实际物理大小则会过大或过小。</p>
</li>
<li><p>dp（Density-independent Pixel，曾写作 dip，密度独立像素）（用于图像）</p>
<p> Android 设计中通常以 dp 作为图像的尺寸单位，使得同一素材在不同设备屏幕上的大小等表现能够一致。</p>
</li>
<li><p>sp（Scale-independent Pixel，缩放独立像素）（用于文本）</p>
<p> Android 中允许用户自定义字体的缩放级别，所以产生了 sp 。当应用使用 sp 作为文本单位时，文本大小就可以跟随用户的文本缩放级别自动改变大小，因此 Android 中推荐所有文本的大小都使用 sp 作为单位指定。在默认缩放尺寸（1x）下，1sp 等于 1dp。</p>
</li>
</ol>
<p>为了实现密度独立，需要为不同 DPI 的设备适配不同大小的位图资源。如果仅仅对高质量的图像资源进行缩放，可能会导致图像的失真（例如边缘处）。</p>
<p>因此，Android 将不同的屏幕像素密度按照大小划分到了几个不同的分类（Bucket，桶）中。随着设备的更新，DPI 的分类也缓慢地随之增多。这些分类目前包括 LDPI（Low，一般已不再支持），MDPI（Medium），HDPI（High），XHDPI（eXtra High），XXHDPI（eXtra-eXtra High）（及 XXXHDPI，仅用于应用图标）。</p>
<p><img src="/android-design-guide/android_metrics_diagram.png" alt="Android 设备的屏幕尺寸"></p>
<p>开发者为每个分类提供相应大小的图像资源，在分类内部不同的像素密度之内则由 Android 操作系统自动进行缩放，如此就完成了对不同屏幕密度的适配。</p>
<p>这项工作较为繁琐，不过之前提到的 <a href="http://romannurik.github.io/AndroidAssetStudio/" target="_blank" rel="external">Android Asset Studio</a> 中也提供了上传高品质的图像，自动使用二次立方插值算法（较为平滑，但比线性缩放耗时稍多）进行缩放生成不同 DPI 所需图片，并按目录组织打包以供下载的功能。</p>
<h3 id="排版"><a href="http://developer.android.com/design/style/metrics-grids.html#48dp-rhythm" target="_blank" rel="external">排版</a></h3>
<p>Android 应用的界面普遍以 48dp 组织一个视觉单位，例如 ActionBar 的高度、列表的行高、文本框和按钮的高度。48dp 在物理设备上大约为 9mm 的长度，正好处于 7-10mm 的舒适触摸区域大小之内，同时可以在设备屏幕上保证合理的信息密度，更为重要的是，一致的元素高度可以让用户界面简约而优雅。</p>
<p><img src="/android-design-guide/android_metrics_forms.png" alt="48dp 旋律"></p>
<p>这称为 Android 的 48dp 韵律。</p>
<p>而 Android 中部件的间距常常为 8dp。这个边距常常被原生部件已经计算在内，然而有时也需要自己指定。</p>
<p><img src="/android-design-guide/android_metrics_closeup.png" alt="部件的布局"></p>
<p>可以看出，Android 中布局常常是以 4dp 的倍数作为长度，这也是推荐的实践。</p>
<h3 id="文字样式"><a href="http://developer.android.com/design/style/typography.html" target="_blank" rel="external">文字样式</a></h3>
<h4 id="字体">字体</h4>
<p><img src="/android-design-guide/android_typography_main.png" alt="英文字体排版"></p>
<p>Android 4.0 之后默认的英文无衬线字体 Roboto 已经具有多个变种，因此英文中也常常使用不同的字体来实现美观的排版。</p>
<p><img src="/android-design-guide/android_typography_variants@2x.png" alt="Roboto 字体集"></p>
<blockquote class="callout"><div class="title">下载</div><a href="http://developer.android.com/downloads/design/roboto-1.2.zip" target="_blank" rel="external">Roboto 字体集</a></blockquote>

<p>Android 中的中文字体名为 Droid Sans Fallback，顾名思义，只是一个回退的字体，虽然作为无衬线字体在移动端小型屏幕上拥有令人满意的视觉体验，但并没有如同英文字体那样多的风格与设计考虑。因此，中文常用的字体样式只有常规和粗体两种（中文斜体由算法生成，样式并不理想）。</p>
<h4 id="字号">字号</h4>
<p>字号的变化可以产生对比，但过多的字号会导致界面的混乱。Android 系统提供了以下几种推荐的字号。</p>
<p><img src="/android-design-guide/android_typography_sizes.png" alt="Android 系统字号"></p>
<h4 id="文字颜色">文字颜色</h4>
<p>Android 的 Holo 主题默认定义了多种字体颜色，在设计时也可以进行引用。</p>
<p><img src="/android-design-guide/android_typography_defaults.png" alt="Holo 主题文字颜色"></p>
<h3 id="色彩"><a href="http://developer.android.com/design/style/color.html" target="_blank" rel="external">色彩</a></h3>
<p>Android 拥有自己的标准调色盘（Palette），包括深浅两个风格的红、黄、绿、紫、蓝五色。</p>
<p><img src="/android-design-guide/android_color_palette.png" alt="Android 调色盘"></p>
<blockquote class="callout"><div class="title">下载</div><a href="http://developer.android.com/downloads/design/Android_Design_Color_Swatches_20120229.zip" target="_blank" rel="external">Android 调色盘</a></blockquote>

<p>在设计应用界面时，使用系统调色盘的颜色可以简化颜色挑选，同时获得与平台的一致性。</p>
<p>顺带一提，关于灰色，Android 制定了为人类视觉优化的两种灰色标准（猜测与人眼 Gamma 有关）。</p>
<ol>
<li><p>在亮色主题中，RGB 色彩为 #333333，不透明度为启用时 60%，禁用时 30%。</p>
</li>
<li><p>在暗色主题中，RGB 色彩为 #FFFFFF，不透明度为启用时 80%，禁用时 30%。</p>
</li>
</ol>
]]></content>
    <category scheme="http://blog.zhanghai.me/tags/tutorial/" term="教程"/>
    <category scheme="http://blog.zhanghai.me/tags/design/" term="设计"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[Key Sequence Transformation in X11]]></title>
    <link href="http://blog.zhanghai.me/key_sequence_transformation_in_x11/"/>
    <id>http://blog.zhanghai.me/key_sequence_transformation_in_x11/</id>
    <published>2014-11-01T05:04:38.000Z</published>
    <updated>2015-03-13T07:07:44.000Z</updated>
    <content type="html"><![CDATA[<p>This article is originally titled <a href="https://github.com/DreaminginCodeZH/xkeymacs/issues/1" target="_blank" rel="external">Abandoning treatment for X11</a>, for my <a href="https://github.com/DreaminginCodeZH/xkeymacs" target="_blank" rel="external">xkeymacs</a> project.</p>
<a id="more"></a>
<hr>
<p>I think I’ve done all that’s possible to achieve with X11 API in this project, but there still remain a bunch of issues. This document is about what they are and why they may not be resolved as an X11 application.</p>
<p>Before we start with the issues, we need clarify the situation first.</p>
<p>There are three ways to grab key events in X11: <code>XGrabKeyboard</code>, <code>XGrabKey</code> with <code>GrabModeSync</code> and <code>XGrabKey</code> with <code>GrabModeAsync</code>. In the meantime, there is only one way to send a key event in X11: <code>XTestFakeKeyEvent</code>, while <code>XSendEvents</code> marks events sent as synthesized and a bunch of applications (such as <code>xterm</code>) ignore events with this flag for some security reasons, according to various sources.</p>
<p>If you want to replay the key event you just grabbed, use <code>XAllowEvents</code> with <code>ReplayKeyboard</code>. This requires the key event to come from <code>XGrabKey</code> or a previous <code>XAllowEvents</code> with <code>SyncKeyboard</code>, but not from a <code>XGrabKeyboard</code>.</p>
<p>You cannot use <code>XGrabKeyboard</code> along with <code>XTestFakeKeyEvent</code> because the former sets an active grab and it will receive the key event faked by yourself. If you want to <code>XUngrabKeyboard</code> and wait for <code>XTestFakeKeyEvent</code> to accomplish, sadly there seems to be no way. <code>XFlush</code> flushes your own request to X server, while <code>XSync</code> flushes and make X server process all requests and generate events, but <strong>not handling</strong> them, according to <a href="https://motif.ics.com/forum/xsync-xflush" target="_blank" rel="external">this thread</a>.</p>
<p><code>XGrabKey</code> is called a passive grab. It is activated and then behaves like <code>XGrabKeyboard</code> when the registered key and modifier combination is found, and actually ungrabbed after the <code>KeyRelease</code> event of that combination (see <a href="http://lists.freedesktop.org/archives/xorg/2006-May/015090.html" target="_blank" rel="external">this mail</a>). So if you send a key in <code>KeyPress</code> event, you <em>will</em> intercept the key you just sent. To workaround this issue, you can do <code>XUngrabKeyboard</code> before you send the key. This results in garbage <code>KeyRelease</code> events sent to the focused window, however it is normally ignored. Another workaround would be sending the key in <code>KeyRelease</code> event, which works, but is not the desired behavior.</p>
<p>Note that if you replay a key event with <code>XAllowEvents</code> in <code>KeyPress</code>, It will also result in garbage <code>KeyRelease</code> events, because according to the documentation the replayed event will ignore any key grabs set by any client.</p>
<p>So here is the first issue.</p>
<ul>
<li><p>Grabbed keys sent by <code>XTestFakeKeyEvent</code> cannot be replayed</p>
<p>  When testing the application, I was surprised to find that when I sent keys that are also grabbed by myself and deliberately do the replay in <code>KeyPress</code>, I still receive <code>KeyRelease</code> events for them. That is to say the <code>XAllowEvent</code> replay failed. I guess this is because <code>XTestFakeKeyEvent</code> is part of the <code>XTest</code> extension and is aimed for automating testing, so the internal implementation did not take this situation into consideration. So there may be no workaround for this.</p>
<p>  An example for this issue can be when I grabbed <code>Control+X</code> for C-x mode and I send <code>Control+X</code> inside the handling of <code>Control+W</code></p>
</li>
</ul>
<p>When sending some key combination, one have to know the status of the modifier keys and adjust them, send the key, and then restore them. This is expected to happen in a very short period of time so the user won’t notice. To accomplish this, <code>XQueryKeymap</code> and multiple <code>XTestFakeKeyEvent</code> is used.</p>
<p>And the second issue.</p>
<ul>
<li><p>Sending keys containing <code>F1</code>~<code>F8</code> causes user to be switched to <code>tty</code></p>
<p>  When sending keys containing <code>F3</code> or <code>F4</code>, sometimes I got switched to <code>tty</code> by an unexpected <code>Control+Alt+F3/4</code> combination. This happens for most of the time when I send <code>Control+F4</code> for <code>(Control+X) k</code>. You can see that there is nothing about <code>Alt</code>, but still I was almost always switched to <code>tty4</code>, however <code>xev</code> reported the expected key sequence for this situation. The underlying logic is unknown, it may have something to do with <code>tty</code> switching hot key implementation.</p>
</li>
</ul>
<p>And some other issues.</p>
<ul>
<li><p>Auto repeat cannot work if we intercept the <code>KeyPress</code> event</p>
<p>  X server generates continuous paired <code>KeyPress</code> and <code>KeyRelease</code> event for clients if a key is physically held for a long time. However if we intercept the first <code>KeyPress</code> event, and send another key event, then the auto repeat just disappears. There doesn’t seem to be a solution for this issue.</p>
</li>
<li><p>Efficiency</p>
<p>  There is a perceptible (annoying but bearable) pause when using the above stated approach to implement keyboard macros. Seems no way to resolve either.</p>
<p>  Note that using <code>GrabModeAsync</code> helps to improve the performance a little bit, but it results in various problems that I haven’t investigated yet.</p>
</li>
</ul>
<p>So the conclusion is that, while X11 provided some API for keyboard event operations, it is  vague in documentation and working mechanism, and clearly not designed, nor suitable for translating key sequences into others. This may be the reason why almost no such project like this is known.</p>
<p>For an alternative API, some people in a mailing list suggested <a href="https://developer.gnome.org/libatspi/stable/libatspi-atspi-registry.html" target="_blank" rel="external">Atspi</a>, which I haven’t tried out myself.</p>
<hr>
<p>UPDATE:</p>
<p>Later I found out that this can be achieved with <code>evdev</code> and <code>uinput</code>.</p>
<p>For a python implementation, see my <a href="https://github.com/DreaminginCodeZH/pykeymacs" target="_blank" rel="external">pykeymacs</a>.</p>
]]></content>
    <category scheme="http://blog.zhanghai.me/tags/programming/" term="Programming"/>
    <category scheme="http://blog.zhanghai.me/tags/linux/" term="Linux"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[你好，世界！]]></title>
    <link href="http://blog.zhanghai.me/hello-world/"/>
    <id>http://blog.zhanghai.me/hello-world/</id>
    <published>2014-10-31T05:45:52.000Z</published>
    <updated>2015-03-02T08:59:17.000Z</updated>
    <content type="html"><![CDATA[<p>你好，世界！</p>
]]></content>
    <category scheme="http://blog.zhanghai.me/categories/other/" term="其他"/>
  </entry>
</feed>

<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>梦断代码</title>
  <subtitle>乐天知命</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.zhanghai.me/"/>
  <updated>2016-08-05T15:54:17.018Z</updated>
  <id>http://blog.zhanghai.me/</id>
  
  <author>
    <name>张海</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>为 Android 项目使用 Travis CI 并发布持续集成版本</title>
    <link href="http://blog.zhanghai.me/use-travis-ci-on-android-project-and-publish-ci-builds/"/>
    <id>http://blog.zhanghai.me/use-travis-ci-on-android-project-and-publish-ci-builds/</id>
    <published>2016-08-05T09:50:15.000Z</published>
    <updated>2016-08-05T15:54:17.018Z</updated>
    
    <content type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;# 前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言 &lt;/h2&gt;&lt;p&gt;Travis CI 是 GitHub 上开源项目采用持续集成的常见选择。为了给&lt;a href=&quot;https://github.com/DreaminginCodeZH/Douya&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; 豆芽 &lt;/a&gt; 提供持续集成版本用于公开测试，我配置了 Travis CI，并自己编写了脚本将构建结果发布到另一个空项目的 Release 中，并将其间的过程和遇到的问题记录于此。&lt;/p&gt;
&lt;p&gt;Travis CI 构建 Android 项目的时间较长，因此调试配置时十分耗时。希望我的经验能对他人有所帮助。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;Travis-CI&quot;&gt;&lt;a href=&quot;#Travis-CI&quot; class=&quot;headerlink&quot; title=&quot;Travis CI&quot;&gt;&lt;/a&gt;Travis CI&lt;/h2&gt;&lt;p&gt;Travis CI 分为免费版（&lt;a href=&quot;https://travis-ci.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;travis-ci.org&lt;/a&gt;）和付费版（&lt;a href=&quot;https://travis-ci.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;travis-ci.com&lt;/a&gt;），两者之间没有相互的链接或说明，第一次配置时容易混淆。开源项目选择免费版即可。配置过程可以参考官方的 &lt;a href=&quot;https://docs.travis-ci.com/user/getting-started/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Getting Started&lt;/a&gt; 和 &lt;a href=&quot;https://docs.travis-ci.com/user/languages/android&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Android 项目配置&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;关于 Android 项目有一些较为微妙的配置问题，我自己调试并查阅了一些 Issue 方才解决。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;为了能够找到并下载最新的 Build Tools，需要启用最新版本的 Tools（&lt;code&gt;- tools&lt;/code&gt;）。&lt;/li&gt;
&lt;li&gt;Lint 过程中如果 Platform Tools 版本低于 SDK 版本则会报错，需要启用最新版本的 Platform Tools（&lt;code&gt;-platform-tools&lt;/code&gt;）。&lt;/li&gt;
&lt;li&gt;为了能够找到并下载最新的 Platform Tools，需要已有最新的 Tools，因此与官方给出的样例不同，需要将 &lt;code&gt;- tools&lt;/code&gt; 放置在 &lt;code&gt;- platform-tools&lt;/code&gt; 之前。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;因此我的 Android 部分最终配置如下：&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;android:&amp;#10;  components:&amp;#10;    - tools&amp;#10;    - platform-tools&amp;#10;    - build-tools-24.0.1&amp;#10;    - android-24&amp;#10;    - extra-android-m2repository&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;详细配置可以参考我的 &lt;a href=&quot;https://github.com/DreaminginCodeZH/Douya/blob/master/.travis.yml&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;.travis.yml&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&quot;启用构建缓存&quot;&gt;&lt;a href=&quot;# 启用构建缓存&quot; class=&quot;headerlink&quot; title=&quot;启用构建缓存&quot;&gt;&lt;/a&gt;启用构建缓存 &lt;/h2&gt;&lt;p&gt;Gradle 是一个为缓存优化过的工具，因此官方也提供了相应的&lt;a href=&quot;https://docs.travis-ci.com/user/languages/android#Caching&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; 开启缓存的方法&lt;/a&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;before_cache:&amp;#10;  - rm -f $HOME/.gradle/caches/modules-2/modules-2.lock&amp;#10;cache:&amp;#10;  directories:&amp;#10;    - $HOME/.gradle/caches/&amp;#10;    - $HOME/.gradle/wrapper/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;应用签名&quot;&gt;&lt;a href=&quot;# 应用签名&quot; class=&quot;headerlink&quot; title=&quot;应用签名&quot;&gt;&lt;/a&gt;应用签名 &lt;/h2&gt;&lt;p&gt; 为了给 CI 版本的 APK 签名，需要提供相应的 keystore 和密码。Travis CI 提供了 &lt;a href=&quot;https://docs.travis-ci.com/user/environment-variables/#Defining-Variables-in-Repository-Settings&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; 在设置中定义环境变量 &lt;/a&gt; 的方式来传递低敏感级的信息。&lt;/p&gt;
&lt;p&gt;基于以上文档和一些搜索结果，并参考过 &lt;a href=&quot;https://github.com/shadowsocks/shadowsocks-android&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Shadowsocks-Android 的配置方式&lt;/a&gt;，我将我的签名配置编写为了从 &lt;code&gt;signing.properties&lt;/code&gt;、环境变量、终端输入三个层级进行获取的方式。&lt;/p&gt;
&lt;p&gt;以下是我的 &lt;code&gt;signing.gradle&lt;/code&gt;：&lt;/p&gt;
&lt;figure class=&quot;highlight gradle&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;android &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    signingConfigs &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        release &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Properties signingProperties = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Properties()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            signingProperties.load(rootProject.&lt;span class=&quot;keyword&quot;&gt;file&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;signing.properties&quot;&lt;/span&gt;).newDataInputStream())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            storeFile rootProject.&lt;span class=&quot;keyword&quot;&gt;file&lt;/span&gt;(signingProperties.get(&lt;span class=&quot;string&quot;&gt;&quot;storeFile&quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            storePassword signingProperties.get(&lt;span class=&quot;string&quot;&gt;&quot;storePassword&quot;&lt;/span&gt;) ?: System.getenv(&lt;span class=&quot;string&quot;&gt;&quot;STORE_PASSWORD&quot;&lt;/span&gt;) ?: System.console()?.readLine(&lt;span class=&quot;string&quot;&gt;&quot;\nStore password:&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            keyAlias signingProperties.get(&lt;span class=&quot;string&quot;&gt;&quot;keyAlias&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            keyPassword signingProperties.get(&lt;span class=&quot;string&quot;&gt;&quot;keyPassword&quot;&lt;/span&gt;) ?: System.getenv(&lt;span class=&quot;string&quot;&gt;&quot;KEY_PASSWORD&quot;&lt;/span&gt;) ?: System.console()?.readLine(&lt;span class=&quot;string&quot;&gt;&quot;\nKey password:&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在 Android Studio 中进行 Gradle 同步时，&lt;code&gt;System.console()&lt;/code&gt; 返回 &lt;code&gt;null&lt;/code&gt;，因而密码均为 &lt;code&gt;null&lt;/code&gt;，不会中断同步过程，也不影响调试版本的构建。&lt;/p&gt;
&lt;p&gt;我创建了 &lt;code&gt;signing.properties&lt;/code&gt; 和 &lt;code&gt;signing.properties.travis&lt;/code&gt; 两个文件，在前者中填写 keystore 的路径并加入 &lt;code&gt;.gitignore&lt;/code&gt;，而将后者在 &lt;code&gt;.travis.yml&lt;/code&gt; 的 &lt;code&gt;before_script&lt;/code&gt; 中复制为 &lt;code&gt;signing.properties&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;而在 Travis CI 的设置中，添加 &lt;code&gt;STORE_PASSWORD&lt;/code&gt; 和 &lt;code&gt;KEY_PASSWORD&lt;/code&gt; 两个环境变量即可。建议在环境变量值的两端加上单引号以避免特殊字符被 shell 错误处理。&lt;/p&gt;
&lt;h2 id=&quot;获取版本信息&quot;&gt;&lt;a href=&quot;# 获取版本信息&quot; class=&quot;headerlink&quot; title=&quot;获取版本信息&quot;&gt;&lt;/a&gt;获取版本信息 &lt;/h2&gt;&lt;p&gt; 直接在 &lt;code&gt;.travis.yml&lt;/code&gt; 中调用 &lt;code&gt;git describe&lt;/code&gt; 或 &lt;code&gt;git log&lt;/code&gt; 等命令是无法成功的，因为 Travis CI 采用了 &lt;code&gt;git clone --depth=50&lt;/code&gt; 来进行 clone。相应地，需要先执行 &lt;code&gt;git fetch --unshallow&lt;/code&gt; 来完成 clone。&lt;/p&gt;
&lt;p&gt;我采用了 &lt;a href=&quot;http://semver.org/lang/zh-CN/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; 语义化版本&lt;/a&gt;（Semver）来命名版本。因此，我的版本名称采用了如下方式获取：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;version=&lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$(git describe --long --tags | sed&#39;s/^v//;s/-\([0-9]\+\)-g\([0-9a-f]\+\)/+\1.\2/&#39;)&lt;/span&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;例如，在名为 &lt;code&gt;1.0.0-alpha&lt;/code&gt; 的 tag 后第 227 次短哈希值为 &lt;code&gt;886f8ce&lt;/code&gt; 的 commit，对应的版本名即为 &lt;code&gt;1.0.0-alpha.1+227.886f8ce&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;然后使用 &lt;code&gt;sed -i &amp;#39;s/versionName .*/versionName &amp;quot;&amp;#39;&amp;quot;${version}&amp;quot;&amp;#39;&amp;quot;/&amp;#39; app/build.gradle&lt;/code&gt; 即可更新 &lt;code&gt;build.gradle&lt;/code&gt; 中的 &lt;code&gt;versionName&lt;/code&gt; 字段。&lt;/p&gt;
&lt;h2 id=&quot;上传至 -Release&quot;&gt;&lt;a href=&quot;# 上传至 -Release&quot; class=&quot;headerlink&quot; title=&quot;上传至 Release&quot;&gt;&lt;/a&gt;上传至 Release&lt;/h2&gt;&lt;p&gt;GitHub 提供了在 Release 中上传二进制构建输出的功能。然而，如果直接在项目仓库中为每次 commit 添加 Release（和响应的 tag）则未免过于杂乱，因此我选择了新建 &lt;a href=&quot;https://github.com/DreaminginCodeZH/DouyaCiBuilds&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; 一个只有 README 的仓库&lt;/a&gt;，并将所有持续集成版本的 Release 创建在此仓库中。&lt;/p&gt;
&lt;p&gt;为了实现此功能，我选择了通过 curl 调用 GitHub API 的方式来完成。经过查阅文档和大量的调试，我的脚本最终是如下编写的：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;shebang&quot;&gt;#!/bin/bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;-e&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;repo=&lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$1&lt;/span&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;shift&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;Repo: &lt;span class=&quot;variable&quot;&gt;$&amp;#123;repo&amp;#125;&lt;/span&gt;&quot;&lt;/span&gt; &amp;gt;&amp;amp;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;version=&lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$1&lt;/span&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;shift&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;Version: &lt;span class=&quot;variable&quot;&gt;$&amp;#123;version&amp;#125;&lt;/span&gt;&quot;&lt;/span&gt; &amp;gt;&amp;amp;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tag=&lt;span class=&quot;string&quot;&gt;&quot;v&lt;span class=&quot;variable&quot;&gt;$&amp;#123;version&amp;#125;&lt;/span&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;Tag: &lt;span class=&quot;variable&quot;&gt;$&amp;#123;tag&amp;#125;&lt;/span&gt;&quot;&lt;/span&gt; &amp;gt;&amp;amp;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;body=&lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$1&lt;/span&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;shift&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;Body: &lt;span class=&quot;variable&quot;&gt;$&amp;#123;body&amp;#125;&lt;/span&gt;&quot;&lt;/span&gt; &amp;gt;&amp;amp;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Get old release by tag&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;Getting old release by tag...&quot;&lt;/span&gt; &amp;gt;&amp;amp;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;response=&lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$(curl -H&quot;Authorization: token $&amp;#123;GITHUB_ACCESS_TOKEN&amp;#125;&quot;&quot;https://api.github.com/repos/$&amp;#123;repo&amp;#125;/releases/tags/$&amp;#123;tag&amp;#125;&quot;)&lt;/span&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$&amp;#123;response&amp;#125;&lt;/span&gt;&quot;&lt;/span&gt; &amp;gt;&amp;amp;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;old_release_id=&lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$(echo &quot;$&amp;#123;response&amp;#125;&quot; | jq -r &#39;.id&#39;)&lt;/span&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; [[&lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$&amp;#123;old_release_id&amp;#125;&lt;/span&gt;&quot;&lt;/span&gt; != &lt;span class=&quot;string&quot;&gt;&quot;null&quot;&lt;/span&gt; ]]; &lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# Delete old release&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;Deleting old release...&quot;&lt;/span&gt; &amp;gt;&amp;amp;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    response=&lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$(curl -X &#39;DELETE&#39; -H &quot;Authorization: token $&amp;#123;GITHUB_ACCESS_TOKEN&amp;#125;&quot; &quot;https://api.github.com/repos/$&amp;#123;repo&amp;#125;/releases/$&amp;#123;old_release_id&amp;#125;&quot;)&lt;/span&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$&amp;#123;response&amp;#125;&lt;/span&gt;&quot;&lt;/span&gt; &amp;gt;&amp;amp;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Create release&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;Creating release...&quot;&lt;/span&gt; &amp;gt;&amp;amp;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;response=&lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$(curl -H &quot;Authorization: token $&amp;#123;GITHUB_ACCESS_TOKEN&amp;#125;&quot; -H &#39;Content-Type: application/json&#39; --data &quot;&amp;#123; \&quot;tag_name\&quot;: $(echo -n&quot;$&amp;#123;tag&amp;#125;&quot;| jq -s -R -r @json)&lt;/span&gt;, \&quot;name\&quot;: &lt;span class=&quot;variable&quot;&gt;$(echo -n&quot;$&amp;#123;tag&amp;#125;&quot;| jq -s -R -r @json)&lt;/span&gt;, \&quot;body\&quot;: &lt;span class=&quot;variable&quot;&gt;$(echo -n&quot;$&amp;#123;body&amp;#125;&quot;| jq -s -R -r @json)&lt;/span&gt; &amp;#125;&quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;https://api.github.com/repos/&lt;span class=&quot;variable&quot;&gt;$&amp;#123;repo&amp;#125;&lt;/span&gt;/releases&quot;&lt;/span&gt;)&lt;span class=&quot;string&quot;&gt;&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo&quot;&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;$&amp;#123;response&amp;#125;&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&quot;&amp;gt;&amp;amp;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;upload_url=&quot;&lt;/span&gt;$(&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$&amp;#123;response&amp;#125;&lt;/span&gt;&quot;&lt;/span&gt; | jq -r &lt;span class=&quot;string&quot;&gt;&#39;.upload_url&#39;&lt;/span&gt; | sed &lt;span class=&quot;string&quot;&gt;&#39;s/&amp;#123;?name,label&amp;#125;$//g&#39;&lt;/span&gt;)&lt;span class=&quot;string&quot;&gt;&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo&quot;&lt;/span&gt;Upload url: &lt;span class=&quot;variable&quot;&gt;$&amp;#123;upload_url&amp;#125;&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&quot;&amp;gt;&amp;amp;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for file in&quot;&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;$@&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&quot;; do&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # Upload file&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    echo&quot;&lt;/span&gt;Uploading file: &lt;span class=&quot;variable&quot;&gt;$&amp;#123;file&amp;#125;&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&quot;&amp;gt;&amp;amp;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    name=&quot;&lt;/span&gt;$(basename &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$&amp;#123;file&amp;#125;&lt;/span&gt;&quot;&lt;/span&gt;)&lt;span class=&quot;string&quot;&gt;&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    response=&quot;&lt;/span&gt;$(curl -H &lt;span class=&quot;string&quot;&gt;&quot;Authorization: token &lt;span class=&quot;variable&quot;&gt;$&amp;#123;GITHUB_ACCESS_TOKEN&amp;#125;&lt;/span&gt;&quot;&lt;/span&gt; -H &lt;span class=&quot;string&quot;&gt;&quot;Content-Type: &lt;span class=&quot;variable&quot;&gt;$(file -b --mime-type&quot;$&amp;#123;file&amp;#125;&quot;)&lt;/span&gt;&quot;&lt;/span&gt; --data-binary &lt;span class=&quot;string&quot;&gt;&quot;@&lt;span class=&quot;variable&quot;&gt;$&amp;#123;file&amp;#125;&lt;/span&gt;&quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$&amp;#123;upload_url&amp;#125;&lt;/span&gt;?name=&lt;span class=&quot;variable&quot;&gt;$(echo -n&quot;$&amp;#123;name&amp;#125;&quot;| jq -s -R -r @uri)&lt;/span&gt;&quot;&lt;/span&gt;)&lt;span class=&quot;string&quot;&gt;&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    echo&quot;&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;$&amp;#123;response&amp;#125;&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&quot;&amp;gt;&amp;amp;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;done&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;而设置 &lt;code&gt;GITHUB_ACCESS_TOKEN&lt;/code&gt; 环境变量后的用法则如：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;./upload-to-releases.sh &lt;span class=&quot;string&quot;&gt;&#39;DreaminginCodeZH/DouyaCiBuilds&#39;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$&amp;#123;version&amp;#125;&lt;/span&gt;&quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$&amp;#123;description&amp;#125;&lt;/span&gt;&quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;douya-ci-&lt;span class=&quot;variable&quot;&gt;$&amp;#123;version&amp;#125;&lt;/span&gt;.apk&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;其他&quot;&gt;&lt;a href=&quot;# 其他&quot; class=&quot;headerlink&quot; title=&quot;其他&quot;&gt;&lt;/a&gt;其他 &lt;/h2&gt;&lt;p&gt; 如果无法确定错误原因，就多加些 &lt;code&gt;echo&lt;/code&gt; 或者 &lt;code&gt;cat&lt;/code&gt; 吧。&lt;/p&gt;
&lt;p&gt;如果希望在 Lint 失败时查看输出，可以在 &lt;code&gt;after_failure&lt;/code&gt; 中加入 &lt;code&gt;cat app/build/outputs/lint-results-*.html&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;我所采用的配置都可以在 &lt;a href=&quot;https://github.com/DreaminginCodeZH/Douya&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; 豆芽 &lt;/a&gt; 中找到。&lt;/p&gt;
&lt;h2 id=&quot;结语&quot;&gt;&lt;a href=&quot;# 结语&quot; class=&quot;headerlink&quot; title=&quot;结语&quot;&gt;&lt;/a&gt;结语 &lt;/h2&gt;&lt;p&gt; 为 Android 项目使用 Travis CI 的过程还算简单，但是也有一些微妙的问题需要解决，这令我花费了不少时间。而将每次的构建输出上传至另一个仓库的 Release 则是我考虑了一段时间后得出的方案，之前也没见到这种方式，用 curl 调用 GitHub API 也是第一次，同时也再次感受到了 bash 的得心应手，总体上是一次十分有趣的体验。&lt;/p&gt;
&lt;p&gt;因此，将我的配置过程和结果记录在此，希望对其他开发者有所帮助。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;Travis CI 是 GitHub 上开源项目采用持续集成的常见选择。为了给&lt;a href=&quot;https://github.com/DreaminginCodeZH/Douya&quot;&gt;豆芽&lt;/a&gt;提供持续集成版本用于公开测试，我配置了 Travis CI，并自己编写了脚本将构建结果发布到另一个空项目的 Release 中，并将其间的过程和遇到的问题记录于此。&lt;/p&gt;
&lt;p&gt;Travis CI 构建 Android 项目的时间较长，因此调试配置时十分耗时。希望我的经验能对他人有所帮助。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://blog.zhanghai.me/tags/android/"/>
    
      <category term="教程" scheme="http://blog.zhanghai.me/tags/tutorial/"/>
    
      <category term="软件" scheme="http://blog.zhanghai.me/tags/software/"/>
    
  </entry>
  
  <entry>
    <title>Verilog 编程笔记</title>
    <link href="http://blog.zhanghai.me/verilog-notes/"/>
    <id>http://blog.zhanghai.me/verilog-notes/</id>
    <published>2016-03-23T11:27:26.000Z</published>
    <updated>2016-07-28T06:23:33.294Z</updated>
    
    <content type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;# 前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言 &lt;/h2&gt;&lt;p&gt; 这是我在大学修习逻辑与计算机设计基础、计算机组成和计算机体系结构三门硬件课的过程中积累的 Verilog 笔记。&lt;/p&gt;
&lt;p&gt;Verilog 是一门主要用于逻辑电路设计的硬件描述语言。语言标准主要有 &lt;a href=&quot;http://standards.ieee.org/findstds/standard/1364-1995.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Verilog-1995&lt;/a&gt; 与 &lt;a href=&quot;http://standards.ieee.org/findstds/standard/1364-2001.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Verilog-2001&lt;/a&gt; 两个版本，建议在创建工程时选择 Verilog-2001 标准以支持更多实用的语法。&lt;/p&gt;
&lt;p&gt;虽然 Verilog 的语法与 C 相似，但是二者是面向各自的目标硬件设计的。Verilog 是一门面向逻辑电路的具体实现而设计的语言（正如 C 在某种程度上是面向汇编等底层实现的），因此写作 Verilog 时不可以将 C 等编程语言的思维方式代入，而是要始终清晰地思考正在编写的代码将能够综合成怎样的逻辑电路实现——如果可以，那么大多能够写出在字面和实现上都优雅的代码；如果不行，那么综合时大概也会报错或消耗大量资源，此时则应该考虑调整思路。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;手册&quot;&gt;&lt;a href=&quot;# 手册&quot; class=&quot;headerlink&quot; title=&quot;手册&quot;&gt;&lt;/a&gt;手册&lt;/h2&gt;&lt;p&gt;Verilog 的标准文档 IEEE 1364-2001 在网络上可以找到下载，但相比之下，这份标准还是稍显冗长或不够友好。而在标准文档之外，Xilinx ISE 的 XST 综合器也提供了实现文档，并且其中包含了许多 Verilog 语法的实用描述，因此可以作为一本更加友好的手册进行查阅。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xilinx.com/support/documentation/sw_manuals/xilinx14_7/xst_v6s6.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;XST User Guide for Virtex-6, Spartan-6, and 7 Series Devices&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;以及这里还有一份简单的非官方 Verilog-2001 手册：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://sutherland-hdl.com/pdfs/verilog_2001_ref_guide.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Verilog HDL Quick Reference Guide&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;指南&quot;&gt;&lt;a href=&quot;# 指南&quot; class=&quot;headerlink&quot; title=&quot;指南&quot;&gt;&lt;/a&gt;指南 &lt;/h2&gt;&lt;p&gt; 在本文草稿的同时，我的某位同学也完成了一份 Verilog 指南。指南十分详尽而实用，因此希望读者先行阅读。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ZJUArch/verilog-general-guide&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Verilog General Guide&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;重复（Replication）&quot;&gt;&lt;a href=&quot;# 重复（Replication）&quot; class=&quot;headerlink&quot; title=&quot;重复（Replication）&quot;&gt;&lt;/a&gt;重复（Replication）&lt;/h2&gt;&lt;p&gt;在 Verilog 中，你可以使用 &lt;code&gt;{COUNT{singal}}&lt;/code&gt; 将指定的信号重复数次后连接。&lt;/p&gt;
&lt;p&gt;例如，想要写一个 32 位 0/1 相见的字面量，不需要写出 &lt;code&gt;32&amp;#39;b01010101010101010101010101010101&lt;/code&gt;，而是写 &lt;code&gt;{16{2&amp;#39;b01}}&lt;/code&gt; 即可简洁而直观地完成。&lt;/p&gt;
&lt;p&gt;另一个例子是 16 位到 32 位的符号扩展，也可以用 &lt;code&gt;{16{signal[15]}, signal[15:0]}&lt;/code&gt; 来完成。&lt;/p&gt;
&lt;h2 id=&quot;参数定义：parameter-localparam-define&quot;&gt;&lt;a href=&quot;# 参数定义：parameter-localparam-define&quot; class=&quot;headerlink&quot; title=&quot;参数定义：parameter, localparam, `define&quot;&gt;&lt;/a&gt;参数定义：&lt;code&gt;parameter&lt;/code&gt;, &lt;code&gt;localparam&lt;/code&gt;, &lt;code&gt;`define&lt;/code&gt;&lt;/h2&gt;&lt;p&gt;Verilog 提供了三种定义“常量”的方式。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;parameter&lt;/code&gt; 是可以由模块外部改变的参数。除了在模块内部定义的语法，我更加推荐采用 Verilog-2001 中在模块接口声明中定义的语法：&lt;/p&gt;
&lt;figure class=&quot;highlight verilog&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;module&lt;/span&gt; module_name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;#&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;parameter&lt;/span&gt; parameter_name &lt;span class=&quot;keyword&quot;&gt;=&lt;/span&gt; parameter_default_value&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	) (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;endmodule&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;module_name &lt;span class=&quot;keyword&quot;&gt;#&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;typename&quot;&gt;.parameter_name&lt;/span&gt;(parameter_value)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	) (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;localparam&lt;/code&gt; 是模块内部定义的参数，语法如 &lt;code&gt;localparam localparam_name = localparam_value&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;`define&lt;/code&gt; 是 Verilog 的宏定义，与 C 宏的文本替换相似。宏除了用于定义常量，还可以用来简化代码的编写，例如：&lt;/p&gt;
&lt;figure class=&quot;highlight verilog&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;`&lt;/span&gt;define packed_wires &lt;span class=&quot;keyword&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;&amp;#123;&lt;/span&gt;wire_1, wire_2, wire_3&lt;span class=&quot;keyword&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;packed_wires &lt;span class=&quot;keyword&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;3&#39;b101&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;变基部分选择（Indexed-part-select）&quot;&gt;&lt;a href=&quot;# 变基部分选择（Indexed-part-select）&quot; class=&quot;headerlink&quot; title=&quot;变基部分选择（Indexed part-select）&quot;&gt;&lt;/a&gt;变基部分选择（Indexed part-select）&lt;/h2&gt;&lt;p&gt;可以使用 &lt;code&gt;wire_name[index_wire_name]&lt;/code&gt; 的方式来实现一位宽度的多路选择器。相应地，Verilog-2001 也提供了 &lt;code&gt;wire_name[WIDTH * index_wire_name +: WIDTH]&lt;/code&gt; 的方式来实现多位宽度的多路选择器。详情可以参考这个 StackOverflow 问题：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://electronics.stackexchange.com/questions/74277&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;What is this operator called as “+:” in verilog - Electrical Engineering Stack Exchange&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;然而这个语法的综合有一些怪异的地方，有时会导致综合成移位器而非多路选择器，消耗较多的资源，使用时需要留意一下综合报告。&lt;/p&gt;
&lt;h2 id=&quot;对表达式进行选择&quot;&gt;&lt;a href=&quot;# 对表达式进行选择&quot; class=&quot;headerlink&quot; title=&quot;对表达式进行选择&quot;&gt;&lt;/a&gt;对表达式进行选择 &lt;/h2&gt;&lt;p&gt; 在 Verilog 中，无法直接对 &lt;code&gt;wire_name + 1&amp;#39;b1&lt;/code&gt; 这样的表达式选择某些位，但可以其实通过加上花括号的方式进行选择，例如 &lt;code&gt;{wire_name + 1&amp;#39;b1}[3:0]&lt;/code&gt;。这个形式可以用于显式地截短运算结果并且不触发警告。&lt;/p&gt;
&lt;p&gt;然而这个 trick 对于变基部分选择无效。以及似乎在某些旧型号的硬件上 XST 无法识别这个语法。&lt;/p&gt;
&lt;h2 id=&quot;代码简化&quot;&gt;&lt;a href=&quot;# 代码简化&quot; class=&quot;headerlink&quot; title=&quot;代码简化&quot;&gt;&lt;/a&gt;代码简化 &lt;/h2&gt;&lt;p&gt; 可以采用 &lt;code&gt;generate&lt;/code&gt;、&lt;code&gt;task&lt;/code&gt; 或 &lt;code&gt;function&lt;/code&gt; 简化代码逻辑的编写，详细的使用方法在 Verilog General Guide 中已经说明，故不再赘述。&lt;/p&gt;
&lt;h2 id=&quot;信号宽度警告&quot;&gt;&lt;a href=&quot;# 信号宽度警告&quot; class=&quot;headerlink&quot; title=&quot;信号宽度警告&quot;&gt;&lt;/a&gt;信号宽度警告 &lt;/h2&gt;&lt;p&gt; 信号宽度警告是一种十分有用的警告，因为许多低级错误都是由于错误地（或忘记）指定信号宽度导致的。请务必仔细检查综合报告。&lt;/p&gt;
&lt;p&gt;由于裸写的非零十进制整数字面量默认为 32 位，容易增加多余的警告，因此建议在书写字面量时总是使用 &lt;code&gt;2&amp;#39;b&lt;/code&gt;、&lt;code&gt;10&amp;#39;d&lt;/code&gt;、&lt;code&gt;16&amp;#39;h&lt;/code&gt; 这样的前缀形式。&lt;/p&gt;
&lt;p&gt;至于对信号进行递增并且在溢出后自动归零，可以采用 &lt;code&gt;reg_name = reg_name + 1&amp;#39;b1&lt;/code&gt; 的形式，综合器不会将此判断为溢出而发出警告。&lt;/p&gt;
&lt;h2 id=&quot;组合逻辑&quot;&gt;&lt;a href=&quot;# 组合逻辑&quot; class=&quot;headerlink&quot; title=&quot;组合逻辑&quot;&gt;&lt;/a&gt;组合逻辑 &lt;/h2&gt;&lt;p&gt; 在 Verilog 中组合逻辑可以通过在 &lt;code&gt;always @*&lt;/code&gt; 块中使用 &lt;code&gt;if&lt;/code&gt;、&lt;code&gt;switch&lt;/code&gt; 和阻塞赋值 &lt;code&gt;=&lt;/code&gt; 实现，也可以直接使用 &lt;code&gt;assign&lt;/code&gt; 和 &lt;code&gt;?:&lt;/code&gt; 这个条件运算符实现。&lt;/p&gt;
&lt;p&gt;我个人的建议是避免使用 &lt;code&gt;always&lt;/code&gt; 块实现组合逻辑，因为在用 &lt;code&gt;if&lt;/code&gt; 和 &lt;code&gt;switch&lt;/code&gt; 实现逻辑时，很容易忘记书写某些情况下的默认值，导致综合结果为 FF/Latch 的时序电路而非组合电路，并且这件事情很难在综合报告中发现。&lt;/p&gt;
&lt;p&gt;我目前采取的实践是仅将 &lt;code&gt;always&lt;/code&gt; 块用于实现时序电路，而使用条件运算符实现组合逻辑。&lt;/p&gt;
&lt;p&gt;顺带提及，&lt;code&gt;always @*&lt;/code&gt; 用于实现组合电路，应该只使用阻塞赋值 &lt;code&gt;=&lt;/code&gt;；&lt;code&gt;always @(posedge clock)&lt;/code&gt; 用于实现时序电路，应该只使用非阻塞赋值 &lt;code&gt;&amp;lt;=&lt;/code&gt;；两者混用依然可以成功综合，但是意义不明，十分容易出错。&lt;/p&gt;
&lt;h2 id=&quot;Lint&quot;&gt;&lt;a href=&quot;#Lint&quot; class=&quot;headerlink&quot; title=&quot;Lint&quot;&gt;&lt;/a&gt;Lint&lt;/h2&gt;&lt;p&gt;对于长时间调试难以找出的错误，可以尝试使用 Lint 工具对代码进行静态检查，它比 XST 综合器的检查更加严格，也常常能指出代码中埋藏的许多低级错误（我曾经用它在十分钟内找出了一个调试了一整天未能找出的 Bug）。&lt;/p&gt;
&lt;p&gt;Verilator 是一个免费的 Verilog 模拟器，其中也包含了 Lint 功能。安装 &lt;code&gt;verilator&lt;/code&gt;后，执行 &lt;code&gt;verilator --lint-only top.v&lt;/code&gt; 即可开始检查。&lt;/p&gt;
&lt;h2 id=&quot;其他&quot;&gt;&lt;a href=&quot;# 其他&quot; class=&quot;headerlink&quot; title=&quot;其他&quot;&gt;&lt;/a&gt;其他 &lt;/h2&gt;&lt;p&gt; 综合过程中输出的 Simulation mismatch 警告不能无视，否则可能会导致不稳定的综合结果和奇怪的错误。&lt;/p&gt;
&lt;h2 id=&quot;结语&quot;&gt;&lt;a href=&quot;# 结语&quot; class=&quot;headerlink&quot; title=&quot;结语&quot;&gt;&lt;/a&gt;结语 &lt;/h2&gt;&lt;p&gt; 除了某些语法检查不够严格，Verilog 其实是一门设计得较为直觉的语言，语法结构大多可以映射到电路实现，有着 C 一般的简洁和直观。如果遵循一定的编码规范和最佳实践，使用硬件而非软件的思维进行编码，还是可以较为简单地达成目标的。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;这是我在大学修习逻辑与计算机设计基础、计算机组成和计算机体系结构三门硬件课的过程中积累的 Verilog 笔记。&lt;/p&gt;
&lt;p&gt;Verilog 是一门主要用于逻辑电路设计的硬件描述语言。语言标准主要有 &lt;a href=&quot;http://standards.ieee.org/findstds/standard/1364-1995.html&quot;&gt;Verilog-1995&lt;/a&gt; 与 &lt;a href=&quot;http://standards.ieee.org/findstds/standard/1364-2001.html&quot;&gt;Verilog-2001&lt;/a&gt; 两个版本，建议在创建工程时选择 Verilog-2001 标准以支持更多实用的语法。&lt;/p&gt;
&lt;p&gt;虽然 Verilog 的语法与 C 相似，但是二者是面向各自的目标硬件设计的。Verilog 是一门面向逻辑电路的具体实现而设计的语言（正如 C 在某种程度上是面向汇编等底层实现的），因此写作 Verilog 时不可以将 C 等编程语言的思维方式代入，而是要始终清晰地思考正在编写的代码将能够综合成怎样的逻辑电路实现——如果可以，那么大多能够写出在字面和实现上都优雅的代码；如果不行，那么综合时大概也会报错或消耗大量资源，此时则应该考虑调整思路。&lt;/p&gt;
    
    </summary>
    
    
      <category term="学业" scheme="http://blog.zhanghai.me/tags/schoolwork/"/>
    
      <category term="笔记" scheme="http://blog.zhanghai.me/tags/note/"/>
    
      <category term="编程" scheme="http://blog.zhanghai.me/tags/programming/"/>
    
  </entry>
  
  <entry>
    <title>Plan 9 操作系统介绍</title>
    <link href="http://blog.zhanghai.me/introduction-to-plan-9-the-os/"/>
    <id>http://blog.zhanghai.me/introduction-to-plan-9-the-os/</id>
    <published>2015-10-21T07:32:24.000Z</published>
    <updated>2016-04-02T16:29:56.757Z</updated>
    
    <content type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;# 前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言 &lt;/h2&gt;&lt;p&gt; 这篇文章是我在操作系统原理课程的作业。作业选题本身很宽，大意是只要描述操作系统的发展即可。因为早就对 Plan 9 这个旨在取代 Unix 的操作系统有兴趣，又可以借此花时间仔细理解和实际使用一次这个系统，于是毫不犹豫地选择了这个题目。&lt;/p&gt;
&lt;p&gt;以下就是我自己对 Plan 9 这个操作系统在设计上的理解和概括。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;# 简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;Plan 9 是一款分布式操作系统，由贝尔实验室计算机科学研究中心在 19 世纪 80 年代中期开始开发，旨在成为 Unix 的后继者。Plan 9 的团队正是曾开发 Unix 和 C 语言的团队，开发过程中参与者包括 Ken Thompson、Dennis Ritchie、Bjarne Stroustrup 等人。&lt;/p&gt;
&lt;p&gt;本文将主要介绍 Plan 9 的部分设计理念。&lt;/p&gt;
&lt;h2 id=&quot;设计&quot;&gt;&lt;a href=&quot;# 设计&quot; class=&quot;headerlink&quot; title=&quot;设计&quot;&gt;&lt;/a&gt;设计 &lt;/h2&gt;&lt;h3 id=&quot;文件&quot;&gt;&lt;a href=&quot;# 文件&quot; class=&quot;headerlink&quot; title=&quot;文件&quot;&gt;&lt;/a&gt; 文件 &lt;/h3&gt;&lt;p&gt;Plan 9 继承了 Unix 中“&lt;a href=&quot;https://en.wikipedia.org/wiki/Everything_is_a_file&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; 任何事物都是文件&lt;/a&gt;”的哲学，并且对其进一步扩展，将所有计算资源都视为文件进行管理，使用读取和写入操作作为与资源交互的统一方式。&lt;/p&gt;
&lt;p&gt;例如，在 Unix 中对许多具体硬件控制需要使用 &lt;code&gt;ioctl&lt;/code&gt; 系统调用进行，以及 X Window 等系统中对于资源也使用函数调用控制而非用文件代表，但在 Plan 9 中，无论是 CPU、外围设备、网络，还是图形界面本身，设计者始终采用文件来代表资源并与之交互。&lt;/p&gt;
&lt;p&gt;在这个意义下，其实文件的意义并非传统的磁盘存储的单元，而是一个指代一般意义上计算资源的名字。&lt;/p&gt;
&lt;h3 id=&quot;文件系统&quot;&gt;&lt;a href=&quot;# 文件系统&quot; class=&quot;headerlink&quot; title=&quot;文件系统&quot;&gt;&lt;/a&gt;文件系统&lt;/h3&gt;&lt;p&gt;Plan 9 与 Unix 同样采用的是层次性的文件系统。由于文件实际上就是资源，所以文件的路径实际上也与 URI 的意义类似，即计算资源可以通过特定的路径访问。&lt;/p&gt;
&lt;p&gt;在文件的组织方式上，Plan 9 使用了与 Unix 类似约定的命名方式，例如也可以使用 &lt;code&gt;ls /proc&lt;/code&gt; 查看所有进程等。&lt;/p&gt;
&lt;p&gt;Plan 9 的文件系统并非传统意义上局限于磁盘的文件系统。在 Plan 9 中，由于资源即是文件，资源本身来自本地设备还是需要通过网络访问其实只是实现细节，所以两者在文件系统中具有统一的表示。Plan 9 采用一种名为 9P 的协议对资源的访问过程进行封装。经过这种抽象，系统中对远端和本机资源进行访问的接口达成了一致，由此通过分布式的文件系统从系统设计上实现了分布式计算的基础，例如即使是 CPU 资源也可以通过文件方便地共享。&lt;/p&gt;
&lt;h3 id=&quot;命名空间&quot;&gt;&lt;a href=&quot;# 命名空间&quot; class=&quot;headerlink&quot; title=&quot;命名空间&quot;&gt;&lt;/a&gt;命名空间 &lt;/h3&gt;&lt;p&gt; 文件系统只是资源的组织形式，而允许不同程序对资源采取不同的组织形式可以带来很大的可扩展性，因此 Plan 9 对每个进程使用使用了不同的文件系统，称为命名空间，并由此实现了资源的进程隔离。&lt;/p&gt;
&lt;p&gt;此外，父进程还可以以 9P 协议向子进程的命名空间提供虚拟文件（以文件作为服务），这样实现了一种低成本而原生的跨进程资源访问，也使得提供给子进程资源可以被自由地替换。由此，实现 VPN 连接只需要将 &lt;code&gt;/net&lt;/code&gt; 目录代理，实现窗口系统只需要将 &lt;code&gt;bitblt&lt;/code&gt; 文件代理，等等。&lt;/p&gt;
&lt;h3 id=&quot;合并目录&quot;&gt;&lt;a href=&quot;# 合并目录&quot; class=&quot;headerlink&quot; title=&quot;合并目录&quot;&gt;&lt;/a&gt;合并目录 &lt;/h3&gt;&lt;p&gt; 因为要替换子进程文件系统中的目录，但目录中的内容又并非全部都需要重新提供，合并目录就成为了一个良好的解决方案。&lt;/p&gt;
&lt;p&gt;Plan 9 中的合并目录是一种类似 Unix 中挂载和搜索路径相结合的做法。通过将目录甲合并至目录乙，访问目录乙时将会先在目录甲中进行查找，未找到时再在目录乙本身中查询。将这个设计与网络结合，则可以产生将远端的 &lt;code&gt;/bin&lt;/code&gt; 目录合并至本地即可直接使用远端程序这样的使用方法。&lt;/p&gt;
&lt;h3 id=&quot;UTF-8&quot;&gt;&lt;a href=&quot;#UTF-8&quot; class=&quot;headerlink&quot; title=&quot;UTF-8&quot;&gt;&lt;/a&gt;UTF-8&lt;/h3&gt;&lt;p&gt;Plan 9 更加为人知晓的一个组件则是由 Ken Thompson 提出的 UTF-8 编码。通过这种编码方式，Unicode 自动兼容于原先的 ASCII 字符，不会出现需要编码转换的问题，因此时至今日已经被广泛采用。而 UTF-8 本身则早已是 Plan 9 的原生编码。&lt;/p&gt;
&lt;h2 id=&quot;发展&quot;&gt;&lt;a href=&quot;# 发展&quot; class=&quot;headerlink&quot; title=&quot;发展&quot;&gt;&lt;/a&gt;发展 &lt;/h2&gt;&lt;p&gt; 虽然 Plan 9 有着相对于 Unix 更加普适和可扩展的设计，但在实际使用中它并没有赢得太多的用户。&lt;/p&gt;
&lt;p&gt;Plan 9 在 1992 年向大学公开，并在 1995 年由 AT&amp;amp;T 商业发布。然而 1996 年，AT&amp;amp;T 已将重心转移至 Inferno，一个基于 Plan 9 思想设计并且旨在与 Java 竞争的系统。到了 2000 年，掌管贝尔实验室的朗讯决定停止 Plan 9 的商业支持，并在几年之后将 Plan 9 的代码以自由软件许可的形式向大众公开。&lt;/p&gt;
&lt;h2 id=&quot;评价&quot;&gt;&lt;a href=&quot;# 评价&quot; class=&quot;headerlink&quot; title=&quot;评价&quot;&gt;&lt;/a&gt;评价&lt;/h2&gt;&lt;p&gt;Plan 9 对 Unix 中的许多理念做了进一步的提升和扩展，对资源管理和分布式计算进行了优秀而统一的实现，在操作系统架构的历史上具有不可磨灭的意义；来自其中的 UTF-8、rc shell 等组件，也被其他操作系统所吸纳接受；并且，Plan 9 的后继者 Inferno 和 Plan B 还在继续发展。&lt;/p&gt;
&lt;p&gt;但是，仅有优雅的设计，却缺乏相应的生态，这导致了 Plan 9 在实际应用中的结果不成功，令人惋惜。这一切正如 Eric Raymond 所说，足以让目标高远的软件工程师们时时警醒：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Plan 9 会失败，纯粹只是因为它的改进程度没有大到能取代 Unix。与 Plan 9 相比，Unix 虽然破破烂烂带有明显的缺陷，但还是能够把工作良好地完成，而这就足以保住它的地位了。&lt;/p&gt;
&lt;p&gt;这件事情教给了那些怀有雄心壮志的系统架构师一个道理：一个更优解决方案所面临的最危险的敌人，其实是那些能把事情刚好完成的程序。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;致谢&quot;&gt;&lt;a href=&quot;# 致谢&quot; class=&quot;headerlink&quot; title=&quot;致谢&quot;&gt;&lt;/a&gt;致谢 &lt;/h2&gt;&lt;p&gt; 本文写作过程中参考了 &lt;a href=&quot;https://en.wikipedia.org/wiki/Plan_9_from_Bell_Labs&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Plan 9 from Bell Labs - Wikipedia, the free encyclopedia&lt;/a&gt; 和 &lt;a href=&quot;https://zh.wikipedia.org/wiki/%E8%B2%9D%E7%88%BE%E5%AF%A6%E9%A9%97%E5%AE%A4%E4%B9%9D%E8%99%9F%E8%A8%88%E7%95%AB&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;贝尔实验室九号计划 - 维基百科，自由的百科全书&lt;/a&gt; 等页面的内容，在此表示感谢。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;这篇文章是我在操作系统原理课程的作业。作业选题本身很宽，大意是只要描述操作系统的发展即可。因为早就对 Plan 9 这个旨在取代 Unix 的操作系统有兴趣，又可以借此花时间仔细理解和实际使用一次这个系统，于是毫不犹豫地选择了这个题目。&lt;/p&gt;
&lt;p&gt;以下就是我自己对 Plan 9 这个操作系统在设计上的理解和概括。&lt;/p&gt;
    
    </summary>
    
    
      <category term="学业" scheme="http://blog.zhanghai.me/tags/schoolwork/"/>
    
      <category term="计算机科学" scheme="http://blog.zhanghai.me/tags/computer-science/"/>
    
      <category term="软件" scheme="http://blog.zhanghai.me/tags/software/"/>
    
  </entry>
  
  <entry>
    <title>Thoughts on Content Handling in Android Application</title>
    <link href="http://blog.zhanghai.me/thoughts-on-content-handling-in-android-application/"/>
    <id>http://blog.zhanghai.me/thoughts-on-content-handling-in-android-application/</id>
    <published>2015-10-04T13:44:12.000Z</published>
    <updated>2016-07-25T15:04:37.278Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Introduction&quot;&gt;&lt;a href=&quot;#Introduction&quot; class=&quot;headerlink&quot; title=&quot;Introduction&quot;&gt;&lt;/a&gt;Introduction&lt;/h2&gt;&lt;p&gt;For content-oriented Android application, how and where to store the content to display is a issue every developer will be concerned with. The Android framework provided a comprehensive solution with &lt;code&gt;ContentProvider&lt;/code&gt; (and a lot more) which suits quite well with a SQLite database; but in a lot of other scenarios, the app only need to have some information cached, while the majority of content is directly retrieved from network, thus eliminating the need for a database (and a complicated content scheme).&lt;/p&gt;
&lt;p&gt;But when we look into the core of this issue, we will soon find out that it is in fact a problem of whether to have a central storage, and how to notify different components about a change.&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;Initial-Scenario&quot;&gt;&lt;a href=&quot;#Initial-Scenario&quot; class=&quot;headerlink&quot; title=&quot;Initial Scenario&quot;&gt;&lt;/a&gt;Initial Scenario&lt;/h2&gt;&lt;p&gt;Let’s look at the naive solution first, retrieving content from network and only keeping them in memory. In this case, no central storage is needed, and every component fetches its content independently, simple enough. But this approach immediately becomes flawed when it comes to content updating such as user modification. For instance, we have a list activity and a detail activity, and the user can often modified something in the detail activity, say, they clicked ‘like’, and the like button shall look activated not only in the detail activity, but also in the list activity now in background.&lt;/p&gt;
&lt;p&gt;Content is fetched independently, so every component have no knowledge of whether someone else is holding the same content as itself, and that content will become stale when shown to user if the content this component newly retrieved is an updated version. Ideally speaking, any piece content is a single resource that should have only one state at point of time, and keeping it represented by one entity in memory is the best way to achieve this — yes, a central storage (whether in memory or also backed by disk), and the DRY (don’t repeat yourself) principle, a different story of the solution framework provided.&lt;/p&gt;
&lt;p&gt;Anyway, we always need a notifying mechanism, instead of having some holder of a unique entity shared among clients, because clients may need to transform the content into something else instead of using the unique one directly, or they need notify others when content is changed.&lt;/p&gt;
&lt;h2 id=&quot;ContentProvider-Mechanism&quot;&gt;&lt;a href=&quot;#ContentProvider-Mechanism&quot; class=&quot;headerlink&quot; title=&quot;ContentProvider Mechanism&quot;&gt;&lt;/a&gt;ContentProvider Mechanism&lt;/h2&gt;&lt;p&gt;The idea behind &lt;code&gt;ContentProvider&lt;/code&gt; is that, &lt;code&gt;ContentProvider&lt;/code&gt; is the only central storage and all its content is the only real entity that will always be up-to-date, while the content its clients hold is only a copy that will easily get out-of-date. So when a change happened, the central storage is refreshed, and &lt;code&gt;ContentObserver&lt;/code&gt;s are notified of the change and then they will query the central &lt;code&gt;ContentProvider&lt;/code&gt; for an updated copy of content.&lt;/p&gt;
&lt;p&gt;In this case, only the &lt;code&gt;ContentProvider&lt;/code&gt; (or a delegated &lt;code&gt;SyncAdapter&lt;/code&gt;) can fetch data from network; the clients can only request a fetch and wait for the change callback just as any other client. The central &lt;code&gt;ContentProvider&lt;/code&gt; acts as a middle man between clients and network, to ensure the uniqueness of any content entity.&lt;/p&gt;
&lt;h2 id=&quot;Go-centralized&quot;&gt;&lt;a href=&quot;#Go-centralized&quot; class=&quot;headerlink&quot; title=&quot;Go centralized?&quot;&gt;&lt;/a&gt;Go centralized?&lt;/h2&gt;&lt;p&gt;But a principally-correct and comprehensive solution may not be the best solution for a specific type of scenario. We will face at least the following difficulties:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Identifier: In order to ensure only one central entity per resource, We need URIs to uniquely identify resources just as its name suggests, so we must defining a content URI scheme. But things go complex quickly considering the complex logical hierarchy an interlinked content system will need.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Action: We’ll lose the flexibility on handling changes for special cases. Think of infinite loading, liking and post deleting, we’ll need a generic mechanism to notify all the observers on an URI if some items are newly loaded, modified or removed, while framework’s &lt;code&gt;ContentObserver&lt;/code&gt; only offers an &lt;code&gt;onChanged()&lt;/code&gt; method. However if we handle this only for specific cases, it can be much more easier to implement.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Releasing memory: Because most of the content is dynamic, there is little point in data persistence on disk. So we’ll store retrieved items only in memory, and then, we need to release them once nobody needs them. This can be tricky when, for instance, we have an observer on a collection, and another observer on a detail of this collection is removed, now whether the detailed content should be released depends on whether the collection observer actually observes on this detail, which cannot be inferred by the central content manager from URI scheme.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;JSON interoperability: The framework &lt;code&gt;ContentProvider&lt;/code&gt; mechanism uses &lt;code&gt;Cursor&lt;/code&gt;, where only basic types and blob are valid column type, making it uninteroperable with the widely used JSON approach. We’ll have to roll our own.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Implementing and using such a framework is a complex and heavy task, and complexity is error-prone, while it brings little advantage over the decentralized solution we are going to talk about.&lt;/p&gt;
&lt;h2 id=&quot;Stay-decentralized&quot;&gt;&lt;a href=&quot;#Stay-decentralized&quot; class=&quot;headerlink&quot; title=&quot;Stay decentralized&quot;&gt;&lt;/a&gt;Stay decentralized&lt;/h2&gt;&lt;p&gt;So we want to stay on the track of not having any central storage, and allow duplicated (so possibly inconsistent) entities of content in memory.&lt;/p&gt;
&lt;p&gt;This way, we are to do a sync among components once we any content is newly fetched from network in this case. The solution is much more specific to each scenario in this case: we can utilize some already present event bus system to get notified of updates, listen to specific event code of content change, and then respond accordingly.&lt;/p&gt;
&lt;p&gt;On the first sight, this solution may seem not generic enough, lacking in the beauty of unity. However, considering the overall cost of using a centralized storage with URI scheme, I believe this decentralized-and-syncing mechanism is the way to go for applications in this scenario.&lt;/p&gt;
&lt;h2 id=&quot;Conclusion&quot;&gt;&lt;a href=&quot;#Conclusion&quot; class=&quot;headerlink&quot; title=&quot;Conclusion&quot;&gt;&lt;/a&gt;Conclusion&lt;/h2&gt;&lt;p&gt;Different mechanisms apply to different scenarios. Android’s centralized &lt;code&gt;ContentProvider&lt;/code&gt; mechanism fits for content that should be persisted and synced, while the decentralized mechanism works well with application with highly-dynamic content.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Introduction&quot;&gt;&lt;a href=&quot;#Introduction&quot; class=&quot;headerlink&quot; title=&quot;Introduction&quot;&gt;&lt;/a&gt;Introduction&lt;/h2&gt;&lt;p&gt;For content-oriented Android application, how and where to store the content to display is a issue every developer will be concerned with. The Android framework provided a comprehensive solution with &lt;code&gt;ContentProvider&lt;/code&gt; (and a lot more) which suits quite well with a SQLite database; but in a lot of other scenarios, the app only need to have some information cached, while the majority of content is directly retrieved from network, thus eliminating the need for a database (and a complicated content scheme).&lt;/p&gt;
&lt;p&gt;But when we look into the core of this issue, we will soon find out that it is in fact a problem of whether to have a central storage, and how to notify different components about a change.&lt;/p&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://blog.zhanghai.me/tags/android/"/>
    
      <category term="Programming" scheme="http://blog.zhanghai.me/tags/programming/"/>
    
  </entry>
  
  <entry>
    <title>Android 开发入门指南</title>
    <link href="http://blog.zhanghai.me/android-developer-guide/"/>
    <id>http://blog.zhanghai.me/android-developer-guide/</id>
    <published>2015-09-28T13:13:29.000Z</published>
    <updated>2016-02-18T06:33:53.647Z</updated>
    
    <content type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;# 前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言 &lt;/h2&gt;&lt;p&gt; 从我入门 Android 开发至今已经两年有余，过程中有了一些经验和积累，所以在此将我对于入门者的建议记录下来。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;Java&quot;&gt;&lt;a href=&quot;#Java&quot; class=&quot;headerlink&quot; title=&quot;Java&quot;&gt;&lt;/a&gt;Java&lt;/h2&gt;&lt;p&gt;学习 Android 开发，首先要有扎实的 Java 基础。如果不理解一门语言的设计思想，编写代码时将常常感觉思维与语法发生冲突，同时也无法针对这门语言扬长避短，最终代码将会难以实现和维护。&lt;/p&gt;
&lt;p&gt;对于尚无 Java 基础的同学，我推荐 &lt;a href=&quot;http://book.douban.com/subject/1474824/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《Thinking in Java》&lt;/a&gt; 这本书（中文译本为&lt;a href=&quot;http://book.douban.com/subject/2130190/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《Java 编程思想》&lt;/a&gt;），因为它对 Java 语法和设计的讲解较为精确详细，同时对设计模式和最佳实践也有合适的涉猎。这本书除了最后一章关于图形界面的部分可以跳过，之前所有的章节，都应当仔细地阅读和理解一遍。我个人在阅读时使用了两周大约 40 小时的时间。&lt;/p&gt;
&lt;p&gt;此外，初学者请格外重视代码风格，始终遵循 Java 的编码规范，因为这可以使代码风格统一、结构有序、逻辑清晰和易于维护。IntelliJ Idea（Android Studio）的默认代码风格正与之符合。&lt;/p&gt;
&lt;h2 id=&quot;框架入门&quot;&gt;&lt;a href=&quot;# 框架入门&quot; class=&quot;headerlink&quot; title=&quot;框架入门&quot;&gt;&lt;/a&gt;框架入门 &lt;/h2&gt;&lt;p&gt; 在拥有了 Java 语法基础之后，就可以开始学习 Android 的框架了。&lt;/p&gt;
&lt;p&gt;Android API 和最佳实践的更新较为迅速，所以几乎没有可靠的 Android 开发书籍，不推荐购买书籍入门。而 &lt;a href=&quot;developer.android.com/develop&quot;&gt;Android 官方网站的文档&lt;/a&gt; 是保持与框架同步的，同时也有很多关于最佳实践的介绍。&lt;/p&gt;
&lt;p&gt;所以我的建议是，从官方文档的 &lt;a href=&quot;https://developer.android.com/training/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Training&lt;/a&gt; 开始，读完最基础的部分后，自己想好要做的一个小型项目，再按照需求查找 &lt;a href=&quot;https://developer.android.com/guide/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Guide&lt;/a&gt; 和 &lt;a href=&quot;https://developer.android.com/reference/packages.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Reference&lt;/a&gt;，结合 &lt;a href=&quot;https://stackoverflow.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;StackOverflow&lt;/a&gt; 等资源，在实践中完成第一个自己的 Android 应用，掌握一些 Android 开发的基础知识。这个过程我使用了另外两周的时间。&lt;/p&gt;
&lt;p&gt;此外作为补充，&lt;a href=&quot;http://guides.codepath.com/android&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Code Path 的教程&lt;/a&gt; 也可以参考，虽然并非必须；大多数最佳实践和陷阱都需要开发者自己通过搜索多方资料和阅读源代码积累。&lt;/p&gt;
&lt;h2 id=&quot;开发环境&quot;&gt;&lt;a href=&quot;# 开发环境&quot; class=&quot;headerlink&quot; title=&quot;开发环境&quot;&gt;&lt;/a&gt;开发环境 &lt;/h2&gt;&lt;p&gt; 关于开发时使用的环境，Eclipse 早已经是日薄西山，而构建于 &lt;a href=&quot;https://www.jetbrains.com/idea/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;IntelliJ Idea&lt;/a&gt; 之上的 &lt;a href=&quot;https://developer.android.com/tools/studio/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Android Studio&lt;/a&gt; 才是 Google 和社区支持的重心，也是在官方文档中建议使用的开发环境。&lt;/p&gt;
&lt;p&gt;同时，Android Studio 的 Refactor，Generate，Lint Check 等功能也十分强大，能够显著地提高开发体验和效率。此外 Emacs 键绑定在调节个别设置之后就完全可用。&lt;/p&gt;
&lt;p&gt;Android Studio 的连击 Shift 全局搜索功能在想要打开特定文件时也十分好用，默认在工程范围内搜索，再次连击可以将框架代码也纳入搜索范围。&lt;/p&gt;
&lt;p&gt;在工具的选择上还是应该以功能性和主流选择为依据，因此我建议即使之前熟悉 Eclipse 的同学，也开始使用 Android Studio 进行 Android 开发。&lt;/p&gt;
&lt;p&gt;官方文档中有关于 Android Studio 和 Android SDK 配置的详细说明。Android Studio 的更新动态可以在 &lt;a href=&quot;http://tools.android.com/recent&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Anroid Tools Project Site&lt;/a&gt; 上查看，也提供了 RSS 订阅。&lt;/p&gt;
&lt;h2 id=&quot;问题解决&quot;&gt;&lt;a href=&quot;# 问题解决&quot; class=&quot;headerlink&quot; title=&quot;问题解决&quot;&gt;&lt;/a&gt;问题解决 &lt;/h2&gt;&lt;p&gt; 在开发的过程中如果遇到问题，首先可以尝试 &lt;a href=&quot;https://www.google.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Google 搜索&lt;/a&gt;。搜索结果中，又以 Android 官方的教程结果为好，&lt;a href=&quot;https://stackoverflow.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;StackOverflow&lt;/a&gt; 辅之，某些编写精良的国外博客可以参考。&lt;/p&gt;
&lt;p&gt;此外，如果是框架或者支持库的 Bug，&lt;a href=&quot;https://code.google.com/p/android/issues/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Google Code Issues&lt;/a&gt; 和 StackOverflow 上也可能有人贴出 Workaround；如果暂时没有，自己在 Google Code 上提交 issue 也有一定可能收到关注&lt;del&gt;（和 Chris Banes 搭话玩）&lt;/del&gt;。&lt;/p&gt;
&lt;p&gt;对于 CSDN、博客园等国内博客，则应该尽量避免，即使读时，应抱有将信将疑的态度，因为国内博客的总体质量偏低，常常代码风格混乱、不遵循最佳实践、只以达成效果为目的，甚至可能有明显的错误。当然少数排版良好、编写细致的博客除外。&lt;/p&gt;
&lt;p&gt;至于 Android 开发 QQ 群、微信群等，由于质量和氛围，在总体上个人极其不建议新手加入。&lt;/p&gt;
&lt;h1 id=&quot;阅读框架代码&quot;&gt;&lt;a href=&quot;# 阅读框架代码&quot; class=&quot;headerlink&quot; title=&quot;阅读框架代码&quot;&gt;&lt;/a&gt;阅读框架代码 &lt;/h1&gt;&lt;p&gt; 如果问题没有直接的解答，则可以尝试查看 Android 的 JavaDoc 和源代码，来理解框架的具体行为。&lt;/p&gt;
&lt;p&gt;在这个过程中，Android Studio 是很好的工具。通过按住 Ctrl + 单击，可以跳转到源代码所在的位置，或者资源文件的定义；点击类或方法左侧行号旁边的标记，可以访问继承或重载当前片段的代码，查看框架的细节行为，或是内部的使用范例；这些功能使得查看框架代码十分方便快捷。&lt;/p&gt;
&lt;p&gt;此外，&lt;a href=&quot;http://grepcode.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GrepCode&lt;/a&gt;、&lt;a href=&quot;https://github.com/android/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt; 和 &lt;a href=&quot;https://android.googlesource.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Google Source&lt;/a&gt; 可以在线查看框架代码的变更，以及未进入 SDK 的代码，使用时 Google“类名 网站名”即可。三家各有千秋。GrepCode 类名或方法名旁的向下箭头，类似 Android Studio，可以点击查看使用情况或者继承、覆盖者等，便于快速定位问题、理解架构；GitHub 和 Google Source 则有完整的 git 记录，可以查看 diff 和 blame（GoogleSource 是真正的版本库所在地，GitHub 会自动拉取 GoogleSource 上的更新）；个人感觉 GitHub 的界面和功能相对更加友好一些。&lt;/p&gt;
&lt;p&gt;顺带一提，涉及到 IPC 的 &lt;code&gt;IBinder&lt;/code&gt; 之类代码，具体实现可以在 &lt;code&gt;com.android.server&lt;/code&gt; 这个包下找到。&lt;/p&gt;
&lt;h2 id=&quot;向下兼容&quot;&gt;&lt;a href=&quot;# 向下兼容&quot; class=&quot;headerlink&quot; title=&quot;向下兼容&quot;&gt;&lt;/a&gt;向下兼容 &lt;/h2&gt;&lt;p&gt; 虽然 Android 的 Training 和 Guide 中大部分是以原生框架 API 来教学的，但实际上有一些功能是在后续版本的 Android 中才引入的，直接使用这些功能会导致在旧的 Android 上找不到相应方法而发生崩溃。&lt;/p&gt;
&lt;p&gt;在 Android 开发的早期，问题不是如此明显，开发者经常自己条件执行与版本相关的代码。久而久之，也有人将部分方面的兼容性代码封装成库提供给开发者使用，直到后来 Android 官方终于发布了 &lt;a href=&quot;https://developer.android.com/tools/support-library/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Support Library&lt;/a&gt; 来全面地完成这项工作。&lt;/p&gt;
&lt;p&gt;我曾经对支持库有所保留，有时还是偏向于使用原生实现而非支持库实现。但后来我慢慢感受到，Android 官方的支持重点还是使用支持库的方式，并且这样也能够不断带来更好的兼容性。因此，我还是建议新手在使用新 API 时，选择支持库而非原生实现。&lt;/p&gt;
&lt;p&gt;目前支持库主要向下支持至 V7，而官方建议开发者向下支持至 V14（Android 4.0） 就可以了，这样覆盖了 95% 左右的用户。关于 Android 版本的统计数据可以在 &lt;a href=&quot;https://developer.android.com/about/dashboards/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt; 查看。&lt;/p&gt;
&lt;h2 id=&quot;开源第三方库&quot;&gt;&lt;a href=&quot;# 开源第三方库&quot; class=&quot;headerlink&quot; title=&quot;开源第三方库&quot;&gt;&lt;/a&gt;开源第三方库&lt;/h2&gt;&lt;p&gt;Android 中界面、网络、数据存储等许多高级功能的实现可能较为复杂，这时开源库就变得十分方便。现在大多数 Android 的开源库都托管在 GitHub 上，并支持在 gradle 中一行引入。但是，GitHub 并非专注于 Android，搜索功能也还有待提升，因此以下介绍其他一些常用的技巧。&lt;/p&gt;
&lt;p&gt;建议：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.google.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Google&lt;/a&gt;：直接搜索你的关键字即可。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://android-arsenal.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Android Arsenal&lt;/a&gt;：目前最好用的 Android 开源库索引，提供搜索和分类查询。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;了解：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Trinea/android-open-project&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Android Open Project&lt;/a&gt;：收录 Android 开源库的 Repo，较全，但不如以上方法。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/wasabeef/awesome-android-ui&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Awesome Android UI&lt;/a&gt;：内容同上，一般全。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/snowdream/awesome-android&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Awesome Android&lt;/a&gt;：同上，一般全。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在选择开源库时，建议考察它的 Star/Fork 数、文档、代码风格、作者回复 Issue 的活跃程度，谨慎作出决定。一旦使用，建议 Watch 此项目，关注更新。&lt;/p&gt;
&lt;p&gt;建议使用的部分开源第三方库：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/JakeWharton/butterknife&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ButterKnife&lt;/a&gt;：自动视图注入，替代冗长的 &lt;code&gt;findViewById()&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mcxiaoke/android-volley&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Volley&lt;/a&gt;：短时网络请求。已进入 AOSP，链接中是第三方附加了一些 Tweak 的镜像。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/google/gson&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Gson&lt;/a&gt;：JSON 与 Java 对象自动转换，在进行数据模型复杂的应用开发时极其有用，与 Volley 搭配和谐。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/bumptech/glide&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Glide&lt;/a&gt;：为可回收视图容器优化的图片加载，可与 Volley 整合。被 Chris Banes 在 &lt;a href=&quot;https://github.com/chrisbanes/cheesesquare/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;cheesesquare&lt;/a&gt; 中使用。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/JakeWharton/ThreeTenABP&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ThreetenABP&lt;/a&gt;：Java 8 日期时间 API，优异的设计和实现，从此日期时间编程不再困难。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;另外提一下其他几个项目，且并非针对作者个人。在我个人看来，虽然很多很全，但 &lt;a href=&quot;https://github.com/Trinea/android-common&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;android-common&lt;/a&gt; 和 &lt;a href=&quot;https://github.com/Trinea/android-demo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;android-demo&lt;/a&gt; 两个项目的代码质量并不算很高，也无法确定是否始终遵循着 Android 最新的变更和最佳实践。因此，我个人极其反对直接复制粘贴其中的代码（或者其他任何代码），也不推荐直接参考其中的代码而不查阅其他来源；相应地，应该始终使用 Google 搜索解决方案，这样才能保持最新。&lt;/p&gt;
&lt;h2 id=&quot;界面设计&quot;&gt;&lt;a href=&quot;# 界面设计&quot; class=&quot;headerlink&quot; title=&quot;界面设计&quot;&gt;&lt;/a&gt;界面设计 &lt;/h2&gt;&lt;p&gt; 作为一名合格的 Android 开发者，也应该拥有 Android 相关的设计素养，而不是设计师给了一个不标准（或者像 iOS）的设计，却不知道提出意见或修正。&lt;/p&gt;
&lt;p&gt;Android 现有的设计规范是 &lt;a href=&quot;http://www.google.com/design/spec/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Material Design&lt;/a&gt;，已经初步成熟，但有时还是会有小的补充，因此建议始终阅读这个文档。在入门 Android 开发后，建议抽出时间，将这份文档通读一遍，以了解符合 Android 平台的设计。另外，我见过的几个中文版设计文档翻译质量一般，排版较差，还有一些时效性问题，因此不是十分建议阅读。&lt;/p&gt;
&lt;p&gt;Material Design 的实现主要依靠支持库中的 AppCompat 和 Design 库，目前文档不算十分完善，可以参考 &lt;a href=&quot;http://android-developers.blogspot.jp/2015/05/android-design-support-library.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;BlogSpot 上的相关介绍&lt;/a&gt; 和 &lt;a href=&quot;https://github.com/chrisbanes/cheesesquare/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Chris Banes 的 CheeseSquare&lt;/a&gt;，辅助以 StackOverflow、Google Code Issues 和部分国外博客。&lt;/p&gt;
&lt;p&gt;为了精确地实现界面布局，可以使用开发者选项中的“显示视图边界”来确定各个视图的大小和位置，此外 &lt;a href=&quot;https://play.google.com/store/apps/details?id=com.faizmalkani.keylines&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;KeylinePushing&lt;/a&gt; 是一款十分好用的工具应用，可以在屏幕上显示关键线和网格，帮助检视视图布局。&lt;/p&gt;
&lt;p&gt;关于设计资源。&lt;a href=&quot;https://www.google.com/design/icons/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Material Icons&lt;/a&gt; 是 Google 的开源 Material Design 图标库，内容十分丰富，也符合设计规范。&lt;a href=&quot;http://romannurik.github.io/AndroidAssetStudio/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Android Asset Studio&lt;/a&gt; 曾经十分流行，但由于 Material Design 的引入开始有些过时，不过启动器图标和设备预览图的生成器依然可以使用。&lt;/p&gt;
&lt;h2 id=&quot;信息来源&quot;&gt;&lt;a href=&quot;# 信息来源&quot; class=&quot;headerlink&quot; title=&quot;信息来源&quot;&gt;&lt;/a&gt;信息来源&lt;/h2&gt;&lt;p&gt;Android 的更新发展较为快速，为了跟进 Android 最新的动态，可以了解、关注或订阅以下的人或内容。其中，Google Plus 可以作为一个干净的技术社交平台（屏蔽几个热门推荐就好），有很多活跃的 Android 开发者和社群，十分建议加入。&lt;/p&gt;
&lt;p&gt;建议：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://plus.google.com/+AndroidDevelopers/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;+Android Developers&lt;/a&gt;：Android 官方帐号，新闻、ProTip、工具更新等，十分值得关注。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://plus.google.com/+ChrisBanes/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;+Chris Banes&lt;/a&gt;：Andorid Design 支持库开发者，Android 相关动态更新频繁。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;推荐：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://plus.google.com/+RomanNurik/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;+Roman Nurik&lt;/a&gt;：Android 视图组件开发者，同时也是一位优秀的摄影师，你或许不经意间也见过他的作品。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://plus.google.com/105051985738280261832/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;+Dannie Hackborn&lt;/a&gt;：Android 框架开发者。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://plus.google.com/+ChetHaase/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;+Chet Haase&lt;/a&gt;：Android 框架开发者，写作此文时正在开发 Data Binding 支持库。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://android-developers.blogspot.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Android Developers Blog&lt;/a&gt;：Android Developers 的博客，可 RSS 订阅，不过 +Android Developers 在它更新时一般会发动态推荐。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://tools.android.com/recent&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Android Tools Project Site - Recent Changes&lt;/a&gt;：Android Studio、Gradle 插件、SDK 等工具更新，可 RSS 订阅，不过 +Android Developers 在它更新时一般会发动态推荐。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/user/androiddevelopers&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Android Developers on YouTube&lt;/a&gt;：Android 开发相关视频，可关注，不过 +Android Developers 在它更新时一般会发动态推荐。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://androidbackstage.blogspot.jp/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Android Developers Backstage&lt;/a&gt;：Android 开发相关 PodCast，可选择关注。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jakewharton.com/blog/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Jake Wharton’s Blog&lt;/a&gt;，ButterKnife、ActionBarSherlock，Andorid-PullToRefresh 等知名开源项目作者，就职于 Square，博客更新已不太频繁，但有深度。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://commonsware.com/blog/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CommonsWare’s Blog&lt;/a&gt;：StackOverflow 知名答主，CWAC 系列组件作者，某本 Android 开发书籍的作者，博客内容大多优质，但十分喜欢卖书，在 Google+ 上主要推销他的书……&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;结语&quot;&gt;&lt;a href=&quot;# 结语&quot; class=&quot;headerlink&quot; title=&quot;结语&quot;&gt;&lt;/a&gt;结语 &lt;/h2&gt;&lt;p&gt; 学习和开发是一个循序渐进的过程，通过一个实际项目，不断接触 Android 的方方面面，例如网络、数据库、视图、资源系统、组件、支持库等等，最终才可以对 Android 开发拥有深入的了解。祝各位学习顺利。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;从我入门 Android 开发至今已经两年有余，过程中有了一些经验和积累，所以在此将我对于入门者的建议记录下来。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://blog.zhanghai.me/tags/android/"/>
    
      <category term="教程" scheme="http://blog.zhanghai.me/tags/tutorial/"/>
    
      <category term="编程" scheme="http://blog.zhanghai.me/tags/programming/"/>
    
  </entry>
  
  <entry>
    <title>关于 C 语言的面试问题</title>
    <link href="http://blog.zhanghai.me/c-interview-questions/"/>
    <id>http://blog.zhanghai.me/c-interview-questions/</id>
    <published>2015-09-15T01:32:43.000Z</published>
    <updated>2015-11-17T08:47:05.883Z</updated>
    
    <content type="html">&lt;h2 id=&quot;由来&quot;&gt;&lt;a href=&quot;# 由来&quot; class=&quot;headerlink&quot; title=&quot;由来&quot;&gt;&lt;/a&gt;由来 &lt;/h2&gt;&lt;p&gt; 这是我在作为学生组织的面试官时，对熟练掌握 C/C++ 的面试者提出几个的问题，以及对于这几个问题我自己的答案。&lt;/p&gt;
&lt;p&gt;语法规则和特定技巧很大程度上只是记忆的问题，而在几个事实上知晓与否并不能断定面试者的高下。C 语言是一门十分接近底层实现的语言，许多的设计决定与实现直接相关，如果想要合适地运用，也要求程序员对于 C 的实现有透彻的理解。因此，这几个问题主要考察的是面试者在 C 原理与设计层面上的理解。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;# 问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;为什么以下的语句不会导致非法内存访问？&lt;/p&gt;
 &lt;!-- Unable to wrap a backtick code block in a list item. --&gt;
 &lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; f;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; *s = &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%p&quot;&lt;/span&gt;, &amp;amp;(*s).f);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;C++ 中的类实现了继承。请简单阐述如何在 C 中实现 &lt;code&gt;struct&lt;/code&gt; 的继承。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在 C 中 &lt;code&gt;void *&lt;/code&gt; 类型可以自动转换成其他指针类型，但在 C++ 中需要显式转换。请谈一谈 C 和 C++ 为什么采取了这两种设计。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;（请简述 C 语言中变量自动初始化的规则。）&lt;/p&gt;
&lt;p&gt; 在 C 语言中，全局变量和静态局部变量可以自动初始化为全零，但局部变量不会进行自动初始化。请谈一谈 C 为什么采取了这样的设计。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;我的答案&quot;&gt;&lt;a href=&quot;# 我的答案&quot; class=&quot;headerlink&quot; title=&quot;我的答案&quot;&gt;&lt;/a&gt;我的答案&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;C 语言中类型只存在于编译前，&lt;code&gt;struct&lt;/code&gt;只是对偏移量计算等操作的简化而已，因此，计算 &lt;code&gt;&amp;amp;(*s).f&lt;/code&gt;，不过是计算&lt;code&gt;s + sizeof(s.i)&lt;/code&gt; 而已，并不会像其他语言那样导致空指针异常。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;因为 C 中的 &lt;code&gt;struct&lt;/code&gt; 不过是对偏移量计算的简化，可以通过在子类的头部直接放置一个父类成员，之后进行类型转换，就能实现数据成员的继承，示例如下：&lt;/p&gt;
 &lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;span class=&quot;keyword&quot;&gt;base_t&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;base_t&lt;/span&gt; base;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; f;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;span class=&quot;keyword&quot;&gt;derived_t&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;derived_t&lt;/span&gt; *derived = &lt;span class=&quot;built_in&quot;&gt;malloc&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;derived_t&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;base_t&lt;/span&gt; *base = (&lt;span class=&quot;keyword&quot;&gt;base_t&lt;/span&gt; *) derived;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt; 为了实现函数的继承和多态，则需要函数指针，&lt;code&gt;this&lt;/code&gt;指针参数，构造器等实现，此处不再赘述。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在 C 中，&lt;code&gt;void *&lt;/code&gt;指向的是未知类型的内存区域，无论按照什么类型理解，都是合法的；并且 malloc 这样的常用调用返回类型只能是&lt;code&gt;void *&lt;/code&gt;，允许自动转换可以大大减少麻烦。&lt;/p&gt;
&lt;p&gt; 在 C++ 中，类型可能是类，而为了实现面向对象编程的特性，在类中保存了一些元信息，因此将一块未知的内存区域作为一个类来理解，这个操作不一定合法；为了保持类和非类指针在语法上的统一，选择了禁止 &lt;code&gt;void *&lt;/code&gt; 的自动转换。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;由于很多全局变量的初始值都需要是零，而在可执行文件中存储这么多零并没有意义，因此 C 语言规定全局变量初值为零，由此可以在生成的可执行文件中只记录全局变量所需空间的大小，而省略为零的值。至于静态局部变量，它的生命周期要求与全局变量相同，只是在编译时赋予了不同作用域的限制而已。为了实现这个特性，在大多数操作系统中，全局变量和静态局部变量被存放在一个全局的数据存储位置（BSS 段），在程序开始执行前由系统进行分配和清零。&lt;/p&gt;
&lt;p&gt; 局部变量与函数调用相关，在系统调用栈上动态分配，自动初始化将会在运行时不断带来额外负担，因此 C 语言将初始化交给程序员处理，不进行自动初始化。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;结语&quot;&gt;&lt;a href=&quot;# 结语&quot; class=&quot;headerlink&quot; title=&quot;结语&quot;&gt;&lt;/a&gt;结语 &lt;/h2&gt;&lt;p&gt; 理解了 C 的实现与设计之后，使用 C 就得心应手了－－你了解语言这样设计的原因和目的，也知道自己的一行代码会被翻译成怎样的指令，由此，豁然开朗。&lt;/p&gt;
&lt;p&gt;当然，C 有适合的任务，也有不适合的任务，任何语言都是如此，所以复杂性上的欠缺并不影响我对 C 语言的评价。&lt;/p&gt;
&lt;p&gt;大道至简，C 的许多设计与 Unix 哲学若合一契。也是因此我对 C/C++ 这种说法不太喜欢。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;由来&quot;&gt;&lt;a href=&quot;#由来&quot; class=&quot;headerlink&quot; title=&quot;由来&quot;&gt;&lt;/a&gt;由来&lt;/h2&gt;&lt;p&gt;这是我在作为学生组织的面试官时，对熟练掌握 C/C++ 的面试者提出几个的问题，以及对于这几个问题我自己的答案。&lt;/p&gt;
&lt;p&gt;语法规则和特定技巧很大程度上只是记忆的问题，而在几个事实上知晓与否并不能断定面试者的高下。C 语言是一门十分接近底层实现的语言，许多的设计决定与实现直接相关，如果想要合适地运用，也要求程序员对于 C 的实现有透彻的理解。因此，这几个问题主要考察的是面试者在 C 原理与设计层面上的理解。&lt;/p&gt;
    
    </summary>
    
    
      <category term="笔记" scheme="http://blog.zhanghai.me/tags/note/"/>
    
      <category term="编程" scheme="http://blog.zhanghai.me/tags/programming/"/>
    
      <category term="职业" scheme="http://blog.zhanghai.me/tags/career/"/>
    
  </entry>
  
  <entry>
    <title>使用 Gradle 发布项目至 Maven Central</title>
    <link href="http://blog.zhanghai.me/publish-project-to-maven-central-with-gradle/"/>
    <id>http://blog.zhanghai.me/publish-project-to-maven-central-with-gradle/</id>
    <published>2015-06-11T04:32:45.000Z</published>
    <updated>2015-12-16T12:29:23.735Z</updated>
    
    <content type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;# 前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言 &lt;/h2&gt;&lt;p&gt; 将项目发布至 Maven Central，可以使开发者在使用时十分方便地进行整合和依赖管理。然而发布过程并不简单，因此将我发布的过程和遇到的问题记录于此。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;Gradle&quot;&gt;&lt;a href=&quot;#Gradle&quot; class=&quot;headerlink&quot; title=&quot;Gradle&quot;&gt;&lt;/a&gt;Gradle&lt;/h2&gt;&lt;p&gt;作为一个 Android 开发者，一般会使用 Gradle 进行构建与发布。广为使用的脚本是 Chris Banes 所写的 &lt;code&gt;gradle-mvn-push&lt;/code&gt;，项目中的 &lt;code&gt;README.md&lt;/code&gt; 有详细的步骤说明。&lt;/p&gt;
&lt;blockquote class=&quot;callout&quot;&gt;&lt;div class=&quot;title&quot;&gt;外部文章&lt;/div&gt;&lt;a href=&quot;https://github.com/chrisbanes/gradle-mvn-push/blob/master/README.md&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;gradle-mvn-push 的 README&lt;/a&gt;&lt;/blockquote&gt;
&lt;p&gt;我不喜欢将密码明文写在配置文件中，而是习惯从终端读入密码，因此我对 &lt;code&gt;gradle-mvn-push.gradle&lt;/code&gt; 进行了一些修改：&lt;/p&gt;
&lt;figure class=&quot;highlight gradle&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; getReleaseRepositoryUrl() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; hasProperty(&lt;span class=&quot;string&quot;&gt;&#39;RELEASE_REPOSITORY_URL&#39;&lt;/span&gt;) ? RELEASE_REPOSITORY_URL&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            : &lt;span class=&quot;string&quot;&gt;&quot;https://oss.sonatype.org/service/local/staging/deploy/maven2/&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; getSnapshotRepositoryUrl() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; hasProperty(&lt;span class=&quot;string&quot;&gt;&#39;SNAPSHOT_REPOSITORY_URL&#39;&lt;/span&gt;) ? SNAPSHOT_REPOSITORY_URL&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            : &lt;span class=&quot;string&quot;&gt;&quot;https://oss.sonatype.org/content/repositories/snapshots/&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    gradle.taskGraph.whenReady &amp;#123; taskGraph -&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (taskGraph.allTasks.&lt;span class=&quot;keyword&quot;&gt;any&lt;/span&gt; &amp;#123; it &lt;span class=&quot;keyword&quot;&gt;instanceof&lt;/span&gt; Sign &amp;#125;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;allprojects&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 ext.&lt;span class=&quot;string&quot;&gt;&quot;signing.password&quot;&lt;/span&gt; = System.console() != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; ? System.console().readLine(&lt;span class=&quot;string&quot;&gt;&quot;\nPGP private key password:&quot;&lt;/span&gt;) : &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;此外，这个脚本在构建 &lt;code&gt;JavaDoc&lt;/code&gt; 时会使用系统的语言设置，导致生成的文档可能是中文版本。通过将 &lt;code&gt;LANG=&amp;quot;en_US.UTF-8&amp;quot;&lt;/code&gt; 附加在 &lt;code&gt;gradle&lt;/code&gt; 命令之前可以将语言设置为英文。&lt;/p&gt;
&lt;p&gt;关于我自己采用的配置，可以参考我 &lt;a href=&quot;https://github.com/DreaminginCodeZH/MaterialProgressBar&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; 在 Github 上的项目&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&quot;OSSRH&quot;&gt;&lt;a href=&quot;#OSSRH&quot; class=&quot;headerlink&quot; title=&quot;OSSRH&quot;&gt;&lt;/a&gt;OSSRH&lt;/h2&gt;&lt;p&gt;为了在 Maven Central 上发布项目，一般会选择在 Sonatype OSSRH (OSS Repository Hosting) 上注册账户进行操作。最顶层的帮助是以下这篇文章，从其中的链接可以进入其他子页面查看详细步骤。&lt;/p&gt;
&lt;blockquote class=&quot;callout&quot;&gt;&lt;div class=&quot;title&quot;&gt;外部文章&lt;/div&gt;&lt;a href=&quot;http://central.sonatype.org/pages/ossrh-guide.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;OSSRH Guide&lt;/a&gt;&lt;/blockquote&gt;
&lt;p&gt;同时，这篇中文文章也较为详尽，对我的发布过程有很大帮助。&lt;/p&gt;
&lt;blockquote class=&quot;callout&quot;&gt;&lt;div class=&quot;title&quot;&gt;外部文章 &lt;/div&gt;&lt;a href=&quot;http://blog.csdn.net/qiujuer/article/details/44195131&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; 使用 Gradle 发布 AAR 到 Maven 仓库&lt;/a&gt;&lt;/blockquote&gt;
&lt;p&gt;以下是我的步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://issues.sonatype.org/secure/Signup!default.jspa&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;注册 JIRA 账户&lt;/a&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://issues.sonatype.org/secure/CreateIssue.jspa?issuetype=21&amp;amp;pid=10134&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;创建工程工单&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt; Group Id 请填写顶级域名的反转，因为每个用户只需要创建一次工单，之后会将整个 Group Id 下的权限开放给用户。我填写了项目的 Group Id，之后被处理者修正。&lt;/p&gt;
&lt;p&gt; SCM URL 可以直接填写 GitHub 仓库的地址。我开始时一直尝试使用 SSH 克隆地址，但总是不能通过验证。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;发布项目至暂存区。&lt;/p&gt;
&lt;p&gt; 使用 &lt;code&gt;gradle-mvn-push&lt;/code&gt;，执行 &lt;code&gt;LANG=&amp;quot;en_US.UTF-8&amp;quot; gradle clean build uploadArchives&lt;/code&gt;。这需要正确的 PGP 签名设置，将在这篇文章的稍后进行说明。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;公开发布项目。&lt;/p&gt;
&lt;p&gt; 前往 &lt;a href=&quot;https://oss.sonatype.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Sonatype OSS&lt;/a&gt;，登录，点击左侧边栏中的 Staging Repositories，找到并选择自己的项目，点击 Close，刷新并等待操作完成，之后点击 Release，即完成公开发布。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;回复工单&lt;/p&gt;
&lt;p&gt; 在处理者对工单的回复中，会要求你在公开发布第一个项目后回复此工单，照做即可。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;GnuPG（2-1）&quot;&gt;&lt;a href=&quot;#GnuPG（2-1）&quot; class=&quot;headerlink&quot; title=&quot;GnuPG（2.1）&quot;&gt;&lt;/a&gt;GnuPG（2.1）&lt;/h2&gt;&lt;p&gt;GnuPG 2.1 的使用是我在这次发布过程中遇到的最为棘手的问题，因为网络上大部分的教程还是基于之前的版本，导致许多已经更改的操作方式不再可用；并且 Gradle 也尚未支持这个版本，尽管 2.1 已在去年 11 月发布。因此在这里简单记录一些我遇到的问题和解决方案。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;无法选定密钥长度。&lt;/p&gt;
&lt;p&gt; 在 GnuPG 2.1 中，需要使用 &lt;code&gt;--full-gen-key&lt;/code&gt; 以获取之前在 &lt;code&gt;--gen-key&lt;/code&gt; 中可用的选项。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;无法使用命令行输入密码。&lt;/p&gt;
&lt;p&gt; GnuPG 默认在有图形界面时使用会 &lt;code&gt;XGrabKeyboard&lt;/code&gt; 的窗口进行密码输入，并且无法从剪贴板粘贴文本，给我使用随机密码带来了很多不便，因此我希望从命令行输入密码。&lt;/p&gt;
&lt;p&gt; 在 GnuPG 2.1 中，一切相关的操作被交由 &lt;code&gt;gpg-agent&lt;/code&gt; 完成，同时，&lt;code&gt;--pinentry-mode loopback&lt;/code&gt; 被提示为不支持，即使在 &lt;code&gt;gpg-agent.conf&lt;/code&gt; 中添加 &lt;code&gt;allow-loopback-pinentry&lt;/code&gt; 也没有作用。&lt;/p&gt;
&lt;p&gt; 最终我的解决方案是在执行 &lt;code&gt;gpg&lt;/code&gt; 前 &lt;code&gt;DISPLAY=&amp;quot;&amp;quot;&lt;/code&gt; 使其使用一个基于 &lt;code&gt;curses&lt;/code&gt; 的命令行界面，然后对终端进行粘贴文本。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;secring.gpg&lt;/code&gt; 中找不到私钥。&lt;/p&gt;
&lt;p&gt; GnuPG 2.1 &lt;a href=&quot;https://www.gnupg.org/faq/whats-new-in-2.1.html#nosecring&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;已经不再使用 &lt;code&gt;secring.gpg&lt;/code&gt;&lt;/a&gt;，因此新创建的私钥不会向其中写入，而是会由 &lt;code&gt;gpg-agent&lt;/code&gt; 写入至 &lt;code&gt;private-keys-v1.d&lt;/code&gt; 目录。为了兼容 Gradle 签名插件，我将私钥导出，模拟了一个 &lt;code&gt;secring.gpg&lt;/code&gt;。&lt;/p&gt;
 &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;DISPLAY=&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt; gpg --output secring.gpg --export-secret-keys &amp;lt;YOUR_KEY_ID&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;需要将公钥发布至公钥服务器才能通过审核。&lt;/p&gt;
&lt;p&gt; 在对项目进行 Close 时，会对签名进行验证，因此需要将你的公钥上传以使其可以被公开获取。我选择了发布至 MIT 公钥服务器。&lt;/p&gt;
 &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;gpg --keyserver pgp.mit.edu --send-key &amp;lt;YOUR_KEY_ID&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;附加：为示例应用生成签名密钥&quot;&gt;&lt;a href=&quot;# 附加：为示例应用生成签名密钥&quot; class=&quot;headerlink&quot; title=&quot;附加：为示例应用生成签名密钥&quot;&gt;&lt;/a&gt;附加：为示例应用生成签名密钥 &lt;/h2&gt;&lt;p&gt; 可以使用 Java 的 &lt;code&gt;keytool&lt;/code&gt; 工具进行生成，但 Android Studio 提供了自带推荐参数并且简单易用的界面。&lt;/p&gt;
&lt;p&gt;在 Android Studio 中，点击“Build &amp;gt; Generate Signed APK…”，如果已有密钥存储则点击“Choose existing…”并选择，之后点击“Create new…”填写信息并创建密钥即可。&lt;/p&gt;
&lt;p&gt;这种方法并不会覆盖密钥存储中已有的密钥。但还是建议在操作之前，进行备份。&lt;/p&gt;
&lt;h2 id=&quot;结语&quot;&gt;&lt;a href=&quot;# 结语&quot; class=&quot;headerlink&quot; title=&quot;结语&quot;&gt;&lt;/a&gt;结语 &lt;/h2&gt;&lt;p&gt; 发布项目到 Maven Central 的过程确实十分复杂，同时 GnuPG 进行了不兼容升级并且缺乏文档，所以令我花费了不少时间。&lt;/p&gt;
&lt;p&gt;相比之下，通过 BinTray 发布则更为简单和自动化一些，然而它要求你将私钥上传至它的服务器，这令我不太舒服，因此并没有采用。&lt;/p&gt;
&lt;p&gt;虽然麻烦，但是对于开发者来说，发布之后的使用还是十分舒服的，因此这些努力也算没有白费。记录在此，希望能够在其他开发者发布自己的项目时有所帮助。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;将项目发布至 Maven Central，可以使开发者在使用时十分方便地进行整合和依赖管理。然而发布过程并不简单，因此将我发布的过程和遇到的问题记录于此。&lt;/p&gt;
    
    </summary>
    
    
      <category term="教程" scheme="http://blog.zhanghai.me/tags/tutorial/"/>
    
      <category term="软件" scheme="http://blog.zhanghai.me/tags/software/"/>
    
  </entry>
  
  <entry>
    <title>使用 SWT 搭建跨平台桌面应用</title>
    <link href="http://blog.zhanghai.me/building-portable-desktop-application-with-swt/"/>
    <id>http://blog.zhanghai.me/building-portable-desktop-application-with-swt/</id>
    <published>2015-04-29T02:25:34.000Z</published>
    <updated>2015-10-21T07:39:08.313Z</updated>
    
    <content type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;# 前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言 &lt;/h2&gt;&lt;p&gt; 在我的计算机组成课程上，教授要求编写一个 MIPS 汇编器并提供图形界面。由于我的工作环境并非 Windows，同时希望在各个平台的界面中使用原生控件，并且我偏好使用静态类型语言，所以决定使用 SWT 进行图形界面的编写。&lt;/p&gt;
&lt;img src=&quot;/building-portable-desktop-application-with-swt/mipsasm-windows.png&quot; alt=&quot;MIPS 汇编集成开发环境 - Windows&quot; title=&quot;MIPS 汇编集成开发环境 - Windows&quot;&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;img src=&quot;/building-portable-desktop-application-with-swt/mipsasm-gtk3.png&quot; alt=&quot;MIPS 汇编集成开发环境 - GTK+ 3&quot; title=&quot;MIPS 汇编集成开发环境 - GTK+ 3&quot;&gt;
&lt;h2 id=&quot;集成&quot;&gt;&lt;a href=&quot;# 集成&quot; class=&quot;headerlink&quot; title=&quot;集成&quot;&gt;&lt;/a&gt;集成 &lt;/h2&gt;&lt;p&gt; 鉴于 Maven 上的版本老旧，推荐直接前往 &lt;a href=&quot;http://www.eclipse.org/swt/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SWT 官方网站 &lt;/a&gt; 下载稳定发行版本。我使用的开发环境是 IntelliJ Idea，因此在 Project Structure 中的 Libraries 和 Artifacts 内添加相应的设置即可。&lt;/p&gt;
&lt;h2 id=&quot;架构&quot;&gt;&lt;a href=&quot;# 架构&quot; class=&quot;headerlink&quot; title=&quot;架构&quot;&gt;&lt;/a&gt;架构 &lt;/h2&gt;&lt;p&gt; 我是一名 Android 开发者，因此我在学习 SWT 时也会与 Android 框架进行对比。二者多有类似，也有不同。&lt;/p&gt;
&lt;p&gt;在 SWT 中，&lt;a href=&quot;http://help.eclipse.org/luna/topic/org.eclipse.platform.doc.isv/reference/api/org/eclipse/swt/widgets/Display.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;Display&lt;/code&gt;&lt;/a&gt; 与 Android 中 &lt;a href=&quot;http://developer.android.com/reference/android/content/Context.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;Context&lt;/code&gt;&lt;/a&gt; 和 &lt;a href=&quot;http://developer.android.com/reference/android/app/Application.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;Application&lt;/code&gt;&lt;/a&gt; 的设计有所相近，具有系统资源管理和应用层面操作的功能。而 &lt;code&gt;Display&lt;/code&gt; 的一个实用的扩展是 &lt;code&gt;Display.getCurrent()&lt;/code&gt; 和 &lt;code&gt;Display.getDefault()&lt;/code&gt;，即可以通过静态方法获取当前线程或默认的 &lt;code&gt;Display&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;而与 Android 中的 &lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;Activity&lt;/code&gt;&lt;/a&gt; 相近的则是 &lt;a href=&quot;http://help.eclipse.org/luna/topic/org.eclipse.platform.doc.isv/reference/api/org/eclipse/swt/widgets/Shell.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;Shell&lt;/code&gt;&lt;/a&gt;。&lt;code&gt;Shell&lt;/code&gt; 代表一个平台无关的抽象窗口，由此可以进行窗口相关的操作，并建立视图结构。&lt;/p&gt;
&lt;p&gt;与 Andorid 不同，SWT 中没有 XML 布局系统，所有视图的创建需要由应用程序的 Java 代码完成（但有自动将 XML 转换为 Java 代码的工具，如 &lt;a href=&quot;https://code.google.com/p/swtxml/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SWTXML&lt;/a&gt; 等）。&lt;a href=&quot;http://help.eclipse.org/luna/topic/org.eclipse.platform.doc.isv/reference/api/org/eclipse/swt/widgets/Control.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;Control&lt;/code&gt;&lt;/a&gt; 与 Android 中的 &lt;a href=&quot;http://developer.android.com/reference/android/view/View.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;View&lt;/code&gt;&lt;/a&gt; 类似，是所有控件的基类，但不同的是，所有的 &lt;code&gt;Control&lt;/code&gt; 在构造时都需要一个 &lt;a href=&quot;http://help.eclipse.org/luna/topic/org.eclipse.platform.doc.isv/reference/api/org/eclipse/swt/widgets/Composite.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;Composite&lt;/code&gt;&lt;/a&gt; 作为父对象，既是 Android 中的 &lt;code&gt;Context&lt;/code&gt;，也是视图结构上的父容器。而之后如果需要更改控件的父容器，可以调用&lt;code&gt;Control.setParent()&lt;/code&gt;，但是否成功则需要由平台支持决定。&lt;/p&gt;
&lt;p&gt;一个窗口最初的 &lt;code&gt;Composite&lt;/code&gt; 实例即是 &lt;code&gt;Shell&lt;/code&gt;。&lt;/p&gt;
&lt;h2 id=&quot;使用&quot;&gt;&lt;a href=&quot;# 使用&quot; class=&quot;headerlink&quot; title=&quot;使用&quot;&gt;&lt;/a&gt;使用 &lt;/h2&gt;&lt;h3 id=&quot;主循环&quot;&gt;&lt;a href=&quot;# 主循环&quot; class=&quot;headerlink&quot; title=&quot;主循环&quot;&gt;&lt;/a&gt; 主循环&lt;/h3&gt;&lt;p&gt;SWT 的主循环是由应用程序自己书写的。常见的范式如下：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;onCreateDisplay();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;onCreateShell();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;shell.open();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (!shell.isDisposed()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!display.readAndDispatch()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        display.sleep();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;display.dispose();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;视图结构创建&quot;&gt;&lt;a href=&quot;# 视图结构创建&quot; class=&quot;headerlink&quot; title=&quot;视图结构创建&quot;&gt;&lt;/a&gt;视图结构创建 &lt;/h3&gt;&lt;p&gt; 在创建 &lt;code&gt;Shell&lt;/code&gt; 实例之后，一般会添加界面元素和布局信息。示例代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onCreateShell&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    shell = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Shell(display, SWT.SHELL_TRIM);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 设置图标&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    shell.setImages(icons);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 设置根视图布局&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    shell.setLayout(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; FillLayout());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 创建一个 SashForm，作为根视图的子视图&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sashForm = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SashForm(shell, SWT.VERTICAL);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 创建编辑器文本框&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    editText = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StyledText(sashForm, SWT.H_SCROLL | SWT.V_SCROLL);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    editText.setAlwaysShowScrollBars(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 创建消息区文本框&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    messageText = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StyledText(sashForm, SWT.H_SCROLL | SWT.V_SCROLL);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    messageText.setAlwaysShowScrollBars(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    messageText.setEditable(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sashForm.setWeights(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;[]&amp;#123;&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 本程序菜单实现依赖于 editText&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    onCreateMenu();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    shell.setMenuBar(menu);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 监听窗口关闭事件，提示保存&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    shell.addListener(SWT.Close, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Listener() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;handleEvent&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Event event)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            event.doit = onClose();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 更新窗口标题&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    updateTitle();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;视图布局&quot;&gt;&lt;a href=&quot;# 视图布局&quot; class=&quot;headerlink&quot; title=&quot;视图布局&quot;&gt;&lt;/a&gt;视图布局&lt;/h3&gt;&lt;p&gt;SWT 中的布局方式分为两步：使用 &lt;code&gt;Composite.setLayout()&lt;/code&gt; 设置父元素布局子元素时使用的布局方式，使用 &lt;code&gt;Control.setLayoutData()&lt;/code&gt; 提供子元素的布局参数。这与 Android 中的布局方式有些许不同，即 SWT 中的 &lt;a href=&quot;http://help.eclipse.org/luna/topic/org.eclipse.platform.doc.isv/reference/api/org/eclipse/swt/widgets/Layout.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;Layout&lt;/code&gt;&lt;/a&gt; 是父容器的参数而非父容器本身的类型。&lt;/p&gt;
&lt;p&gt;SWT 中常用的 &lt;code&gt;Layout&lt;/code&gt; 包括 &lt;a href=&quot;http://help.eclipse.org/luna/topic/org.eclipse.platform.doc.isv/reference/api/org/eclipse/swt/layout/FillLayout.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;FillLayout&lt;/code&gt;&lt;/a&gt;、&lt;a href=&quot;http://help.eclipse.org/luna/topic/org.eclipse.platform.doc.isv/reference/api/org/eclipse/swt/layout/RowLayout.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;RowLayout&lt;/code&gt;&lt;/a&gt;、&lt;a href=&quot;http://help.eclipse.org/luna/topic/org.eclipse.platform.doc.isv/reference/api/org/eclipse/swt/layout/GridLayout.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;GridLayout&lt;/code&gt;&lt;/a&gt;、&lt;a href=&quot;http://help.eclipse.org/luna/topic/org.eclipse.platform.doc.isv/reference/api/org/eclipse/swt/layout/FormLayout.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;FormLayout&lt;/code&gt;&lt;/a&gt; 和 &lt;a href=&quot;http://help.eclipse.org/luna/topic/org.eclipse.platform.doc.isv/reference/api/org/eclipse/swt/custom/SashForm.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;SashForm&lt;/code&gt;&lt;/a&gt; 等。对于前三种基础布局，可以参考 &lt;a href=&quot;http://www.eclipse.org/articles/article.php?file=Article-Understanding-Layouts/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Eclipse 的这篇文章 &lt;/a&gt; 进行学习。&lt;/p&gt;
&lt;h3 id=&quot;资源系统&quot;&gt;&lt;a href=&quot;# 资源系统&quot; class=&quot;headerlink&quot; title=&quot;资源系统&quot;&gt;&lt;/a&gt;资源系统 &lt;/h3&gt;&lt;p&gt; 与 Android 框架不同，SWT 只是一个图形界面库，因此不提供资源系统。&lt;/p&gt;
&lt;p&gt;在写作一般规模的 SWT 应用时，可以使用 Java 自带的 &lt;a href=&quot;http://docs.oracle.com/javase/7/docs/api/java/util/ResourceBundle.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;ResourceBundle&lt;/code&gt;&lt;/a&gt; 进行资源管理与国际化。&lt;/p&gt;
&lt;p&gt;常见的范式如下：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ResourceBundle resourceBundle = ResourceBundle.getBundle(&lt;span class=&quot;string&quot;&gt;&quot;res/string/mipside&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Utf8Control());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Display.setAppName(resourceBundle.getString(&lt;span class=&quot;string&quot;&gt;&quot;app_name&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其中 &lt;code&gt;Utf8Control&lt;/code&gt; 是为了使得 ResourceBundle 支持直接读取 UTF-8 编码的资源文件的类，可以从之后我的项目中获得我编写的版本；ResourceBundle 默认只支持 ASCII 编码。&lt;/p&gt;
&lt;h3 id=&quot;设置存储&quot;&gt;&lt;a href=&quot;# 设置存储&quot; class=&quot;headerlink&quot; title=&quot;设置存储&quot;&gt;&lt;/a&gt;设置存储 &lt;/h3&gt;&lt;p&gt; 为了保存用户的设置，可以使用 Java 自带的 &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/api/java/util/prefs/Preferences.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;Preferences&lt;/code&gt;&lt;/a&gt; 进行键值对的存储。使用时可以通过 &lt;code&gt;Preferences.userNodeForPackage()&lt;/code&gt; 获取一个节点的 &lt;code&gt;Preferences&lt;/code&gt; 实例，而之后则与使用 Android 中的 &lt;a href=&quot;http://developer.android.com/reference/android/content/SharedPreferences.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;SharedPreferences&lt;/code&gt;&lt;/a&gt; 类似。&lt;/p&gt;
&lt;h2 id=&quot;部署&quot;&gt;&lt;a href=&quot;# 部署&quot; class=&quot;headerlink&quot; title=&quot;部署&quot;&gt;&lt;/a&gt;部署 &lt;/h2&gt;&lt;p&gt; 在 Linux 上，一个 Shell 脚本执行 &lt;code&gt;java -jar&lt;/code&gt; 已经足够。&lt;/p&gt;
&lt;p&gt;在 Windows 上，经过一些比较，我决定使用 &lt;a href=&quot;http://launch4j.sourceforge.net/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;launch4j&lt;/a&gt;，至今体验良好。&lt;/p&gt;
&lt;p&gt;在 Mac OS X 上，JVM 需要特定参数才能正常启动应用，以及其他打包应用程序的细节，可以参考 &lt;a href=&quot;https://www.eclipse.org/swt/macosx/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; 这篇 Eclipse 的文档&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&quot;评价&quot;&gt;&lt;a href=&quot;# 评价&quot; class=&quot;headerlink&quot; title=&quot;评价&quot;&gt;&lt;/a&gt;评价 &lt;/h2&gt;&lt;p&gt; 在使用 SWT 完成我的项目后，总体来说，感觉这是一个可用的图形库。&lt;/p&gt;
&lt;p&gt;从接口方面看，SWT 遵循着一致的命名规范，但 Builder 模式的缺失使得构造控件的过程较为冗长，此外将样式、键码等大量常量放置在 &lt;a href=&quot;http://help.eclipse.org/luna/topic/org.eclipse.platform.doc.isv/reference/api/org/eclipse/swt/SWT.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;SWT&lt;/code&gt;&lt;/a&gt; 类中也显得较为奇怪。&lt;/p&gt;
&lt;p&gt;从功能方面看，SWT 跨平台调用原生控件的能力确实令人惊喜。众多部件在 Windows、Linux GTK+ 3 和 GTK+ 2、Mac OS X Cocoa 上不需要经过调试即表现良好，并且通过打包与原生应用几乎没有什么差异。美中不足的只是一些小的设计细节，例如标签中的文本不能使用光标选择复制、带有链接的多行标签需要使用另一个类却不能指定多行文本居中对齐。但总体来说，这些瑕疵要么可以绕过，要么相比于 SWT 本身带来的便捷来说，无伤大雅。&lt;/p&gt;
&lt;h2 id=&quot;结语&quot;&gt;&lt;a href=&quot;# 结语&quot; class=&quot;headerlink&quot; title=&quot;结语&quot;&gt;&lt;/a&gt;结语 &lt;/h2&gt;&lt;p&gt; 菜单、字体、图像、对话框、&lt;a href=&quot;http://help.eclipse.org/luna/topic/org.eclipse.platform.doc.isv/reference/api/org/eclipse/swt/custom/StyledText.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;StyledText&lt;/code&gt;&lt;/a&gt;，还有关于 SWT 的很多方面这篇文章没有覆盖到。但网络上相关的资源是十分丰富的，例如 Google、Eclipse 的 Javadoc 和 Java2s 上的代码示例都是有用的信息来源。&lt;/p&gt;
&lt;p&gt;如果有兴趣，我的项目中也有一些按照我自己对 SWT 的理解写出的代码，可以 &lt;a href=&quot;https://github.com/DreaminginCodeZH/mipsasm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; 移步至 GitHub 浏览&lt;/a&gt;。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;在我的计算机组成课程上，教授要求编写一个 MIPS 汇编器并提供图形界面。由于我的工作环境并非 Windows，同时希望在各个平台的界面中使用原生控件，并且我偏好使用静态类型语言，所以决定使用 SWT 进行图形界面的编写。&lt;/p&gt;
&lt;img src=&quot;/building-portable-desktop-application-with-swt/mipsasm-windows.png&quot; alt=&quot;MIPS 汇编集成开发环境 - Windows&quot; title=&quot;MIPS 汇编集成开发环境 - Windows&quot;&gt;
    
    </summary>
    
    
      <category term="教程" scheme="http://blog.zhanghai.me/tags/tutorial/"/>
    
      <category term="编程" scheme="http://blog.zhanghai.me/tags/programming/"/>
    
  </entry>
  
  <entry>
    <title>LinearLayout 的拖放操作和动画</title>
    <link href="http://blog.zhanghai.me/drag-and-drop-with-animation-on-linearlayout/"/>
    <id>http://blog.zhanghai.me/drag-and-drop-with-animation-on-linearlayout/</id>
    <published>2015-02-25T05:04:38.000Z</published>
    <updated>2015-05-02T07:05:18.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;# 前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言 &lt;/h2&gt;&lt;p&gt;Android 中&lt;code&gt;ListView&lt;/code&gt; 的拖放操作和动画实现已经被 &lt;a href=&quot;https://www.youtube.com/watch?v=_BZIvjMgH-Q&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; 这个 DevByte&lt;/a&gt; 和 &lt;a href=&quot;https://android.googlesource.com/platform/development/+/master/samples/devbytes/animation/ListViewDraggingAnimation&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; 相关的样例 &lt;/a&gt; 说明，并且也有 &lt;a href=&quot;https://github.com/nhaarman/ListViewAnimations&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ListViewAnimations&lt;/a&gt; 这样强大的开源库进行了集成。但是，一番 Google 后，我发现基于 &lt;code&gt;LinearLayout&lt;/code&gt; 的相关实现却不多。&lt;/p&gt;
&lt;p&gt;然而，有时我们可能需要使用 &lt;code&gt;LinearLayout&lt;/code&gt; 替代 &lt;code&gt;ListView&lt;/code&gt; 来实现列表，例如不需要 &lt;code&gt;ListView&lt;/code&gt; 的视图回收机制（比如使用 &lt;code&gt;Fragment&lt;/code&gt; 作为列表项），或者我们需要把这个视图放在 &lt;code&gt;ScrollView&lt;/code&gt; 中。&lt;/p&gt;
&lt;p&gt;在使用 &lt;code&gt;LinearLayout&lt;/code&gt; 实现拖放和动画时，实现代码相比于之前提到的 &lt;code&gt;ListView&lt;/code&gt; 实现也需要一些变动。因为我在网络上没有找到相应的资料，所以写下这篇文章来记录这个过程。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;拖放&quot;&gt;&lt;a href=&quot;# 拖放&quot; class=&quot;headerlink&quot; title=&quot;拖放&quot;&gt;&lt;/a&gt;拖放 &lt;/h2&gt;&lt;blockquote class=&quot;callout&quot;&gt;&lt;div class=&quot;title&quot;&gt; 前置阅读&lt;/div&gt;&lt;a href=&quot;https://developer.android.com/guide/topics/ui/drag-drop.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Drag and Drop | Android Developers&lt;/a&gt;&lt;br&gt;&lt;/blockquote&gt;
&lt;p&gt;为 &lt;code&gt;LinearLayout&lt;/code&gt; 设定 &lt;a href=&quot;http://developer.android.com/reference/android/view/View.OnDragListener.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;View.OnDragListener&lt;/code&gt;&lt;/a&gt; 很简单，其机制在官方教程中有详细说明，在此不再赘述。&lt;/p&gt;
&lt;p&gt;但是，官方教程中给出的样例在释放被拖动条目后只会显示一条 &lt;code&gt;Toast&lt;/code&gt;，而一般的需求则是拖放排序。所以在参考了网上的一些文章后，我给出了下面这个简单的实现。与官方样例相比，添加的主要是在&lt;code&gt;ViewGroup&lt;/code&gt; 中交换子视图的实现，以及将被拖动的视图作为 &lt;code&gt;LocalState&lt;/code&gt; 传递。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setupDragSort&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(View view)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    view.setOnDragListener(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; View.OnDragListener() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onDrag&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; View view, DragEvent event)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ViewGroup viewGroup = (ViewGroup)view.getParent();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            View dragView = (View)event.getLocalState();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt; (event.getAction()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; DragEvent.ACTION_DROP:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (view != dragView) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        swapViewGroupChildren(viewGroup, view, dragView);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    view.setOnLongClickListener(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; View.OnLongClickListener() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onLongClick&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(View view)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            view.startDrag(&lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; View.DragShadowBuilder(view), view, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;swapViewGroupChildren&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(ViewGroup viewGroup, View firstView, View secondView)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; firstIndex = viewGroup.indexOfChild(firstView);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; secondIndex = viewGroup.indexOfChild(secondView);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (firstIndex &amp;lt; secondIndex) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        viewGroup.removeViewAt(secondIndex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        viewGroup.removeViewAt(firstIndex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        viewGroup.addView(secondView, firstIndex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        viewGroup.addView(firstView, secondIndex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        viewGroup.removeViewAt(firstIndex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        viewGroup.removeViewAt(secondIndex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        viewGroup.addView(firstView, secondIndex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        viewGroup.addView(secondView, firstIndex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;video controls loop src=&quot;/drag-and-drop-with-animation-on-linearlayout/swap.mp4&quot; onclick=&quot;this.paused ? this.play() : this.pause()&quot;&gt;&lt;/video&gt;
&lt;p&gt;这个实现已经可以完成拖动排序，然而界面效果却不理想：被拖动的条目没有消失，列表在拖动过程中也没有作出相应的改变。下面我们将使用 Android 的属性动画实现这种界面效果。&lt;/p&gt;
&lt;h2 id=&quot;在拖动过程中响应更改&quot;&gt;&lt;a href=&quot;# 在拖动过程中响应更改&quot; class=&quot;headerlink&quot; title=&quot;在拖动过程中响应更改&quot;&gt;&lt;/a&gt;在拖动过程中响应更改 &lt;/h2&gt;&lt;p&gt; 言归正传。为了实现拖放过程中的动画，我们的目标是使用 &lt;code&gt;LinearLayout&lt;/code&gt; 的列表视图能够对用户的拖动实时作出相应，也就是每次当用户的拖动越过某个临界线的时候，就将列表展现为被拖动条目在这里放下时的预览。因此，需要完成的工作就是将被拖动视图的 &lt;code&gt;Visibility&lt;/code&gt; 设置为&lt;code&gt;View.INVISIBLE&lt;/code&gt;，此时被拖动视图参与布局计算，但不进行绘制（已经被用户拖起），再不断改变列表中各个条目的位置。&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setupDragSort&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(View view)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    view.setOnDragListener(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; View.OnDragListener() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onDrag&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; View view, DragEvent event)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ViewGroup viewGroup = (ViewGroup)view.getParent();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            DragState dragState = (DragState)event.getLocalState();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt; (event.getAction()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; DragEvent.ACTION_DRAG_STARTED:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (view == dragState.view) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        view.setVisibility(View.INVISIBLE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; DragEvent.ACTION_DRAG_ENDED:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (view == dragState.view) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        view.setVisibility(View.VISIBLE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    view.setOnLongClickListener(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; View.OnLongClickListener() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onLongClick&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(View view)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            view.startDrag(&lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; View.DragShadowBuilder(view), &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; DragState(view), &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;DragState&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; View view;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; index;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;DragState&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(View view)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.view = view;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        index = ((ViewGroup)view.getParent()).indexOfChild(view);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;一个很自然的想法是，在用户拖动条目经过某个其他条目超过一般高度时，就将这个条目在父视图中的位置与被拖动条目互换（而不是等到用户拖动完成时）。这样就基本实现了布局系统中的改变。然而，由于在用户快速拖动时，Android 可能来不及向每个经过的视图发送消息，这种方式可能导致列表顺序的改变的问题（我在自己测试时就遇到了）。&lt;/p&gt;
&lt;p&gt;所以在实现视图交换时，我们需要使用递归的方式进行，直到两个视图达到相邻。实现代码如下。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setupDragSort&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(View view)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    view.setOnDragListener(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; View.OnDragListener() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onDrag&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; View view, DragEvent event)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt; (event.getAction()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; DragEvent.ACTION_DRAG_LOCATION: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (view == dragState.view)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; index = viewGroup.indexOfChild(view);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((index &amp;gt; dragState.index &amp;amp;&amp;amp; event.getY() &amp;gt; view.getHeight() / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            || (index &amp;lt; dragState.index &amp;amp;&amp;amp; event.getY() &amp;lt; view.getHeight() / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        swapViews(viewGroup, view, index, dragState);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        swapViewsBetweenIfNeeded(viewGroup, index, dragState);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;swapViewsBetweenIfNeeded&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(ViewGroup viewGroup, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; index,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                             DragState dragState)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (index - dragState.index &amp;gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; indexAbove = index - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        swapViews(viewGroup, viewGroup.getChildAt(indexAbove), indexAbove, dragState);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (dragState.index - index &amp;gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; indexBelow = index + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        swapViews(viewGroup, viewGroup.getChildAt(indexBelow), indexBelow, dragState);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;swapViews&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(ViewGroup viewGroup, &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; View view, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; index,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                              DragState dragState)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    swapViewsBetweenIfNeeded(viewGroup, index, dragState);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    swapViewGroupChildren(viewGroup, view, dragState.view);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dragState.index = index;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;video controls loop src=&quot;/drag-and-drop-with-animation-on-linearlayout/realtime.mp4&quot; onclick=&quot;this.paused ? this.play() : this.pause()&quot;&gt;&lt;/video&gt;
&lt;h2 id=&quot;动画&quot;&gt;&lt;a href=&quot;# 动画&quot; class=&quot;headerlink&quot; title=&quot;动画&quot;&gt;&lt;/a&gt;动画 &lt;/h2&gt;&lt;p&gt; 接下来是交换过程中动画的实现。在实现过程中，我参考了 &lt;a href=&quot;https://github.com/justasm/DragLinearLayout&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;justasm 的 DragLinearLayout&lt;/a&gt; 中的代码，在此表示感谢。&lt;/p&gt;
&lt;blockquote class=&quot;callout&quot;&gt;&lt;div class=&quot;title&quot;&gt;前置阅读&lt;/div&gt;&lt;a href=&quot;https://developer.android.com/guide/topics/graphics/prop-animation.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Property Animation | Android Developers&lt;/a&gt;&lt;/blockquote&gt;
&lt;p&gt;在实现动画时，我们主要利用的是 Android 的属性动画机制，涉及到的是 &lt;code&gt;View&lt;/code&gt; 的&lt;a href=&quot;http://developer.android.com/reference/android/view/View.html#Y&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;Y&lt;/code&gt;&lt;/a&gt;这个属性。&lt;/p&gt;
&lt;p&gt;在谈及实际实现之前，值得在此提及的是 &lt;code&gt;View&lt;/code&gt; 的&lt;code&gt;Left&lt;/code&gt;和 &lt;code&gt;Top&lt;/code&gt; 与&lt;code&gt;X&lt;/code&gt;和 &lt;code&gt;Y&lt;/code&gt; 的关系。&lt;code&gt;Left&lt;/code&gt;和 &lt;code&gt;Top&lt;/code&gt; 是在视图树布局过程中按照视图层级和布局参数等得出的，表示特定视图在屏幕上被布局系统分配的位置；而 &lt;code&gt;X&lt;/code&gt; 和&lt;code&gt;Y&lt;/code&gt;则是用于在实际绘制视图时定位的依据。&lt;/p&gt;
&lt;p&gt;这种实现的好处是，通过将实际绘制时与布局时的视图位置独立起来，可以实现动画过程中视图的位移、旋转等视觉变换，而不必受到布局系统中视图定位的拘束。顺带一提，&lt;code&gt;X&lt;/code&gt;和 &lt;code&gt;Y&lt;/code&gt; 其实是由 &lt;code&gt;Left&lt;/code&gt; 和&lt;code&gt;Top&lt;/code&gt;分别加上 &lt;code&gt;TRANSLATION_X&lt;/code&gt; 和&lt;code&gt;TRANSLATION_Y&lt;/code&gt;得到的，这是因为实际上视图还是要依赖于布局才能定位。&lt;/p&gt;
&lt;p&gt;言归正传。为了让视图位置的变化更加平滑，需要让视图的绘制位置从上一个位置渐变到下一个位置。我们在需要改变视图位置时可以通过 &lt;a href=&quot;http://developer.android.com/reference/android/view/View.html#getY%28%29&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;View.getY()&lt;/code&gt;&lt;/a&gt; 得到视图当前的绘制位置，但视图的下一个位置则需要经过下一次布局计算后才能获得。因此，我们使用一个常见的技巧，也就是利用&lt;a href=&quot;http://developer.android.com/reference/android/view/ViewTreeObserver.OnPreDrawListener.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;ViewTreeObserver.OnPreDrawListener&lt;/code&gt;&lt;/a&gt;，在绘制之前获取已经计算完成的布局位置，在这时开始进行视图动画。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;swapViews&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(ViewGroup viewGroup, &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; View view, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; index,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                              DragState dragState)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    swapViewsBetweenIfNeeded(viewGroup, index, dragState);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; viewY = view.getY();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    swapViewGroupChildren(viewGroup, view, dragState.view);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dragState.index = index;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    postOnPreDraw(view, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Runnable() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ObjectAnimator&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    .ofFloat(view, View.Y, viewY, view.getTop())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    .setDuration(getDuration(view))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    .start();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getDuration&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(View view)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; view.getResources().getInteger(android.R.integer.config_shortAnimTime);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;postOnPreDraw&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(View view, &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; Runnable runnable)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; ViewTreeObserver observer = view.getViewTreeObserver();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    observer.addOnPreDrawListener(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ViewTreeObserver.OnPreDrawListener() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onPreDraw&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (observer.isAlive()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                observer.removeOnPreDrawListener(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            runnable.run();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如此，我们就基本完成了拖放操作和动画的实现。效果如下：&lt;/p&gt;
&lt;video controls loop src=&quot;/drag-and-drop-with-animation-on-linearlayout/animation.mp4&quot; onclick=&quot;this.paused ? this.play() : this.pause()&quot;&gt;&lt;/video&gt;
&lt;h2 id=&quot;附加：删除条目&quot;&gt;&lt;a href=&quot;# 附加：删除条目&quot; class=&quot;headerlink&quot; title=&quot;附加：删除条目&quot;&gt;&lt;/a&gt;附加：删除条目 &lt;/h2&gt;&lt;p&gt; 既然写了这么多，最后再顺带给出一个删除条目及相应动画的实现。其中的 &lt;code&gt;view&lt;/code&gt; 参数是在 &lt;code&gt;viewGroup&lt;/code&gt; 外的一个拖放目标，用于删除。&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setupDragDelete&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(View view, &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; ViewGroup viewGroup)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    view.setOnDragListener(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; View.OnDragListener() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onDrag&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(View view, DragEvent event)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt; (event.getAction()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; DragEvent.ACTION_DRAG_ENTERED:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    view.setActivated(&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; DragEvent.ACTION_DRAG_EXITED:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    view.setActivated(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; DragEvent.ACTION_DROP:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    DragState dragState = (DragState)event.getLocalState();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    removeView(viewGroup, dragState);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; DragEvent.ACTION_DRAG_ENDED:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// &lt;span class=&quot;doctag&quot;&gt;NOTE:&lt;/span&gt; Needed because ACTION_DRAG_EXITED may not be sent when the drag&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// ends within the view.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    view.setActivated(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;removeView&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(ViewGroup viewGroup, DragState dragState)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    viewGroup.removeView(dragState.view);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; childCount = viewGroup.getChildCount();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = dragState.index; i &amp;lt; childCount; ++i) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; View view = viewGroup.getChildAt(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; viewY = view.getY();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        postOnPreDraw(view, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Runnable() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ObjectAnimator&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        .ofFloat(view, View.Y, viewY, view.getTop())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        .setDuration(getDuration(view))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        .start();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;需要注意的是，如果 &lt;code&gt;LinearLayout&lt;/code&gt; 的高度设置为 &lt;code&gt;wrap_content&lt;/code&gt;，则为了避免动画被视图边界剪裁，以及在&lt;code&gt;ScrollView&lt;/code&gt; 中高度正确变化，需要手动对 &lt;code&gt;LinearLayout&lt;/code&gt; 的高度进行动画；这同时涉及到需要覆盖 &lt;code&gt;ScrollView&lt;/code&gt; 中&lt;code&gt;measureChild()&lt;/code&gt;方法来计算我们所请求的高度。我在下面的完整实现中完成了这个部分。&lt;/p&gt;
&lt;blockquote class=&quot;callout&quot;&gt;&lt;div class=&quot;title&quot;&gt;完整实现 &lt;/div&gt;&lt;a href=&quot;https://gist.github.com/DreaminginCodeZH/b0c42a56e49ca907a9cb&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; 在 GitHub 上浏览&lt;/a&gt;&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;Android 中&lt;code&gt;ListView&lt;/code&gt;的拖放操作和动画实现已经被&lt;a href=&quot;https://www.youtube.com/watch?v=_BZIvjMgH-Q&quot;&gt;这个 DevByte&lt;/a&gt; 和&lt;a href=&quot;https://android.googlesource.com/platform/development/+/master/samples/devbytes/animation/ListViewDraggingAnimation&quot;&gt;相关的样例&lt;/a&gt;说明，并且也有 &lt;a href=&quot;https://github.com/nhaarman/ListViewAnimations&quot;&gt;ListViewAnimations&lt;/a&gt; 这样强大的开源库进行了集成。但是，一番 Google 后，我发现基于&lt;code&gt;LinearLayout&lt;/code&gt;的相关实现却不多。&lt;/p&gt;
&lt;p&gt;然而，有时我们可能需要使用&lt;code&gt;LinearLayout&lt;/code&gt;替代&lt;code&gt;ListView&lt;/code&gt;来实现列表，例如不需要&lt;code&gt;ListView&lt;/code&gt;的视图回收机制（比如使用&lt;code&gt;Fragment&lt;/code&gt;作为列表项），或者我们需要把这个视图放在&lt;code&gt;ScrollView&lt;/code&gt;中。&lt;/p&gt;
&lt;p&gt;在使用&lt;code&gt;LinearLayout&lt;/code&gt;实现拖放和动画时，实现代码相比于之前提到的&lt;code&gt;ListView&lt;/code&gt;实现也需要一些变动。因为我在网络上没有找到相应的资料，所以写下这篇文章来记录这个过程。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://blog.zhanghai.me/tags/android/"/>
    
      <category term="编程" scheme="http://blog.zhanghai.me/tags/programming/"/>
    
  </entry>
  
  <entry>
    <title>Bash Scripting Notes</title>
    <link href="http://blog.zhanghai.me/bash-scripting-notes/"/>
    <id>http://blog.zhanghai.me/bash-scripting-notes/</id>
    <published>2015-02-15T13:08:11.000Z</published>
    <updated>2015-11-01T16:18:13.997Z</updated>
    
    <content type="html">&lt;p&gt;This is my notebook for bash scripting.&lt;/p&gt;
&lt;h2 id=&quot;Styling&quot;&gt;&lt;a href=&quot;#Styling&quot; class=&quot;headerlink&quot; title=&quot;Styling&quot;&gt;&lt;/a&gt;Styling&lt;/h2&gt;&lt;p&gt;Use &lt;a href=&quot;https://google.github.io/styleguide/shell.xml&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Google style guide for shell&lt;/a&gt;.&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;Organization&quot;&gt;&lt;a href=&quot;#Organization&quot; class=&quot;headerlink&quot; title=&quot;Organization&quot;&gt;&lt;/a&gt;Organization&lt;/h2&gt;&lt;p&gt;Use functions; use a &lt;code&gt;main&lt;/code&gt; function and call it by &lt;code&gt;main &amp;quot;$@&amp;quot;&lt;/code&gt; at the end of the script.&lt;/p&gt;
&lt;h2 id=&quot;Boolean-variable&quot;&gt;&lt;a href=&quot;#Boolean-variable&quot; class=&quot;headerlink&quot; title=&quot;Boolean variable&quot;&gt;&lt;/a&gt;Boolean variable&lt;/h2&gt;&lt;p&gt;Use &lt;code&gt;1&lt;/code&gt; or &lt;code&gt;0&lt;/code&gt; literal for boolean; test by &lt;code&gt;[[${bool_val} -eq 1 ]]&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Local-variable&quot;&gt;&lt;a href=&quot;#Local-variable&quot; class=&quot;headerlink&quot; title=&quot;Local variable&quot;&gt;&lt;/a&gt;Local variable&lt;/h2&gt;&lt;p&gt;Use &lt;code&gt;local&lt;/code&gt; for function local variable; seprate declaration and assignment.&lt;/p&gt;
&lt;h2 id=&quot;String-operation&quot;&gt;&lt;a href=&quot;#String-operation&quot; class=&quot;headerlink&quot; title=&quot;String operation&quot;&gt;&lt;/a&gt;String operation&lt;/h2&gt;&lt;p&gt;See &lt;a href=&quot;http://tldp.org/LDP/abs/html/refcards.html#AEN22828&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;this manual&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;getopt&quot;&gt;&lt;a href=&quot;#getopt&quot; class=&quot;headerlink&quot; title=&quot;getopt&quot;&gt;&lt;/a&gt;getopt&lt;/h2&gt;&lt;p&gt;Always quote &lt;code&gt;&amp;quot;$@&amp;quot;&lt;/code&gt; to preserve correct word splitting.&lt;/p&gt;
&lt;h2 id=&quot;Read-password&quot;&gt;&lt;a href=&quot;#Read-password&quot; class=&quot;headerlink&quot; title=&quot;Read password&quot;&gt;&lt;/a&gt;Read password&lt;/h2&gt;&lt;p&gt;Use &lt;code&gt;read -p &amp;lt;prompt&amp;gt; -s &amp;lt;variable&amp;gt;; echo&lt;/code&gt; to read password.&lt;/p&gt;
&lt;h2 id=&quot;Use-sudo&quot;&gt;&lt;a href=&quot;#Use-sudo&quot; class=&quot;headerlink&quot; title=&quot;Use sudo&quot;&gt;&lt;/a&gt;Use sudo&lt;/h2&gt;&lt;p&gt;Include this function and call it before you’re going to use &lt;code&gt;sudo&lt;/code&gt;.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;prepare_sudo&lt;/span&gt;&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sudo -v&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Here-document&quot;&gt;&lt;a href=&quot;#Here-document&quot; class=&quot;headerlink&quot; title=&quot;Here document&quot;&gt;&lt;/a&gt;Here document&lt;/h2&gt;&lt;p&gt;Use Here document for usage(), etc.&lt;/p&gt;
&lt;p&gt;You can utilize the following technique to write a here document as root&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo tee &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$&amp;#123;profile_path&amp;#125;&lt;/span&gt;&quot;&lt;/span&gt; &amp;gt;/dev/null &amp;lt;&amp;lt;EOF&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Script-name&quot;&gt;&lt;a href=&quot;#Script-name&quot; class=&quot;headerlink&quot; title=&quot;Script name&quot;&gt;&lt;/a&gt;Script name&lt;/h2&gt;&lt;p&gt;``&lt;br&gt;name=$(basename “$0”)&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#10;## Report error&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;error() {&lt;br&gt;    echo “${FUNCNAME[1]}: $@” &amp;gt;&amp;amp;2&lt;br&gt;}&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#10;## Configuration file&amp;#10;&amp;#10;You can source an external configuration file as bash script. A bit unsafe though.&amp;#10;&amp;#10;```bash&amp;#10;source example.conf&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;Wait-for-certain-condition&quot;&gt;&lt;a href=&quot;#Wait-for-certain-condition&quot; class=&quot;headerlink&quot; title=&quot;Wait for certain condition&quot;&gt;&lt;/a&gt;Wait for certain condition&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; $(seq &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$&amp;#123;timeout&amp;#125;&lt;/span&gt;&quot;&lt;/span&gt;); &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    check_something;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sleep &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;done&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Watch-file-changes&quot;&gt;&lt;a href=&quot;#Watch-file-changes&quot; class=&quot;headerlink&quot; title=&quot;Watch file changes&quot;&gt;&lt;/a&gt;Watch file changes&lt;/h2&gt;&lt;p&gt;Use &lt;code&gt;inotifywait&lt;/code&gt;.&lt;/p&gt;
&lt;h1 id=&quot;Colored-makepkg-like-functions&quot;&gt;&lt;a href=&quot;#Colored-makepkg-like-functions&quot; class=&quot;headerlink&quot; title=&quot;Colored makepkg-like functions&quot;&gt;&lt;/a&gt;Colored makepkg-like functions&lt;/h1&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;msg_blue()·&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;·&lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$&amp;#123;BLUE&amp;#125;&lt;/span&gt;==&amp;gt;&lt;span class=&quot;variable&quot;&gt;$&amp;#123;ALL_OFF&amp;#125;&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;$&amp;#123;BOLD&amp;#125;&lt;/span&gt;·&lt;span class=&quot;variable&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;$&amp;#123;ALL_OFF&amp;#125;&lt;/span&gt;\n&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;note()·&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;·&lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$&amp;#123;BLUE&amp;#125;&lt;/span&gt;==&amp;gt;&lt;span class=&quot;variable&quot;&gt;$&amp;#123;ALL_OFF&amp;#125;&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;$&amp;#123;YELLOW&amp;#125;&lt;/span&gt;·NOTE:&lt;span class=&quot;variable&quot;&gt;$&amp;#123;ALL_OFF&amp;#125;&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;$&amp;#123;BOLD&amp;#125;&lt;/span&gt;·&lt;span class=&quot;variable&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;$&amp;#123;ALL_OFF&amp;#125;&lt;/span&gt;\n&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ALL_OFF=&lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$(tput·sgr0)&lt;/span&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;BOLD=&lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$(tput·bold)&lt;/span&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;BLUE=&lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$&amp;#123;BOLD&amp;#125;&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;$(tput·setaf·4)&lt;/span&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;YELLOW=&lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$&amp;#123;BOLD&amp;#125;&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;$(tput·setaf·3)&lt;/span&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;This is my notebook for bash scripting.&lt;/p&gt;
&lt;h2 id=&quot;Styling&quot;&gt;&lt;a href=&quot;#Styling&quot; class=&quot;headerlink&quot; title=&quot;Styling&quot;&gt;&lt;/a&gt;Styling&lt;/h2&gt;&lt;p&gt;Use &lt;a href=&quot;https://google.github.io/styleguide/shell.xml&quot;&gt;Google style guide for shell&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://blog.zhanghai.me/tags/linux/"/>
    
      <category term="Note" scheme="http://blog.zhanghai.me/tags/note/"/>
    
      <category term="Programming" scheme="http://blog.zhanghai.me/tags/programming/"/>
    
  </entry>
  
  <entry>
    <title>C 语言应试笔记</title>
    <link href="http://blog.zhanghai.me/c-exam-notes/"/>
    <id>http://blog.zhanghai.me/c-exam-notes/</id>
    <published>2015-02-15T10:38:12.000Z</published>
    <updated>2016-01-18T11:03:38.146Z</updated>
    
    <content type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;# 前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言 &lt;/h2&gt;&lt;p&gt; 这是我在大一时 C 语言课程考试前总结的坑们，每次相关考试前都会复习一次。如果你发现可以补充的地方，欢迎评论。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;正文&quot;&gt;&lt;a href=&quot;# 正文&quot; class=&quot;headerlink&quot; title=&quot;正文&quot;&gt;&lt;/a&gt;正文 &lt;/h2&gt;&lt;blockquote class=&quot;callout&quot;&gt;&lt;div class=&quot;title&quot;&gt; 一言以概 &lt;/div&gt; 任何看上去有简单答案的问题都藏有坑。&lt;/blockquote&gt;
&lt;p&gt;看见定义变量，总是注意变量是否被初始化过。&lt;/p&gt;
&lt;p&gt;注意 &lt;code&gt;if&lt;/code&gt; 中的等号是 &lt;code&gt;=&lt;/code&gt; 还是 &lt;code&gt;==&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;if&lt;/code&gt; 语句没有花括号时只包含之后一行，如：&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (condition)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    optionally_executed();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    always_executed();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;if else&lt;/code&gt;语句在没有花括号时，&lt;code&gt;else&lt;/code&gt;总是匹配最近的&lt;code&gt;if&lt;/code&gt;（Dangling Else），如：&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (a)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (b) do_b();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; do_c();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;实际上是：&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (a) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (b) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        do_b();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        do_c();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;switch&lt;/code&gt;语句在缺少 &lt;code&gt;break&lt;/code&gt; 时将 Fall through。&lt;/p&gt;
&lt;p&gt;求值逻辑表达式时 &lt;code&gt; 真&lt;/code&gt;为 &lt;code&gt;1&lt;/code&gt;，&lt;code&gt; 假&lt;/code&gt;为 &lt;code&gt;0&lt;/code&gt;。 判断逻辑表达式时，&lt;code&gt; 非 0&lt;/code&gt;为 &lt;code&gt; 真&lt;/code&gt;，&lt;code&gt;0&lt;/code&gt;为 &lt;code&gt; 假&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;true&lt;/code&gt;、&lt;code&gt;false&lt;/code&gt;、&lt;code&gt;TRUE&lt;/code&gt;、&lt;code&gt;FALSE&lt;/code&gt; 是合法的变量名，因为在 C 中它们不是关键字。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;*p++&lt;/code&gt;等价于 &lt;code&gt;*(p++)&lt;/code&gt;，因后自增&lt;code&gt;++&lt;/code&gt; 优先级高于解引用&lt;code&gt;*&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;注意整型除法结果被截断， &lt;code&gt;int n = 2; 1 / n == 0&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;注意本地变量需要初始化。&lt;/p&gt;
&lt;p&gt;注意变量作用域屏蔽，如：&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, b = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;注意函数为传值，指针也是值传递，例如：&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;swap&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; *a, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; *b)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; *temp = a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    a = b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    b = temp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;并不影响外部。&lt;/p&gt;
&lt;p&gt;注意 &lt;code&gt;int&lt;/code&gt; 溢出，若易发生溢出（如阶乘操作）应使用 &lt;code&gt;long&lt;/code&gt; 或&lt;code&gt;double&lt;/code&gt;代替。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;char a = 255&lt;/code&gt;，打印后值为 &lt;code&gt;-1&lt;/code&gt;，因为 &lt;code&gt;char&lt;/code&gt; 为有符号类型并采用补码表示，其范围为 &lt;code&gt;-128 ~ 127&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;负数的位移操作中符号位也参与位移；左操作数为负数的右移 &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; 结果由实现定义，Turbo C 为补 1。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;a/b&lt;/code&gt;与 &lt;code&gt;a%b&lt;/code&gt; 结果在 &lt;code&gt;a&lt;/code&gt; 与&lt;code&gt;b&lt;/code&gt;中有一个为负数时由实现定义，但保证 &lt;code&gt;a / b * b + a % b&lt;/code&gt; 结果为&lt;code&gt;a&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;过滤回车结束的输入字符串：&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; ((ch = getchar()) != &lt;span class=&quot;string&quot;&gt;&#39;\n&#39;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (ch ...) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    str[i++] = ch;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;str[i] = &lt;span class=&quot;string&quot;&gt;&#39;\0&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;C 语言二维数组存储采用 Row-major 方式，即在内存中存储为 row1, row2, row3…，初始化时必须给出列数以确定行中元素个数，静态变量中未初始化元素自动为 0，使用时可以将列数溢出到下一行，即偏移值计算为 row_count * row + column。&lt;/p&gt;
&lt;p&gt;注意分号：&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (...);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            do_something();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;do_something&lt;/code&gt;只执行一次。&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    do_something();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;do_something&lt;/code&gt;一定会被执行。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sizeof()&lt;/code&gt;表达式的值在编译时确定。编译器不计算其中表达式的值，仅将其替换为对应类型。&lt;code&gt;sizeof&lt;/code&gt;应用于数组时结果为 数组元素个数 * 元素大小，应用于指针时为指针变量长度（在 32 位机器上地址长度为 32，故值为 8；64 位机器上为 16）。&lt;/p&gt;
&lt;p&gt;无论 &lt;code&gt;x&lt;/code&gt; 是数组还是指针，在定义上编译器认为 &lt;code&gt;x[3]&lt;/code&gt; 与&lt;code&gt;*(x+3)&lt;/code&gt;是等价的。但根据 x 的类型是数组还是指针, 编译器将为 &lt;code&gt;x+3&lt;/code&gt; 或&lt;code&gt;sizeof(x)&lt;/code&gt;生成不同的代码。&lt;/p&gt;
&lt;p&gt;类似 &lt;code&gt;char []&lt;/code&gt; 类型的数组名被视为指向 &lt;code&gt;char&lt;/code&gt; 的指针，&lt;code&gt;char[][]&lt;/code&gt;也被视为指向 &lt;code&gt;char[]&lt;/code&gt; 的指针。&lt;/p&gt;
&lt;p&gt;注意 &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; 或&lt;code&gt;||&lt;/code&gt;具有 &lt;code&gt; 短路求值 &lt;/code&gt; 特性，不会执行无必要求值的表达式。&lt;/p&gt;
&lt;p&gt;注意含中文字符的文件应保存为 &lt;code&gt;GB*&lt;/code&gt; 编码，例如&lt;code&gt;GB18030&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;strcpy(dst, src)&lt;/code&gt;中目标在前，源在后。&lt;/p&gt;
&lt;p&gt;注意 &lt;code&gt;int a, b, c&lt;/code&gt;，&lt;code&gt;c = 2a + b&lt;/code&gt; 非法（需要&lt;code&gt;*&lt;/code&gt;）。&lt;/p&gt;
&lt;p&gt;注意 &lt;code&gt;x&amp;lt;=y&amp;lt;=z&lt;/code&gt; 意为&lt;code&gt;(x&amp;lt;=y)&amp;lt;=z&lt;/code&gt;，意义非预期但合法。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;scanf&lt;/code&gt;遇到空白字符截止，为输入一行可使用 &lt;code&gt;scanf(&amp;quot;[^\n]&amp;quot;,str)&lt;/code&gt; 或&lt;code&gt;gets()&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;注意：&lt;code&gt;scanf(&amp;quot;%s&amp;quot;, s)&lt;/code&gt;输入 &lt;code&gt;&amp;quot;How are you?&amp;quot;&lt;/code&gt; 遇到空格截断，只得到&lt;code&gt;How&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;strcpy(char *dst, char *src) {while(*dst++ = *src++); };&lt;/code&gt;中 &lt;code&gt;++&lt;/code&gt; 优先级高于&lt;code&gt;*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[]&lt;/code&gt;、&lt;code&gt;()&lt;/code&gt;优先级高于 &lt;code&gt;*&lt;/code&gt;，故&lt;code&gt;int *array[1]&lt;/code&gt; 等价于 &lt;code&gt;(int *)array[1]&lt;/code&gt;，为 int 指针的数组；&lt;code&gt;int (*p)[1]&lt;/code&gt; 为指向 &lt;code&gt;int&lt;/code&gt; 数组的指针。&lt;/p&gt;
&lt;p&gt;解读方法：以 &lt;code&gt;int **a[1][2]&lt;/code&gt; 为例。从 a 出发，优先向右解读。（&lt;a href=&quot;http://unixwiz.net/techtips/reading-cdecl.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;来源&lt;/a&gt;）&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;a&lt;/code&gt; is … &lt;code&gt;int&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;a&lt;/code&gt; is &lt;code&gt;array&lt;/code&gt; of 1 … &lt;code&gt;int&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;a&lt;/code&gt; is &lt;code&gt;array&lt;/code&gt; of 1 &lt;code&gt;array&lt;/code&gt; of 2 … &lt;code&gt;int&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;a&lt;/code&gt; is &lt;code&gt;array&lt;/code&gt; of 1 &lt;code&gt;array&lt;/code&gt; of 2 &lt;code&gt;pointer&lt;/code&gt;s to … &lt;code&gt;int&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;a&lt;/code&gt; is &lt;code&gt;array&lt;/code&gt; of 1 &lt;code&gt;array&lt;/code&gt; of 2 &lt;code&gt;pointer&lt;/code&gt;s to &lt;code&gt;poiner&lt;/code&gt; to &lt;code&gt;int&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;优先级：&lt;em&gt;后置自增 / 自减 &lt;/em&gt;、函数调用、数组元素、结构成员 &amp;gt; 前置自增 / 自减、正负、类型装换、&lt;em&gt; 解引用 &lt;/em&gt;、取地址、数据类型大小、内存操作、（逻辑、位）非 &amp;gt; 结构成员解引用 &amp;gt; 乘除、取余 &amp;gt; 加减 &amp;gt; &lt;em&gt; 位移&lt;/em&gt; &amp;gt; 比较 &amp;gt; 等价 &amp;gt; （逻辑、位）与、或、异或 &amp;gt; 三元条件、（复合）赋值。&lt;/p&gt;
&lt;p&gt;字符串字面值与字符常量中转义序列 &lt;code&gt;\ddd&lt;/code&gt; 可以为 1、2、3 位 8 进制数（0~7），上限为 377；&lt;code&gt;\xhh&lt;/code&gt;可以为 1、2 位十六进制数（0~F）。&lt;/p&gt;
&lt;p&gt;转义序列列表：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;转移序列&lt;/th&gt;
&lt;th&gt;含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;\a&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;BEL&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;\b&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;BS&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;\f&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;FF&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;\n&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;LF&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;\r&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;CR&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;\t&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;HT&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;\v&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;VT&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;\\&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; &lt;code&gt;\&amp;#39;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;#39;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;\&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;\0&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;\ddd&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;八进制&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;\xhh&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;十六进制&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;0~255 的数字也可以作为有效的字符取值。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;int i = -1; printf(&amp;quot;%d&amp;quot;, (unsigned int)i);&lt;/code&gt;打印出 &lt;code&gt;-1&lt;/code&gt;，因为&lt;code&gt;%d&lt;/code&gt; 为有符号整型。&lt;/p&gt;
&lt;p&gt;使用草稿纸记录变量取值以计算程序输出，或对某些类型可理解程序意图猜测程序输出，或两者结合。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;10^-6&lt;/code&gt;表示为&lt;code&gt;1e-6&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;通过 &lt;code&gt;memset(array,0,sizeof(array))&lt;/code&gt; 可以实现数组重初始化。（需要&lt;code&gt;string.h&lt;/code&gt;）&lt;/p&gt;
&lt;p&gt;宏 &lt;code&gt;#&lt;/code&gt; 代表将此后的文本变为字符串；&lt;code&gt;##&lt;/code&gt;代表连接文本；含有 &lt;code&gt;#&lt;/code&gt; 与&lt;code&gt;##&lt;/code&gt;的宏不进行参数展开，可利用包装宏展开。（&lt;a href=&quot;http://learn.akae.cn/media/ch21s02.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;参考&lt;/a&gt;）&lt;/p&gt;
&lt;p&gt;宏函数定义：&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;#&lt;span class=&quot;keyword&quot;&gt;define&lt;/span&gt; func_name(var) \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;do &amp;#123; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    do_something(); \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; while (&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;调用与函数调用一致：&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;func_name(var);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;scanf&lt;/code&gt;中 &lt;code&gt;f&lt;/code&gt; 为&lt;code&gt;float&lt;/code&gt;，&lt;code&gt;lf&lt;/code&gt;为 &lt;code&gt;double&lt;/code&gt;；&lt;code&gt;printf&lt;/code&gt; 中&lt;code&gt;f&lt;/code&gt;为 &lt;code&gt;double&lt;/code&gt;；&lt;code&gt;lf&lt;/code&gt; 未定义。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;,&lt;/code&gt;逗号表达式对左侧表达式求值并丢弃返回值，之后对右侧表达式求值并返回其返回值。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;#define SWAP(a,b) (a)^=(b)^=(a)^=(b)&lt;/code&gt;可实现无临时变量的交换。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;字符&lt;/th&gt;
&lt;th&gt;ASCII&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;48&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;A&lt;/td&gt;
&lt;td&gt;65&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;a&lt;/td&gt;
&lt;td&gt;97&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;变量命名法则：&lt;code&gt;[A-Za-z_][A-Za-z0-9_]*&lt;/code&gt;，且不含关键字。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;auto&lt;/code&gt;，&lt;code&gt;register&lt;/code&gt;，&lt;code&gt;volatile&lt;/code&gt;均为 C 关键字。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;007&lt;/code&gt;为八进制数字，注意范围为 &lt;em&gt;0-7&lt;/em&gt;，&lt;code&gt;0x0F&lt;/code&gt; 为十六进制数字。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;strcat&lt;/code&gt;实现：&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;strcat&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *str1, &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *str2)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (*str &amp;amp;&amp;amp; *++str);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (*str1++ = *str2++);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote class=&quot;callout&quot;&gt;&lt;div class=&quot;title&quot;&gt;相关阅读&lt;/div&gt;&lt;a href=&quot;http://blog.yzyzsun.me/c-traps-and-pitfalls/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《C 陷阱与缺陷》笔记 | 孙耀珠的博客&lt;/a&gt;&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;这是我在大一时 C 语言课程考试前总结的坑们，每次相关考试前都会复习一次。如果你发现可以补充的地方，欢迎评论。&lt;/p&gt;
    
    </summary>
    
    
      <category term="学业" scheme="http://blog.zhanghai.me/tags/schoolwork/"/>
    
      <category term="笔记" scheme="http://blog.zhanghai.me/tags/note/"/>
    
      <category term="编程" scheme="http://blog.zhanghai.me/tags/programming/"/>
    
  </entry>
  
  <entry>
    <title>求是潮手机站 Android 客户端 V3</title>
    <link href="http://blog.zhanghai.me/qsc-mobile-android-v3/"/>
    <id>http://blog.zhanghai.me/qsc-mobile-android-v3/</id>
    <published>2014-12-16T11:33:35.000Z</published>
    <updated>2015-05-02T06:23:58.000Z</updated>
    
    <content type="html">&lt;img src=&quot;/qsc-mobile-android-v3/0.png&quot; alt=&quot;零&quot; title=&quot;零&quot;&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;img src=&quot;/qsc-mobile-android-v3/1.png&quot; alt=&quot;一&quot; title=&quot;一&quot;&gt;
&lt;img src=&quot;/qsc-mobile-android-v3/2.png&quot; alt=&quot;二&quot; title=&quot;二&quot;&gt;
&lt;img src=&quot;/qsc-mobile-android-v3/3.png&quot; alt=&quot;三&quot; title=&quot;三&quot;&gt;
&lt;img src=&quot;/qsc-mobile-android-v3/4.png&quot; alt=&quot;四&quot; title=&quot;四&quot;&gt;
</content>
    
    <summary type="html">
    
      &lt;img src=&quot;/qsc-mobile-android-v3/0.png&quot; alt=&quot;零&quot; title=&quot;零&quot;&gt;
    
    </summary>
    
    
      <category term="职业" scheme="http://blog.zhanghai.me/tags/career/"/>
    
  </entry>
  
  <entry>
    <title>Arch Linux Notes</title>
    <link href="http://blog.zhanghai.me/arch-linux-notes/"/>
    <id>http://blog.zhanghai.me/arch-linux-notes/</id>
    <published>2014-11-03T06:18:11.000Z</published>
    <updated>2016-08-04T06:05:17.101Z</updated>
    
    <content type="html">&lt;p&gt;This is my notebook for some small tips and tricks when using Arch Linux.&lt;/p&gt;
&lt;h2 id=&quot;Why-Arch-Linux&quot;&gt;&lt;a href=&quot;#Why-Arch-Linux&quot; class=&quot;headerlink&quot; title=&quot;Why Arch Linux?&quot;&gt;&lt;/a&gt;Why Arch Linux?&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;It is fresh and simple in package dependency.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It has a powerful Arch User Repository and makes it easy for you to make/modify your package.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It has a detailed Arch Wiki comprising useful experiences and recommendations.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It gets you to learn the basic knowledge required to be a Linux user/administrator/programmer.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;Refer-to-manual&quot;&gt;&lt;a href=&quot;#Refer-to-manual&quot; class=&quot;headerlink&quot; title=&quot;Refer to manual&quot;&gt;&lt;/a&gt;Refer to manual&lt;/h2&gt;&lt;p&gt;Use &lt;code&gt;man [SECTION] &amp;lt;NAME&amp;gt;&lt;/code&gt; to show a manual.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;whatis &amp;lt;NAME&amp;gt;&lt;/code&gt; to find out which sections are available in manual.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;apropos &amp;lt;KEYWORD&amp;gt;&lt;/code&gt; to search for manuals whose name or description contains certain keyword.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;man man-pages&lt;/code&gt; to see the definition of each seciton.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;help -m &amp;lt;BUILTIN&amp;gt;&lt;/code&gt; to show help for a shell builtin in manual page format.&lt;/p&gt;
&lt;p&gt;The “SEE ALSO” section in a manual sometimes can be very helpful.&lt;/p&gt;
&lt;h2 id=&quot;Find-available-commands&quot;&gt;&lt;a href=&quot;#Find-available-commands&quot; class=&quot;headerlink&quot; title=&quot;Find available commands&quot;&gt;&lt;/a&gt;Find available commands&lt;/h2&gt;&lt;p&gt;Shell builtin &lt;code&gt;compgen&lt;/code&gt; can list possible completions for your input.&lt;/p&gt;
&lt;h2 id=&quot;NTFS-partitions-auto-mounting&quot;&gt;&lt;a href=&quot;#NTFS-partitions-auto-mounting&quot; class=&quot;headerlink&quot; title=&quot;NTFS partitions auto mounting&quot;&gt;&lt;/a&gt;NTFS partitions auto mounting&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Use &lt;code&gt;gnome-disks&lt;/code&gt;, select partition and click the settings button below, click and then modify mount options in the popup menu.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Install &lt;code&gt;ntfs-config&lt;/code&gt; and enable auto mounting.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;Disable-Nvidia-graphics&quot;&gt;&lt;a href=&quot;#Disable-Nvidia-graphics&quot; class=&quot;headerlink&quot; title=&quot;Disable Nvidia graphics&quot;&gt;&lt;/a&gt;Disable Nvidia graphics&lt;/h2&gt;&lt;p&gt;Install &lt;code&gt;bbswitch&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;And create &lt;code&gt;/etc/modprobe.d/nouveau_blacklist.conf&lt;/code&gt; as follow, or else &lt;code&gt;bbswitch&lt;/code&gt; will find Nvidia graphics in use by &lt;code&gt;nouveau&lt;/code&gt;.&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;blacklist nouveau&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;You can verify &lt;code&gt;bbswitch&lt;/code&gt; status by &lt;code&gt;cat /proc/acpi/bbswitch&lt;/code&gt; and view its log by &lt;code&gt;dmesg | grep bbswitch&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Note that the &lt;code&gt;nouveau&lt;/code&gt; kernel module is shipped in &lt;code&gt;linux&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Also note that if your install &lt;code&gt;bumblebee&lt;/code&gt;, it will ship the blacklist file for you.&lt;/p&gt;
&lt;h2 id=&quot;Shrink-pacman-cache&quot;&gt;&lt;a href=&quot;#Shrink-pacman-cache&quot; class=&quot;headerlink&quot; title=&quot;Shrink pacman cache&quot;&gt;&lt;/a&gt;Shrink pacman cache&lt;/h2&gt;&lt;p&gt;From &lt;a href=&quot;https://wiki.archlinux.org/index.php/pacman&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Arch Wiki&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;paccache -r&lt;/code&gt; deletes all the cached versions of each package except for the most recent 3 (without confirmation).&lt;/p&gt;
&lt;p&gt;&lt;code&gt;paccache -ruk0&lt;/code&gt; removes all the cached versions of uninstalled packages.&lt;/p&gt;
&lt;p&gt;See &lt;code&gt;paccache -h&lt;/code&gt; for dry run and other parameters.&lt;/p&gt;
&lt;h2 id=&quot;Better-diff&quot;&gt;&lt;a href=&quot;#Better-diff&quot; class=&quot;headerlink&quot; title=&quot;Better diff&quot;&gt;&lt;/a&gt;Better diff&lt;/h2&gt;&lt;p&gt;&lt;code&gt;alias diff=&amp;#39;git diff --no-index&amp;#39;&lt;/code&gt; works great with the only requirement of &lt;code&gt;git&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Make-programs-use-proxy&quot;&gt;&lt;a href=&quot;#Make-programs-use-proxy&quot; class=&quot;headerlink&quot; title=&quot;Make programs use proxy&quot;&gt;&lt;/a&gt;Make programs use proxy&lt;/h2&gt;&lt;p&gt;There are several ways to make a program proxied. Part of the following comes from &lt;a href=&quot;https://wiki.archlinux.org/index.php/proxy_settings&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Arch Wiki&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Environment variables&lt;/p&gt;
&lt;p&gt;  Some programs respect proxy set via environment variables.&lt;/p&gt;
  &lt;!-- Unable to wrap a backtick code block in a list item. --&gt;
  &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;export&lt;/span&gt; http_proxy=http://&lt;span class=&quot;number&quot;&gt;10.203&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0.1&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;5187&lt;/span&gt;/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;export&lt;/span&gt; https_proxy=&lt;span class=&quot;variable&quot;&gt;$http_proxy&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;export&lt;/span&gt; ftp_proxy=&lt;span class=&quot;variable&quot;&gt;$http_proxy&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;export&lt;/span&gt; rsync_proxy=&lt;span class=&quot;variable&quot;&gt;$http_proxy&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;export&lt;/span&gt; no_proxy=&lt;span class=&quot;string&quot;&gt;&quot;localhost,127.0.0.1,localaddress,.localdomain.com&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;  It is sometimes advised that you export these environment variables again, with their names upper cased.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Proxychains&lt;/p&gt;
&lt;p&gt;  Install &lt;a href=&quot;https://www.archlinux.org/packages/?name=proxychains-ng&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;proxychains-ng&lt;/a&gt;. Proxychains hooks some C library functions so that programs gets proxied. However the Java VM cannot be proxied this way.&lt;/p&gt;
  &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;proxychains &amp;lt;YOUR_PROGRAM&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Java&lt;/p&gt;
&lt;p&gt;  From &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/technotes/guides/net/proxies.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;the documentation of Java&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;HTTP&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;http.proxyHost: the host name of the proxy server&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;http.proxyPort: the port number, the default value being 80.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;http.nonProxyHosts: a list of hosts that should be reached directly, bypassing the proxy. This is a list of patterns separated by ‘|’. The patterns may start or end with a ‘*’ for wildcards. Any host matching one of these patterns will be reached through a direct connection instead of through a proxy.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;HTTPS&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;https.proxyHost&lt;/p&gt;
&lt;p&gt;https.proxyPort&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;FTP&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ftp.proxyHost (Typo in official documentation)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ftp.proxyPort&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ftp.nonProxyHosts&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SOCKS&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;socksProxyHost for the host name of the SOCKS proxy server&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;socksProxyPort for the port number, the default value being 1080&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;socksProxyVersion for the version of the SOCKS protocol, the default being 5, and alternatively 4 can be specified.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note: socksProxyVersion and more properties are documented at &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/technotes/guides/net/properties.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;another documentation of Java&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Sample usage:&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;java -Dhttp.proxyHost=webcache.example.com -Dhttp.proxyPort=&lt;span class=&quot;number&quot;&gt;8080&lt;/span&gt; -Dhttp.nonProxyHosts=”localhost|host.example.com”&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note that you can tunnel http(s) request to local socks client using &lt;a href=&quot;https://www.archlinux.org/packages/?name=delegate&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;DeleGate&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Touchpad-settings-and-horizontal-two-finger-scrolling-doesn’t-work&quot;&gt;&lt;a href=&quot;#Touchpad-settings-and-horizontal-two-finger-scrolling-doesn’t-work&quot; class=&quot;headerlink&quot; title=&quot;Touchpad settings and horizontal two-finger scrolling doesn’t work&quot;&gt;&lt;/a&gt;Touchpad settings and horizontal two-finger scrolling doesn’t work&lt;/h2&gt;&lt;p&gt;GNOME dropped support for synaptics driver due to luck of maintenance in version 3.20.&lt;/p&gt;
&lt;p&gt;Remove &lt;code&gt;xf86-input-synaptics&lt;/code&gt; and &lt;code&gt;xf86-input-evdev&lt;/code&gt;, install &lt;code&gt;xf86-input-libinput&lt;/code&gt;, then reboot.&lt;/p&gt;
&lt;h2 id=&quot;GNOME-proxy-setting&quot;&gt;&lt;a href=&quot;#GNOME-proxy-setting&quot; class=&quot;headerlink&quot; title=&quot;GNOME proxy setting&quot;&gt;&lt;/a&gt;GNOME proxy setting&lt;/h2&gt;&lt;p&gt;You can utilize GNOME’s proxy setting in &lt;code&gt;Settings &amp;gt; Network&lt;/code&gt; &lt;del&gt;even if you use &lt;code&gt;netctl&lt;/code&gt; instead of &lt;code&gt;Network Manager&lt;/code&gt;&lt;/del&gt; (Disabled in recent GNOME, see below). Both HTTP and SOCKS proxy are supported.&lt;/p&gt;
&lt;p&gt;You can also modify proxy setting with &lt;code&gt;dconf-editor&lt;/code&gt;, Set &lt;code&gt;system.proxy.mode&lt;/code&gt; to &lt;code&gt;manual&lt;/code&gt;, then set your proxy in &lt;code&gt;system.proxy.{ftp,http,https,socks}&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Note that the proxy setting will also be read and set to corresponding environment variables by &lt;code&gt;gnome-terminal&lt;/code&gt;, and no option is offered to turn this behavior off. To avoid setting proxy environment variables, reset the environment variables in your &lt;code&gt;.bashrc&lt;/code&gt;.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Unset global proxy set by gnome-terminal&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# See https://github.com/GNOME/gnome-terminal/blob/master/src/terminal-util.c&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;unset&lt;/span&gt; http_proxy https_proxy ftp_proxy all_proxy no_proxy&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;unset&lt;/span&gt; HTTP_PROXY HTTPS_PROXY FTP_PROXY ALL_PROXY NO_PROXY&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;GNOME-online-account&quot;&gt;&lt;a href=&quot;#GNOME-online-account&quot; class=&quot;headerlink&quot; title=&quot;GNOME online account&quot;&gt;&lt;/a&gt;GNOME online account&lt;/h2&gt;&lt;p&gt;You can log in your Google account and all the things will be configured and synchronized automatically to your laptop. It can be a huge boost for your work flow.&lt;/p&gt;
&lt;p&gt;If you need a proxy to access Google, configure it as in the GNOME proxy setting section.&lt;/p&gt;
&lt;h2 id=&quot;Save-ssh-key-passphrase-to-keyring&quot;&gt;&lt;a href=&quot;#Save-ssh-key-passphrase-to-keyring&quot; class=&quot;headerlink&quot; title=&quot;Save ssh key passphrase to keyring&quot;&gt;&lt;/a&gt;Save ssh key passphrase to keyring&lt;/h2&gt;&lt;p&gt;As in &lt;a href=&quot;https://wiki.archlinux.org/index.php/GNOME_Keyring#SSH_keys&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Arch Wiki&lt;/a&gt;, use &lt;code&gt;seahorse-ssh-askpass&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;As of &lt;code&gt;seahorse&lt;/code&gt; 3.18.0-2, &lt;code&gt;SSH_ASKPASS&lt;/code&gt; is not exported by default anymore, so you will need to add the following lines to your &lt;code&gt;/etc/profile&lt;/code&gt;.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Set ssh askpass&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SSH_ASKPASS=/usr/lib/seahorse/seahorse-ssh-askpass&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Nautilus-hangs-occasionally&quot;&gt;&lt;a href=&quot;#Nautilus-hangs-occasionally&quot; class=&quot;headerlink&quot; title=&quot;Nautilus hangs occasionally&quot;&gt;&lt;/a&gt;Nautilus hangs occasionally&lt;/h2&gt;&lt;p&gt;In my case it often happened when I started to search something. Turned out that it is caused by my putting too many files under indexed directories.&lt;/p&gt;
&lt;p&gt;To fix the hang up, launch &lt;code&gt;tracker-preferences&lt;/code&gt;, go to “Locations” tab, and turn off “Recurse” for directories you may store a large amount of files. Then execute &lt;code&gt;tracker reset --hard&lt;/code&gt; to reset tracker index and configurations. This resolved my issue so far.&lt;/p&gt;
&lt;h2 id=&quot;DNS-and-resolvconf&quot;&gt;&lt;a href=&quot;#DNS-and-resolvconf&quot; class=&quot;headerlink&quot; title=&quot;DNS and resolvconf&quot;&gt;&lt;/a&gt;DNS and resolvconf&lt;/h2&gt;&lt;p&gt;DNS is managed by &lt;code&gt;resolvconf&lt;/code&gt; in Arch Linux. In order to supply your own DNS, edit &lt;code&gt;/etc/resolvconf.conf&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;There are two options you may normally want to specify:&lt;/p&gt;
&lt;figure class=&quot;highlight ini&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;setting&quot;&gt;name_servers=&lt;span class=&quot;value&quot;&gt;&amp;lt;DNS1&amp;gt; #Prepended into DNS list&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;setting&quot;&gt;name_servers_append=&lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;DNS2&amp;gt; &amp;lt;DNS3&amp;gt; ...&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;After modification, you may want to execute &lt;code&gt;resolvconf -u&lt;/code&gt; to update &lt;code&gt;resolv.conf&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Note that &lt;code&gt;dhcpd&lt;/code&gt; also setup DNS for interfaces via &lt;code&gt;resolvconf&lt;/code&gt;, in &lt;code&gt;/run/resolvconf/interface/&amp;lt;INTERFACE&amp;gt;&lt;/code&gt;. You can override its behavior by executing &lt;code&gt;dhcpcd -S domain_name_servers=&amp;lt;DNS&amp;gt;&lt;/code&gt;, or inside &lt;code&gt;dhcpcd.conf&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Boost-entropy&quot;&gt;&lt;a href=&quot;#Boost-entropy&quot; class=&quot;headerlink&quot; title=&quot;Boost entropy&quot;&gt;&lt;/a&gt;Boost entropy&lt;/h2&gt;&lt;p&gt;If the output of &lt;code&gt;cat /proc/sys/kernel/random/entropy_avail&lt;/code&gt; is less than 1000, you need to install and enable &lt;code&gt;havedged&lt;/code&gt;.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo pacman -S havedged&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo systemctl &lt;span class=&quot;built_in&quot;&gt;enable&lt;/span&gt; havedged&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo systemctl start havedged&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Create-software-AP-Access-Point-a-k-a-virtual-WiFi&quot;&gt;&lt;a href=&quot;#Create-software-AP-Access-Point-a-k-a-virtual-WiFi&quot; class=&quot;headerlink&quot; title=&quot;Create software AP (Access Point), a.k.a. virtual WiFi&quot;&gt;&lt;/a&gt;Create software AP (Access Point), a.k.a. virtual WiFi&lt;/h2&gt;&lt;p&gt;Install AUR package &lt;code&gt;create_ap&lt;/code&gt;; you may want to remove the &lt;code&gt;wifi.service&lt;/code&gt; it automatically creates when installed and use your own.&lt;/p&gt;
&lt;p&gt;Check the Capabilities section in &lt;code&gt;iw list&lt;/code&gt; along with &lt;code&gt;/usr/share/doc/hostapd/hostapd.conf&lt;/code&gt; to determine &lt;code&gt;ht_capab&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Note that in ZJU, ZJUWLAN occupies channel 1 and 6, so you’d better specify another channel.&lt;/p&gt;
&lt;p&gt;Sample systemd service:&lt;/p&gt;
&lt;p&gt;File: &lt;code&gt;&amp;lt;YOUR_SSID&amp;gt;@.service&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight ini&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;[Unit]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;setting&quot;&gt;Description=&lt;span class=&quot;value&quot;&gt;Create AP service for &amp;lt;YOUR_SSID&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;setting&quot;&gt;After=&lt;span class=&quot;value&quot;&gt;network.target&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[Service]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;setting&quot;&gt;Type=&lt;span class=&quot;value&quot;&gt;simple&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;setting&quot;&gt;ExecStart=&lt;span class=&quot;value&quot;&gt;/usr/bin/create_ap -c &lt;span class=&quot;number&quot;&gt;13&lt;/span&gt; -w &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; -m nat --ieee80211n --ht_capab [HT40-][HT40+][SMPS-STATIC][GF][SHORT-GI-&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;][SHORT-GI-&lt;span class=&quot;number&quot;&gt;40&lt;/span&gt;][DSSS_CCK-&lt;span class=&quot;number&quot;&gt;40&lt;/span&gt;] &amp;lt;YOUR_WLAN_INTERFACE&amp;gt; %i &amp;lt;YOUR_SSID&amp;gt; &amp;lt;YOUR_PASSPHRASE&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;setting&quot;&gt;ExecStop=&lt;span class=&quot;value&quot;&gt;pkill hostapd&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;setting&quot;&gt;KillSignal=&lt;span class=&quot;value&quot;&gt;SIGINT&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;setting&quot;&gt;Restart=&lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;on&lt;/span&gt;-failure&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;setting&quot;&gt;RestartSec=&lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[Install]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;setting&quot;&gt;WantedBy=&lt;span class=&quot;value&quot;&gt;multi-user.target&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;However on my own machine, I cannot share a secure (with password) network.&lt;/p&gt;
&lt;h2 id=&quot;Analyze-network-issue&quot;&gt;&lt;a href=&quot;#Analyze-network-issue&quot; class=&quot;headerlink&quot; title=&quot;Analyze network issue&quot;&gt;&lt;/a&gt;Analyze network issue&lt;/h2&gt;&lt;p&gt;Use &lt;code&gt;mtr&lt;/code&gt;(My traceroute), a tool combining much of the functionality of ping and traceroute into one interface.&lt;/p&gt;
&lt;h2 id=&quot;Raise-inotify-limit-for-IntelliJ-IDEA&quot;&gt;&lt;a href=&quot;#Raise-inotify-limit-for-IntelliJ-IDEA&quot; class=&quot;headerlink&quot; title=&quot;Raise inotify limit for IntelliJ IDEA&quot;&gt;&lt;/a&gt;Raise inotify limit for IntelliJ IDEA&lt;/h2&gt;&lt;p&gt;Write the following line to &lt;code&gt;/etc/sysctl.d/99-custom.conf&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;fs.inotify.max_user_watches = 524288&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Sysrq&quot;&gt;&lt;a href=&quot;#Sysrq&quot; class=&quot;headerlink&quot; title=&quot;Sysrq&quot;&gt;&lt;/a&gt;Sysrq&lt;/h2&gt;&lt;p&gt;Write the following line to &lt;code&gt;/etc/sysctl.d/99-custom.conf&lt;/code&gt; to enable all the sysrq operations.&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;kernel.sysrq = 1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Reboot to make changes take effect, or execute &lt;code&gt;echo 1 &amp;gt;/proc/sys/kernel/sysrq&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Hold &lt;code&gt;Alt&lt;/code&gt;, and press the following key sequence.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;SysRq&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;R&lt;/code&gt;    unRaw&lt;/li&gt;
&lt;li&gt;&lt;code&gt;E&lt;/code&gt;    tErminate&lt;/li&gt;
&lt;li&gt;&lt;code&gt;I&lt;/code&gt;    kIll&lt;/li&gt;
&lt;li&gt;&lt;code&gt;S&lt;/code&gt;    Sync&lt;/li&gt;
&lt;li&gt;&lt;code&gt;U&lt;/code&gt;    Unmount&lt;/li&gt;
&lt;li&gt;&lt;code&gt;B&lt;/code&gt;    reBoot&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Note that the key &lt;code&gt;C&lt;/code&gt; can make your kernel panic immediately.&lt;/p&gt;
&lt;h2 id=&quot;Watch-FS-buffer-status&quot;&gt;&lt;a href=&quot;#Watch-FS-buffer-status&quot; class=&quot;headerlink&quot; title=&quot;Watch FS buffer status&quot;&gt;&lt;/a&gt;Watch FS buffer status&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;watch grep &lt;span class=&quot;operator&quot;&gt;-e&lt;/span&gt; Dirty: &lt;span class=&quot;operator&quot;&gt;-e&lt;/span&gt; Writeback: /proc/meminfo&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;You can execute &lt;code&gt;sync&lt;/code&gt; to flush the buffer immediately.&lt;/p&gt;
&lt;h2 id=&quot;Map-Alt-Gr-Right-Alt-to-Alt-in-tty&quot;&gt;&lt;a href=&quot;#Map-Alt-Gr-Right-Alt-to-Alt-in-tty&quot; class=&quot;headerlink&quot; title=&quot;Map Alt Gr (Right Alt) to Alt in tty&quot;&gt;&lt;/a&gt;Map Alt Gr (Right Alt) to Alt in tty&lt;/h2&gt;&lt;p&gt;From &lt;a href=&quot;https://wiki.archlinux.org/index.php/Keyboard_Configuration_in_Console_%28%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87%29&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Arch Wiki&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; /usr/share/kbd/keymaps/i386/qwerty&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cp us.map.gz us-two-alt-keys.map.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gunzip us-two-alt-keys.map.gz&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Edit &lt;code&gt;us-two-alt-keys.map&lt;/code&gt;，replace &lt;code&gt;include &amp;quot;linux-with-alt-and-altgr&amp;quot;&lt;/code&gt; with &lt;code&gt;include &amp;quot;linux-with-two-alt-keys&amp;quot;&lt;/code&gt;.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;gzip us-two-alt-keys.map&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Edit &lt;code&gt;/etc/vconsole.conf&lt;/code&gt;, replace &lt;code&gt;KEYMAP=us&lt;/code&gt; with &lt;code&gt;KEYMAP=us-two-alt-keys&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Reboot.&lt;/p&gt;
&lt;h2 id=&quot;Better-bash-bashrc&quot;&gt;&lt;a href=&quot;#Better-bash-bashrc&quot; class=&quot;headerlink&quot; title=&quot;Better bash.bashrc&quot;&gt;&lt;/a&gt;Better bash.bashrc&lt;/h2&gt;&lt;p&gt;Originally from &lt;a href=&quot;https://wiki.archlinux.org/index.php/Color_Bash_Prompt&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Arch Wiki&lt;/a&gt;, but now the page is deleted. Anyway you can still access its &lt;a href=&quot;https://wiki.archlinux.org/index.php/Color_Bash_Prompt_%28%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87%29&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Chinese version&lt;/a&gt;.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;104&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# /etc/bash.bashrc&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# https://wiki.archlinux.org/index.php/Color_Bash_Prompt&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# This file is sourced by all *interactive* bash shells on startup,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# including some apparently interactive shells such as scp and rcp&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# that can&#39;t tolerate any output. So make sure this doesn&#39;t display&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# anything or bad things will happen !&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Test for an interactive shell. There is no need to set anything&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# past this point for scp and rcp, and it&#39;s important to refrain from&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# outputting anything in those cases.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# If not running interactively, don&#39;t do anything!&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[$- != *i*]] &amp;amp;&amp;amp; &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Bash won&#39;t get SIGWINCH if another process is in the foreground.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Enable checkwinsize so that bash will check the terminal size when&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# it regains control.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# http://cnswww.cns.cwru.edu/~chet/bash/FAQ (E11)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;shopt&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;-s&lt;/span&gt; checkwinsize&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Enable history appending instead of overwriting.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;shopt&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;-s&lt;/span&gt; histappend&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$&amp;#123;TERM&amp;#125;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	xterm*|rxvt*|Eterm|aterm|kterm|gnome*)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		PROMPT_COMMAND=&lt;span class=&quot;variable&quot;&gt;$&amp;#123;PROMPT_COMMAND:+$PROMPT_COMMAND; &amp;#125;&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&#39;printf &quot;\033]0;%s@%s:%s\007&quot; &quot;$&amp;#123;USER&amp;#125;&quot; &quot;$&amp;#123;HOSTNAME%%.*&amp;#125;&quot; &quot;$&amp;#123;PWD/#$HOME/~&amp;#125;&quot;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	screen)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		PROMPT_COMMAND=&lt;span class=&quot;variable&quot;&gt;$&amp;#123;PROMPT_COMMAND:+$PROMPT_COMMAND; &amp;#125;&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&#39;printf&quot;\033_%s@%s:%s\033\\&quot;&quot;$&amp;#123;USER&amp;#125;&quot; &quot;$&amp;#123;HOSTNAME%%.*&amp;#125;&quot; &quot;$&amp;#123;PWD/#$HOME/~&amp;#125;&quot;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;esac&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# fortune is a simple program that displays a pseudorandom message&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# from a database of quotations at logon and/or logout.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# If you wish to use it, please install &quot;fortune-mod&quot; from the&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# official repositories, then uncomment the following line:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# [[&quot;$PS1&quot;]] &amp;amp;&amp;amp; /usr/bin/fortune&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Set colorful PS1 only on colorful terminals.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 2016-02-11&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# ZH: We are using `tput colors` because the new version of&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# `dircolors` added globbing in its database, making the old method&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# broken. So we are switching to `tput colors` now.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Below is the old method by checking `dircolors`.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;type&lt;/span&gt; -P tput &amp;gt;/dev/null &amp;amp;&amp;amp; tput colors &amp;gt;/dev/null &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&amp;gt;&amp;amp;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &amp;amp;&amp;amp; [[&lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$(tput colors)&lt;/span&gt;&quot;&lt;/span&gt; -ge &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; ]] ; &lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;# we have colors :-)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;# Enable colors for ls, etc. Prefer ~/.dir_colors&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;type&lt;/span&gt; -P dircolors &amp;gt;/dev/null ; &lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; [[&lt;span class=&quot;operator&quot;&gt;-f&lt;/span&gt; ~/.dir_colors ]] ; &lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;built_in&quot;&gt;eval&lt;/span&gt; $(dircolors -b ~/.dir_colors)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;elif&lt;/span&gt; [[&lt;span class=&quot;operator&quot;&gt;-f&lt;/span&gt; /etc/DIR_COLORS ]] ; &lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;built_in&quot;&gt;eval&lt;/span&gt; $(dircolors -b /etc/DIR_COLORS)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	PS1=&lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$(if [[ $&amp;#123;EUID&amp;#125; == 0]]; then echo&#39;\[\033[01;31m\]\h&#39;; else echo&#39;\[\033[01;32m\]\u@\h&#39;; fi)&lt;/span&gt;\[\033[01;34m\] \w \$([[\$? != 0]] &amp;amp;&amp;amp; echo \&quot;\[\033[01;31m\]:(\[\033[01;34m\] \&quot;)\\$\[\033[00m\]&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;# Use this other PS1 string if you want \W for root and \w for all other users:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;# PS1=&quot;$(if [[ $&amp;#123;EUID&amp;#125; == 0]]; then echo&#39;\[\033[01;31m\]\h\[\033[01;34m\] \W&#39;; else echo&#39;\[\033[01;32m\]\u@\h\[\033[01;34m\] \w&#39;; fi) \$([[\$? != 0]] &amp;amp;&amp;amp; echo \&quot;\[\033[01;31m\]:(\[\033[01;34m\] \&quot;)\\$\[\033[00m\]&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;alias&lt;/span&gt; ls=&lt;span class=&quot;string&quot;&gt;&quot;ls --color=auto&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;alias&lt;/span&gt; dir=&lt;span class=&quot;string&quot;&gt;&quot;dir --color=auto&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;alias&lt;/span&gt; grep=&lt;span class=&quot;string&quot;&gt;&quot;grep --color=auto&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;alias&lt;/span&gt; dmesg=&lt;span class=&quot;string&quot;&gt;&#39;dmesg --color&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;# Uncomment the &quot;Color&quot; line in /etc/pacman.conf instead of uncommenting the following line...!&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;# alias pacman=&quot;pacman --color=auto&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;# show root@ when we do not have colors&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	PS1=&lt;span class=&quot;string&quot;&gt;&quot;\u@\h \w \$([[\$? != 0]] &amp;amp;&amp;amp; echo \&quot;:(\&quot;)\$&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;# Use this other PS1 string if you want \W for root and \w for all other users:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;# PS1=&quot;\u@\h $(if [[ $&amp;#123;EUID&amp;#125; == 0]]; then echo&#39;\W&#39;; else echo&#39;\w&#39;; fi) \$([[\$? != 0]] &amp;amp;&amp;amp; echo \&quot;:(\&quot;)\$&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;PS2=&lt;span class=&quot;string&quot;&gt;&quot;&amp;gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;PS3=&lt;span class=&quot;string&quot;&gt;&quot;&amp;gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;PS4=&lt;span class=&quot;string&quot;&gt;&quot;+&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Try to enable the auto-completion (type: &quot;pacman -S bash-completion&quot; to install it).&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[-r /usr/share/bash-completion/bash_completion] &amp;amp;&amp;amp; . /usr/share/bash-completion/bash_completion&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Try to enable the &quot;Command not found&quot; hook (&quot;pacman -S pkgfile&quot; to install it).&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# See also: https://wiki.archlinux.org/index.php/Bash#The_.22command_not_found.22_hook&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[-r /usr/share/doc/pkgfile/&lt;span class=&quot;built_in&quot;&gt;command&lt;/span&gt;-not-found.bash ] &amp;amp;&amp;amp; . /usr/share/doc/pkgfile/&lt;span class=&quot;built_in&quot;&gt;command&lt;/span&gt;-not-found.bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# ZH: carry alias to sudo.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;alias&lt;/span&gt; sudo=&lt;span class=&quot;string&quot;&gt;&quot;sudo&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# ZH: make rm safer.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;alias&lt;/span&gt; rm=&lt;span class=&quot;string&quot;&gt;&quot;rm -i&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Bash-completion&quot;&gt;&lt;a href=&quot;#Bash-completion&quot; class=&quot;headerlink&quot; title=&quot;Bash completion&quot;&gt;&lt;/a&gt;Bash completion&lt;/h2&gt;&lt;p&gt;To enabling cyclic completion on tab, add the following line to your &lt;code&gt;.bashrc&lt;/code&gt;:&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;bind&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;&quot;\t&quot;: menu-complete&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;To get more completion with specific commands, install package &lt;code&gt;bash-completion&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Bash-command-not-found-hook&quot;&gt;&lt;a href=&quot;#Bash-command-not-found-hook&quot; class=&quot;headerlink&quot; title=&quot;Bash command not found hook&quot;&gt;&lt;/a&gt;Bash command not found hook&lt;/h2&gt;&lt;p&gt;Install package &lt;code&gt;pkgfile&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Execute-previous-commands-in-bash&quot;&gt;&lt;a href=&quot;#Execute-previous-commands-in-bash&quot; class=&quot;headerlink&quot; title=&quot;Execute previous commands in bash&quot;&gt;&lt;/a&gt;Execute previous commands in bash&lt;/h2&gt;&lt;p&gt;&lt;code&gt;Ctrl+R&lt;/code&gt; (I-search backward in emacs) can let you quickly execute command in your history.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;!!&lt;/code&gt; is substituted to be the last command in your history, but be careful when using it, for example &lt;code&gt;echo !!&lt;/code&gt; will lead to unexpected behavior if &lt;code&gt;!!&lt;/code&gt; is substituted to be &lt;code&gt;something &amp;amp;&amp;amp; poweroff&lt;/code&gt;, then &lt;code&gt;poweroff&lt;/code&gt; will be executed. To avoid such cases, always wrap it with quotes, like &lt;code&gt;echo &amp;quot;!!&amp;quot;&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Input-tab-or-newline-character-in-bash&quot;&gt;&lt;a href=&quot;#Input-tab-or-newline-character-in-bash&quot; class=&quot;headerlink&quot; title=&quot;Input tab or newline character in bash&quot;&gt;&lt;/a&gt;Input tab or newline character in bash&lt;/h2&gt;&lt;p&gt;&lt;code&gt;Ctrl+V&lt;/code&gt; in bash works as &lt;code&gt;Ctrl+Q&lt;/code&gt; in emacs, which will insert the next character literally.&lt;/p&gt;
&lt;h2 id=&quot;Access-clipboard-in-bash&quot;&gt;&lt;a href=&quot;#Access-clipboard-in-bash&quot; class=&quot;headerlink&quot; title=&quot;Access clipboard in bash&quot;&gt;&lt;/a&gt;Access clipboard in bash&lt;/h2&gt;&lt;p&gt;Install package &lt;code&gt;xsel&lt;/code&gt;. Add &lt;code&gt;alias xsel=&amp;#39;xsel -b&amp;#39;&lt;/code&gt; to your &lt;code&gt;.bashrc&lt;/code&gt;, and then you can use it like &lt;code&gt;xsel &amp;lt;input_file&lt;/code&gt; or &lt;code&gt;xsel &amp;gt;output_file&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Default-font&quot;&gt;&lt;a href=&quot;#Default-font&quot; class=&quot;headerlink&quot; title=&quot;Default font&quot;&gt;&lt;/a&gt;Default font&lt;/h2&gt;&lt;p&gt;To specify your preference on default fonts, create &lt;code&gt;/etc/fonts/local.conf&lt;/code&gt;, and edit it like the following example:&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;pi&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;doctype&quot;&gt;&amp;lt;!DOCTYPE fontconfig SYSTEM &quot;fonts.dtd&quot;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;fontconfig&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;match&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;family&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;sans-serif&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;test&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;edit&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;family&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;mode&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;prepend&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;binding&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;strong&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;WenQuanYi Micro Hei&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;WenQuanYi Zen Hei&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;WenQuanYi Bitmap Song&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;DejaVu Sans&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;edit&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;match&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;match&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;family&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;serif&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;test&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;edit&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;family&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;mode&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;prepend&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;binding&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;strong&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;DejaVu Serif&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;WenQuanYi Bitmap Song&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;WenQuanYi Zen Hei Sharp&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;AR PL UMing CN&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;AR PL UMing TW&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;AR PL New Sung&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;edit&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;match&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;match&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;family&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;monospace&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;test&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;edit&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;family&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;mode&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;prepend&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;binding&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;strong&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;WenQuanYi Micro Hei Mono&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;WenQuanYi Zen Hei Mono&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;WenQuanYi Bitmap Song&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;DejaVu Sans Mono&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;edit&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;match&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;fontconfig&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Now you have appropriate fonts for &lt;code&gt;sans-serif&lt;/code&gt;, &lt;code&gt;serif&lt;/code&gt; and &lt;code&gt;monospace&lt;/code&gt; as default.&lt;/p&gt;
&lt;p&gt;For more information, see &lt;a href=&quot;https://wiki.archlinux.org/index.php/Font_configuration&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Arch Wiki&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Emoji-font&quot;&gt;&lt;a href=&quot;#Emoji-font&quot; class=&quot;headerlink&quot; title=&quot;Emoji font&quot;&gt;&lt;/a&gt;Emoji font&lt;/h2&gt;&lt;p&gt;Install &lt;code&gt;noto-fonts-emoji&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Install-local-font&quot;&gt;&lt;a href=&quot;#Install-local-font&quot; class=&quot;headerlink&quot; title=&quot;Install local font&quot;&gt;&lt;/a&gt;Install local font&lt;/h2&gt;&lt;p&gt;From &lt;a href=&quot;https://wiki.archlinux.org/index.php/Fonts&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Arch Wiki&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;Drop your font files into &lt;code&gt;~/.fonts/&lt;/code&gt;, &lt;code&gt;cd&lt;/code&gt; into that directory, and execute the following command.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; -n &lt;span class=&quot;string&quot;&gt;&quot;Updating font cache...&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;fc&lt;/span&gt;-cache &amp;gt;/dev/null &lt;span class=&quot;operator&quot;&gt;-f&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mkfontscale&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mkfontdir&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;done&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Handle-filesystem-package-update&quot;&gt;&lt;a href=&quot;#Handle-filesystem-package-update&quot; class=&quot;headerlink&quot; title=&quot;Handle filesystem package update&quot;&gt;&lt;/a&gt;Handle filesystem package update&lt;/h2&gt;&lt;p&gt;Use &lt;code&gt;diff&lt;/code&gt; and your editor to manually merge your &lt;code&gt;passwd&lt;/code&gt;, &lt;code&gt;shadow&lt;/code&gt;, &lt;code&gt;group&lt;/code&gt; and &lt;code&gt;gshadow&lt;/code&gt; with the &lt;code&gt;*.pacnew&lt;/code&gt; one(s), then execute &lt;code&gt;pwconv&lt;/code&gt; and &lt;code&gt;groupconv&lt;/code&gt; for updating the shadow ones (&lt;code&gt;*-&lt;/code&gt;).&lt;/p&gt;
&lt;h2 id=&quot;Sync-time-with-NTP&quot;&gt;&lt;a href=&quot;#Sync-time-with-NTP&quot; class=&quot;headerlink&quot; title=&quot;Sync time with NTP&quot;&gt;&lt;/a&gt;Sync time with NTP&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo pacman -S ntp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo ntpd -gq &amp;amp;&amp;amp; sudo hwclock -w&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;For more information, see &lt;a href=&quot;https://wiki.archlinux.org/index.php/Time&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Arch Wiki&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Analyze-boot-time&quot;&gt;&lt;a href=&quot;#Analyze-boot-time&quot; class=&quot;headerlink&quot; title=&quot;Analyze boot time&quot;&gt;&lt;/a&gt;Analyze boot time&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;systemd-analyze blame&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;systemd-analyze critical-chain&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;For more information, see &lt;code&gt;man systemd-analyze&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Sometimes man-db.service may slow down the booting drastically, see &lt;a href=&quot;https://bbs.archlinux.org/viewtopic.php?pid=1409295&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;this thread&lt;/a&gt;, &lt;a href=&quot;https://bugs.archlinux.org/task/41511&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;this issue&lt;/a&gt;, and &lt;a href=&quot;https://bugs.archlinux.org/task/41688&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;this issue&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Sometimes journald can slow down the booting for having too many journal files, see this &lt;a href=&quot;https://wiki.archlinux.org/index.php/systemd#Journal_size_limit&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Arch Wiki&lt;/a&gt; to set an limit on old journal files and clean them up.&lt;/p&gt;
&lt;h2 id=&quot;System-backup-using-tar&quot;&gt;&lt;a href=&quot;#System-backup-using-tar&quot; class=&quot;headerlink&quot; title=&quot;System backup using tar&quot;&gt;&lt;/a&gt;System backup using tar&lt;/h2&gt;&lt;p&gt;Install AUR package &lt;code&gt;system-tar-and-restore&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Example: &lt;code&gt;/etc/backup.conf&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight ini&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Configuration file for backup.sh script.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Place it in /etc/backup.conf and edit it to your needs.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Set the interface. Available options: cli dialog.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;setting&quot;&gt;BRinterface=&lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;cli&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Uncomment to disable colors.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#BRnocolor=&quot;Yes&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Uncomment to enable verbose archiver output.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#BRverb=&quot;Yes&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Set the destination directory. Default is /.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;setting&quot;&gt;BRFOLDER=&lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;/run/media/zh/ZH-HDD/&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Uncomment to set alternative archive name. Default is &#39;Backup-$(hostname)-$(date +%d-%m-%Y-%T)&#39;.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#BRNAME=&quot;my_backup&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Set the archiver. Available options: tar bsdtar.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;setting&quot;&gt;BRarchiver=&lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;tar&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Set the compressor. Available options: gzip bzip2 xz none.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;setting&quot;&gt;BRcompression=&lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;gzip&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Uncomment to keep /home&#39;s hidden files and folders only.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#BRhome=&quot;No&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Uncomment to completely exclude /home directory. Use with BRhome=&quot;No&quot;.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#BRhidden=&quot;No&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Uncomment to set additional archiver options.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;setting&quot;&gt;BR_USER_OPTS=&lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;--exclude=/var/cache/* --exclude=/home/zh/.cache/* --acls --xattrs&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Uncomment to disable genkernel check in gentoo.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#BRgenkernel=&quot;No&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Uncomment to be quiet.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#BRquiet=&quot;Yes&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;To start a backup, execute &lt;code&gt;backup.sh&lt;/code&gt; as root.&lt;/p&gt;
&lt;h2 id=&quot;Rename-files-with-number&quot;&gt;&lt;a href=&quot;#Rename-files-with-number&quot; class=&quot;headerlink&quot; title=&quot;Rename files with number&quot;&gt;&lt;/a&gt;Rename files with number&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;find -name &lt;span class=&quot;string&quot;&gt;&#39;*.png&#39;&lt;/span&gt; | sort -n -r | gawk &lt;span class=&quot;string&quot;&gt;&#39;&amp;#123; printf&quot;mv %s %03d.png\n&quot;, $0, NR &amp;#125;&#39;&lt;/span&gt; | bash&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;100 files, reversely:&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;find -name &lt;span class=&quot;string&quot;&gt;&#39;*.png&#39;&lt;/span&gt; | sort -n -r | gawk &lt;span class=&quot;string&quot;&gt;&#39;&amp;#123; printf&quot;mv %s %03d.png\n&quot;, $0, 100 - NR &amp;#125;&#39;&lt;/span&gt; | bash&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Starting with 100:&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;find -name &lt;span class=&quot;string&quot;&gt;&#39;*.png&#39;&lt;/span&gt; | sort -n -r | gawk &lt;span class=&quot;string&quot;&gt;&#39;&amp;#123; printf&quot;mv %s %03d.png\n&quot;, $0, 100 + NR &amp;#125;&#39;&lt;/span&gt; | bash&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Shell-calculator&quot;&gt;&lt;a href=&quot;#Shell-calculator&quot; class=&quot;headerlink&quot; title=&quot;Shell calculator&quot;&gt;&lt;/a&gt;Shell calculator&lt;/h2&gt;&lt;p&gt;From &lt;a href=&quot;http://askubuntu.com/questions/378661/any-command-line-calculator-for-ubuntu&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;an AskUbuntu question&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Add the following lines to your &lt;code&gt;.bashrc&lt;/code&gt;.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;=() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;input=&lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$&amp;#123;@//pi/π&amp;#125;&lt;/span&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;-ne&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$input&lt;/span&gt;\nquit&quot;&lt;/span&gt; | gcalccmd | sed &lt;span class=&quot;string&quot;&gt;&#39;s:^&amp;gt; ::g&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;For example, &lt;code&gt;= &amp;quot;e^(i*pi)+asin(1)/90&amp;quot;&lt;/code&gt; gives &lt;code&gt;0&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Use-English-named-XDG-user-directories&quot;&gt;&lt;a href=&quot;#Use-English-named-XDG-user-directories&quot; class=&quot;headerlink&quot; title=&quot;Use English-named XDG user directories&quot;&gt;&lt;/a&gt;Use English-named XDG user directories&lt;/h2&gt;&lt;p&gt;As in &lt;a href=&quot;https://wiki.archlinux.org/index.php/Xdg_user_directories&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Arch Wiki&lt;/a&gt;, execute &lt;code&gt;LC_ALL=&amp;#39;en_US.UTF-8&amp;#39; xdg-user-dirs-update&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Save-screenshot-to-clipboard-when-PrtSc&quot;&gt;&lt;a href=&quot;#Save-screenshot-to-clipboard-when-PrtSc&quot; class=&quot;headerlink&quot; title=&quot;Save screenshot to clipboard when PrtSc&quot;&gt;&lt;/a&gt;Save screenshot to clipboard when PrtSc&lt;/h2&gt;&lt;p&gt;Swap the values of &lt;code&gt;org.gnome.settings-daemon.plugins.media-keys.{,area-,window-}screenshot{,-clip}&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&quot;GNOME-3-start-up-applications&quot;&gt;&lt;a href=&quot;#GNOME-3-start-up-applications&quot; class=&quot;headerlink&quot; title=&quot;GNOME 3 start up applications&quot;&gt;&lt;/a&gt;GNOME 3 start up applications&lt;/h2&gt;&lt;p&gt;As of GNOME 3.12, &lt;code&gt;gnome-session-properties&lt;/code&gt; is removed. Instead, launch &lt;code&gt;gnome-tweak-tool&lt;/code&gt; and go to the corresponding tab. If you cannot add a start up application (the add button not responding), try launching &lt;code&gt;gnome-tweak-tool&lt;/code&gt; from your terminal.&lt;/p&gt;
&lt;p&gt;To truly manage your start up applications, go to &lt;code&gt;~/.config/autostart/&lt;/code&gt; and edit the desktop files there.&lt;/p&gt;
&lt;h2 id=&quot;Pomodoro-for-GNOME-3&quot;&gt;&lt;a href=&quot;#Pomodoro-for-GNOME-3&quot; class=&quot;headerlink&quot; title=&quot;Pomodoro for GNOME 3&quot;&gt;&lt;/a&gt;Pomodoro for GNOME 3&lt;/h2&gt;&lt;p&gt;Install AUR package &lt;code&gt;gnome-shell-pomodoro&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Clipboard-management-tool-for-GNOME-3&quot;&gt;&lt;a href=&quot;#Clipboard-management-tool-for-GNOME-3&quot; class=&quot;headerlink&quot; title=&quot;Clipboard management tool for GNOME 3&quot;&gt;&lt;/a&gt;Clipboard management tool for GNOME 3&lt;/h2&gt;&lt;p&gt;Install AUR package &lt;code&gt;gpaste&lt;/code&gt;, restart GNOME shell and enable the extension GPaste.&lt;/p&gt;
&lt;h2 id=&quot;View-video-codec-information&quot;&gt;&lt;a href=&quot;#View-video-codec-information&quot; class=&quot;headerlink&quot; title=&quot;View video codec information&quot;&gt;&lt;/a&gt;View video codec information&lt;/h2&gt;&lt;p&gt;Use &lt;code&gt;ffprobe&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Clip-video&quot;&gt;&lt;a href=&quot;#Clip-video&quot; class=&quot;headerlink&quot; title=&quot;Clip video&quot;&gt;&lt;/a&gt;Clip video&lt;/h2&gt;&lt;p&gt;From &lt;a href=&quot;http://stackoverflow.com/a/18449609/2420519&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;StackOverflow&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;If you want to support video players without edit list support (or actually drop the unused frames), you need to do a re-encode, which is the default if &lt;code&gt;copy&lt;/code&gt; is not specified.&lt;/p&gt;
&lt;p&gt;Normally, you can use the following command to clip a video:&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ffmpeg -i &amp;lt;INPUT_FILE&amp;gt; [-ss &amp;lt;START_TIME&amp;gt;] [-t &amp;lt;STOP_TIME&amp;gt;] [-async &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] &amp;lt;OUTPUT_FILE&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Convert-video-to-animated-GIF&quot;&gt;&lt;a href=&quot;#Convert-video-to-animated-GIF&quot; class=&quot;headerlink&quot; title=&quot;Convert video to animated GIF&quot;&gt;&lt;/a&gt;Convert video to animated GIF&lt;/h2&gt;&lt;p&gt;Adapted From &lt;a href=&quot;http://dtbaker.net/random-linux-posts/convert-video-avi-mpeg-mp4-to-a-gif-animation-on-linux/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;dtbaker&lt;/a&gt; and &lt;a href=&quot;http://superuser.com/questions/556029/how-do-i-convert-a-video-to-gif-using-ffmpeg-with-reasonable-quality/556031&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;a SuperUser question&lt;/a&gt;.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mkdir frames&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ffmpeg -ss &amp;lt;HH:MM:SS[.XXX]|START_SECONDS&amp;gt; -t&amp;lt;HH:MM:SS[.XXX]|DURATION_SECONDS&amp;gt; -i &amp;lt;YOUR_VIDEO_FILE&amp;gt; [-r &amp;lt;FPS&amp;gt;] &lt;span class=&quot;operator&quot;&gt;-s&lt;/span&gt; &amp;lt;WIDTH_NORMALLY_480&amp;gt;x&amp;lt;HEIGHT_NORMALLY_270&amp;gt; ./frames/frame%&lt;span class=&quot;number&quot;&gt;04&lt;/span&gt;d.png&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;convert -delay &amp;lt;&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;/FPS&amp;gt; -loop &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; -layers Optimize ./frames/frame*.png output.gif&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;If you need to compress your GIF file, use &lt;code&gt;gifsicle&lt;/code&gt; or do it &lt;a href=&quot;http://ezgif.com/optimize&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;online&lt;/a&gt;; for cropping, you also can use &lt;a href=&quot;http://ezgif.com/crop&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;this site&lt;/a&gt; with option “Crop with Gifsicle” (ImageMagick output seems corrupted).&lt;/p&gt;
&lt;h2 id=&quot;Convert-SVG-to-PNG-or-else&quot;&gt;&lt;a href=&quot;#Convert-SVG-to-PNG-or-else&quot; class=&quot;headerlink&quot; title=&quot;Convert SVG to PNG (or else)&quot;&gt;&lt;/a&gt;Convert SVG to PNG (or else)&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;inkscape --export-png=&amp;lt;OUTPUT_FILE&amp;gt; --export-width=&amp;lt;WIDTH&amp;gt; --export-height=&amp;lt;HEIGHT&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;--export-dpi&lt;/code&gt; is also available.&lt;/p&gt;
&lt;p&gt;See &lt;code&gt;man inkscape&lt;/code&gt; for more formats.&lt;/p&gt;
&lt;h2 id=&quot;Convert-PDF-to-PNG&quot;&gt;&lt;a href=&quot;#Convert-PDF-to-PNG&quot; class=&quot;headerlink&quot; title=&quot;Convert PDF to PNG&quot;&gt;&lt;/a&gt;Convert PDF to PNG&lt;/h2&gt;&lt;p&gt;From &lt;a href=&quot;http://stackoverflow.com/questions/6605006/convert-pdf-to-image-with-high-resolution&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;StackOverflow&lt;/a&gt;.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;convert -density &lt;span class=&quot;number&quot;&gt;300&lt;/span&gt; &amp;lt;YOUR_FILE.pdf&amp;gt; &amp;lt;YOUR_FILE.png&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Where the density parameter is your desired DPI.&lt;/p&gt;
&lt;h2 id=&quot;Bitmap-operation&quot;&gt;&lt;a href=&quot;#Bitmap-operation&quot; class=&quot;headerlink&quot; title=&quot;Bitmap operation&quot;&gt;&lt;/a&gt;Bitmap operation&lt;/h2&gt;&lt;p&gt;Resize:&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mogrify -interpolate bicubic -resize &lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;% *.png&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Crop:&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mogrify -crop &lt;span class=&quot;number&quot;&gt;1080&lt;/span&gt;x1845+&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;+&lt;span class=&quot;number&quot;&gt;75&lt;/span&gt; *.png&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Merge-PDFs&quot;&gt;&lt;a href=&quot;#Merge-PDFs&quot; class=&quot;headerlink&quot; title=&quot;Merge PDFs&quot;&gt;&lt;/a&gt;Merge PDFs&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pdfunite &amp;lt;SOURCE_PDF_FILES&amp;gt; &amp;lt;OUTPUT_PDF_FILE&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Convert-GB-encoded-mp3-tag-to-Unicode&quot;&gt;&lt;a href=&quot;#Convert-GB-encoded-mp3-tag-to-Unicode&quot; class=&quot;headerlink&quot; title=&quot;Convert GB* encoded mp3 tag to Unicode&quot;&gt;&lt;/a&gt;Convert GB* encoded mp3 tag to Unicode&lt;/h2&gt;&lt;p&gt;Install package &lt;code&gt;easytag&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Note that EasyTag may become the handler for MIME type &lt;code&gt;inode/directory&lt;/code&gt;, instead of your own file manager, say, Nautilus. You can delete the default association for Easytag and inode/directory in &lt;code&gt;~/.local/share/applications/mimeapps.list&lt;/code&gt;, which is managed by &lt;code&gt;gvfs-mime&lt;/code&gt;. See also the MIME type section.&lt;/p&gt;
&lt;h2 id=&quot;Play-FLAC-with-CUE&quot;&gt;&lt;a href=&quot;#Play-FLAC-with-CUE&quot; class=&quot;headerlink&quot; title=&quot;Play FLAC with CUE&quot;&gt;&lt;/a&gt;Play FLAC with CUE&lt;/h2&gt;&lt;p&gt;Use &lt;code&gt;deadbeaf&lt;/code&gt;. Rhythmbox cannot handle CUE due to its library design.&lt;/p&gt;
&lt;p&gt;Install &lt;code&gt;deadbeef-mpris2-plugin&lt;/code&gt; if you want MPRIS2 support (Controlling media playback in GNOME shell and other places).&lt;/p&gt;
&lt;h2 id=&quot;Edit-FLAC-metadata&quot;&gt;&lt;a href=&quot;#Edit-FLAC-metadata&quot; class=&quot;headerlink&quot; title=&quot;Edit FLAC metadata&quot;&gt;&lt;/a&gt;Edit FLAC metadata&lt;/h2&gt;&lt;p&gt;Use &lt;code&gt;metaflac&lt;/code&gt; from the &lt;code&gt;flac&lt;/code&gt; package.&lt;/p&gt;
&lt;h2 id=&quot;Test-FLAC-integrity&quot;&gt;&lt;a href=&quot;#Test-FLAC-integrity&quot; class=&quot;headerlink&quot; title=&quot;Test FLAC integrity&quot;&gt;&lt;/a&gt;Test FLAC integrity&lt;/h2&gt;&lt;p&gt;Use &lt;code&gt;flac --test &amp;lt;YOUR_FLAC_FILE&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Synchronize-directories&quot;&gt;&lt;a href=&quot;#Synchronize-directories&quot; class=&quot;headerlink&quot; title=&quot;Synchronize directories&quot;&gt;&lt;/a&gt;Synchronize directories&lt;/h2&gt;&lt;p&gt;Use &lt;code&gt;freefilesync&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;adb-sync&lt;/code&gt; from the &lt;code&gt;adb-sync-git&lt;/code&gt; for Android.&lt;/p&gt;
&lt;h2 id=&quot;MIME-type-handling&quot;&gt;&lt;a href=&quot;#MIME-type-handling&quot; class=&quot;headerlink&quot; title=&quot;MIME type handling&quot;&gt;&lt;/a&gt;MIME type handling&lt;/h2&gt;&lt;p&gt;In GNOME, there are two components managing the default application for a MIME type.&lt;/p&gt;
&lt;p&gt;The first one, which is system-wide, can be queried or set via &lt;code&gt;xdg-mime&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The second one, which is a per-user setting, can be queried or set via &lt;code&gt;gvfs-mime&lt;/code&gt;, or manually editing &lt;code&gt;~/.local/share/applications/mimeapps.list&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The second one takes precedence, and I guess &lt;code&gt;gvfs-mime&lt;/code&gt; is implemented partially for GNOME Open with dialog.&lt;/p&gt;
&lt;h2 id=&quot;Google-URL-in-Google-Chrome&quot;&gt;&lt;a href=&quot;#Google-URL-in-Google-Chrome&quot; class=&quot;headerlink&quot; title=&quot;Google URL in Google Chrome&quot;&gt;&lt;/a&gt;Google URL in Google Chrome&lt;/h2&gt;&lt;p&gt;Open &lt;code&gt;~/.config/google-chrome/Default/Preferences&lt;/code&gt;, edit &lt;code&gt;last_known_google_url&lt;/code&gt; and &lt;code&gt;last_prompted_google_url&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If Chrome keeps reverting the url, visiting &lt;a href=&quot;https://www.google.com/ncr&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.google.com/ncr&lt;/a&gt; may help.&lt;/p&gt;
&lt;h2 id=&quot;Screenshot&quot;&gt;&lt;a href=&quot;#Screenshot&quot; class=&quot;headerlink&quot; title=&quot;Screenshot&quot;&gt;&lt;/a&gt;Screenshot&lt;/h2&gt;&lt;p&gt;Shortcut keys for screenshot is listed in the search category of its setting.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Screen to file: &lt;code&gt;PrtSc&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Window to file: &lt;code&gt;Alt&lt;/code&gt; + &lt;code&gt;PrtSc&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Area to file: &lt;code&gt;Shift&lt;/code&gt; + &lt;code&gt;PrtSc&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;To clipboard instead: &lt;code&gt;Ctrl&lt;/code&gt; + above&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Record: &lt;code&gt;Shift + Ctrl + Alt + R&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;To open a dialog for settings before screenshot, execute &lt;code&gt;gnome-screenshot -i&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Use-PrtSc-key-for-Menu&quot;&gt;&lt;a href=&quot;#Use-PrtSc-key-for-Menu&quot; class=&quot;headerlink&quot; title=&quot;Use PrtSc key for Menu&quot;&gt;&lt;/a&gt;Use PrtSc key for Menu&lt;/h2&gt;&lt;p&gt;On my ThinkPad T450, the usual location for Menu key is a PrtSc key. I tried to change it with &lt;code&gt;xmodmap&lt;/code&gt;, but it cannot get automatically loaded by my GNOME 3 — even when using autostart. Seems that it gets reset by some others, but even disabling a GNOME keyboard plugin as per a post in Arch Linux BBS did not help. And some other people say &lt;code&gt;xmodmap&lt;/code&gt; has been deprecated; people should use &lt;code&gt;xkb&lt;/code&gt; instead.&lt;/p&gt;
&lt;p&gt;So in the end, I resorted to &lt;code&gt;xkb&lt;/code&gt;, and dirtily modified &lt;code&gt;/usr/share/X11/xkb/symbols/pc&lt;/code&gt;, swapping &lt;code&gt;PRSC&lt;/code&gt;, &lt;code&gt;Menu&lt;/code&gt; and &lt;code&gt;INS&lt;/code&gt;, as follows.&lt;/p&gt;
&lt;figure class=&quot;highlight diff&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;32c32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;    key &amp;lt;MENU&amp;gt; &amp;#123;	[Menu]	&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;---&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;    key &amp;lt;PRSC&amp;gt; &amp;#123;	[Menu]	&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67c67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;    key &amp;lt;PRSC&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;---&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;    key  &amp;lt;INS&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76c76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;    key  &amp;lt;INS&amp;gt; &amp;#123;	[Insert]	&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;---&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;    key &amp;lt;MENU&amp;gt; &amp;#123;	[Insert]	&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Control-ThinkPad-battery-charging&quot;&gt;&lt;a href=&quot;#Control-ThinkPad-battery-charging&quot; class=&quot;headerlink&quot; title=&quot;Control ThinkPad battery charging&quot;&gt;&lt;/a&gt;Control ThinkPad battery charging&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://wiki.archlinux.org/index.php/Tp_smapi&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;tp_smapi&lt;/a&gt; has been out of date for a long time, and it did not support my T450. Newer models of ThinkPad should use &lt;a href=&quot;https://aur.archlinux.org/packages/tpacpi-bat/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;tpacpi-bat&lt;/a&gt; instead.&lt;/p&gt;
&lt;p&gt;For simplicity, there is a &lt;a href=&quot;https://wiki.archlinux.org/index.php/Tp-battery-mode&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;tp-battery-mode&lt;/a&gt; package. Install it, enable and start the service, and you are done.&lt;/p&gt;
&lt;h2 id=&quot;Draw-graphs&quot;&gt;&lt;a href=&quot;#Draw-graphs&quot; class=&quot;headerlink&quot; title=&quot;Draw graphs&quot;&gt;&lt;/a&gt;Draw graphs&lt;/h2&gt;&lt;p&gt;LibreOffice Draw, and use its connectors instead of bare wires. Shift for regular shape and Ctrl + Mouse move for cloning can also be handy.&lt;/p&gt;
&lt;h2 id=&quot;Render-GFM&quot;&gt;&lt;a href=&quot;#Render-GFM&quot; class=&quot;headerlink&quot; title=&quot;Render GFM&quot;&gt;&lt;/a&gt;Render GFM&lt;/h2&gt;&lt;p&gt;Bash script from &lt;a href=&quot;https://gist.github.com/jaburns/33d88f4aa99bb4ab6ad6&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;jaburn’s gist&lt;/a&gt;.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;shebang&quot;&gt;#!/usr/bin/env bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;data=&lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    cat&quot;$1&quot;\&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      | sed&#39;s/&quot;/\\&quot;/g&#39;\&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      | sed&#39;:a;N;$!ba;s/\n/\\n/g&#39;\&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; [[-z &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$2&lt;/span&gt;&quot;&lt;/span&gt; ]]; &lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    context=&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    context=&lt;span class=&quot;string&quot;&gt;&quot;,\&quot;context\&quot;:\&quot;&lt;span class=&quot;variable&quot;&gt;$2&lt;/span&gt;\&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;!DOCTYPE html&amp;gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;html&amp;gt;&amp;lt;head&amp;gt;&amp;lt;style&amp;gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;curl &lt;span class=&quot;operator&quot;&gt;-s&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;https://gist.githubusercontent.com/andyferra/2554919/raw/2e66cabdafe1c9a7f354aa2ebf5bc38265e638e5/github.css&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;/style&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;body&amp;gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;curl &lt;span class=&quot;operator&quot;&gt;-s&lt;/span&gt; --data &lt;span class=&quot;string&quot;&gt;&quot;&amp;#123;\&quot;text\&quot;:\&quot;&lt;span class=&quot;variable&quot;&gt;$data&lt;/span&gt;\&quot;,\&quot;mode\&quot;:\&quot;gfm\&quot;&lt;span class=&quot;variable&quot;&gt;$context&lt;/span&gt;&amp;#125;&quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;https://api.github.com/markdown&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Generate-mosaic-image&quot;&gt;&lt;a href=&quot;#Generate-mosaic-image&quot; class=&quot;headerlink&quot; title=&quot;Generate mosaic image&quot;&gt;&lt;/a&gt;Generate mosaic image&lt;/h2&gt;&lt;p&gt;See &lt;a href=&quot;http://askubuntu.com/questions/249568/software-for-making-mosaic-image-from-a-collection-of-images&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;this question&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Minecraft-with-Forge-crashes-on-splash-screen&quot;&gt;&lt;a href=&quot;#Minecraft-with-Forge-crashes-on-splash-screen&quot; class=&quot;headerlink&quot; title=&quot;Minecraft with Forge crashes on splash screen&quot;&gt;&lt;/a&gt;Minecraft with Forge crashes on splash screen&lt;/h2&gt;&lt;p&gt;Sometimes Minecraft with Forge can crash with a message like the following one:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[xcb] Unknown request in queue while dequeuing&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Disabling the Forge splash screen by setting &lt;code&gt;enabled=false&lt;/code&gt; in &lt;code&gt;.minecraft/config/splash.properties&lt;/code&gt; can workaround this problem.&lt;/p&gt;
&lt;h2 id=&quot;Install-Xilinx-ISE&quot;&gt;&lt;a href=&quot;#Install-Xilinx-ISE&quot; class=&quot;headerlink&quot; title=&quot;Install Xilinx ISE&quot;&gt;&lt;/a&gt;Install Xilinx ISE&lt;/h2&gt;&lt;p&gt;Modified from &lt;a href=&quot;https://wiki.archlinux.org/index.php/Xilinx_ISE_WebPACK&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Arch Wiki&lt;/a&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Download Xilinx ISE Installer from &lt;a href=&quot;http://www.xilinx.com/support/download/index.html/content/xilinx/en/downloadNav/design-tools.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Install &lt;code&gt;ncurses5-compat-libs&lt;/code&gt;, it is a required dependency of the installer.&lt;/li&gt;
&lt;li&gt;Untar only the first image, execute &lt;code&gt;sudo xsetup&lt;/code&gt;, choose system edition, uncheck sending data, and leave other options the default. You don’t need to check the “Install cable driver” option. Don’t try to build a custom package for it; it’s painful and buggy.&lt;/li&gt;
&lt;li&gt;Fix &lt;code&gt;libstdc++.so&lt;/code&gt; as in &lt;a href=&quot;https://wiki.archlinux.org/index.php/Xilinx_ISE_WebPACK#Dynamic_Library_Fix_.28libstdc.2B.2B.so.29&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Install Digilent USB-JTAG drivers as in &lt;a href=&quot;https://wiki.archlinux.org/index.php/Xilinx_ISE_WebPACK#Digilent_USB-JTAG_Drivers&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;here&lt;/a&gt;. You don’t need to install &lt;code&gt;fxload&lt;/code&gt;, or add yourself to the &lt;code&gt;uucp&lt;/code&gt; group, or add a udev rule. You can program the device with the command &lt;code&gt;djtgcfg&lt;/code&gt; with &lt;code&gt;digilent.adept.utilities&lt;/code&gt; installed.&lt;/li&gt;
&lt;li&gt;Create &lt;code&gt;~/.local/share/applications/xilinx-ise.desktop&lt;/code&gt; as in &lt;a href=&quot;https://wiki.archlinux.org/index.php/Xilinx_ISE_WebPACK#Launching_via_desktop_icons&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;here&lt;/a&gt;. My alternative version is given below.&lt;/li&gt;
&lt;li&gt;Get a license, and feed it to the license manager.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;xilinx-ise.desktop&lt;/code&gt;:&lt;/p&gt;
&lt;figure class=&quot;highlight ini&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;[Desktop Entry]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;setting&quot;&gt;Categories=&lt;span class=&quot;value&quot;&gt;Development;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;setting&quot;&gt;Comment=&lt;span class=&quot;value&quot;&gt;Xilinx ISE&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;setting&quot;&gt;Encoding=&lt;span class=&quot;value&quot;&gt;UTF-&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;setting&quot;&gt;Exec=&lt;span class=&quot;value&quot;&gt;sh -c &lt;span class=&quot;string&quot;&gt;&quot;unset LANG &amp;amp;&amp;amp; unset QT_PLUGIN_PATH &amp;amp;&amp;amp; source /opt/Xilinx/14.7/ISE_DS/settings64.sh &amp;amp;&amp;amp; export PRINTER=null &amp;amp;&amp;amp; ise&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;setting&quot;&gt;GenericName=&lt;span class=&quot;value&quot;&gt;Xilinx ISE&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;setting&quot;&gt;Icon=&lt;span class=&quot;value&quot;&gt;/opt/Xilinx/&lt;span class=&quot;number&quot;&gt;14.7&lt;/span&gt;/ISE_DS/ISE/data/images/pn-ise.png&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;setting&quot;&gt;Keywords=&lt;span class=&quot;value&quot;&gt;Xlinx;ISE&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;setting&quot;&gt;Name=&lt;span class=&quot;value&quot;&gt;Xilinx ISE&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;setting&quot;&gt;StartupNotify=&lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;setting&quot;&gt;Type=&lt;span class=&quot;value&quot;&gt;Application&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;By adding &lt;code&gt;export PRINTER=null&lt;/code&gt; you can print schematic file to PDF once per launch. This is a bug in Xilinx ISE.&lt;/p&gt;
&lt;h2 id=&quot;Additional-tools&quot;&gt;&lt;a href=&quot;#Additional-tools&quot; class=&quot;headerlink&quot; title=&quot;Additional tools&quot;&gt;&lt;/a&gt;Additional tools&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cloc&lt;/code&gt;: Counting line of code.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dos2unix&lt;/code&gt;: Convert End-of-line and some encoding to Unix flavor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dosfstools&lt;/code&gt;: &lt;code&gt;mkfs.fat&lt;/code&gt;, etc.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;easytag&lt;/code&gt;: MP3 tag editing and conversion.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gpaste&lt;/code&gt;: Clipboard manager&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gsmartcontrol&lt;/code&gt;: Graphical SMART viewer.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;haveged&lt;/code&gt;: Boost low entropy.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;htop&lt;/code&gt;: &lt;code&gt;top&lt;/code&gt; improved.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;iotop&lt;/code&gt;: &lt;code&gt;top&lt;/code&gt; on I/O.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;jq&lt;/code&gt;: Manipulate JSON in command line.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lsof&lt;/code&gt;: List opened files.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mtr&lt;/code&gt;: &lt;code&gt;traceroute&lt;/code&gt; + &lt;code&gt;ping&lt;/code&gt;, automatically.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ntfs-3g&lt;/code&gt;: NTFS writing support, and others.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pastebinit&lt;/code&gt;: Various pastebin services.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pdfgrep&lt;/code&gt;: &lt;code&gt;grep&lt;/code&gt; on PDF.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;powertop&lt;/code&gt;: Show power consumption.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;profile-cleaner&lt;/code&gt;: Optimize browser profile SQLite database, and more.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;proxychains&lt;/code&gt;: Proxify other programs.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pv&lt;/code&gt;: View progress for &lt;code&gt;dd&lt;/code&gt;, etc.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tig&lt;/code&gt;: Git repository browser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;trash-cli&lt;/code&gt;: Trash bin in command line.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tree&lt;/code&gt;: &lt;code&gt;ls&lt;/code&gt; recursively in tree format.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vlc&lt;/code&gt;: Versatile and stable video player.&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;This is my notebook for some small tips and tricks when using Arch Linux.&lt;/p&gt;
&lt;h2 id=&quot;Why-Arch-Linux&quot;&gt;&lt;a href=&quot;#Why-Arch-Linux&quot; class=&quot;headerlink&quot; title=&quot;Why Arch Linux?&quot;&gt;&lt;/a&gt;Why Arch Linux?&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;It is fresh and simple in package dependency.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It has a powerful Arch User Repository and makes it easy for you to make/modify your package.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It has a detailed Arch Wiki comprising useful experiences and recommendations.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It gets you to learn the basic knowledge required to be a Linux user/administrator/programmer.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://blog.zhanghai.me/tags/linux/"/>
    
      <category term="Note" scheme="http://blog.zhanghai.me/tags/note/"/>
    
      <category term="Software" scheme="http://blog.zhanghai.me/tags/software/"/>
    
  </entry>
  
  <entry>
    <title>Android 设计简明教程</title>
    <link href="http://blog.zhanghai.me/android-design-guide/"/>
    <id>http://blog.zhanghai.me/android-design-guide/</id>
    <published>2014-11-02T10:23:15.000Z</published>
    <updated>2016-02-18T06:33:57.924Z</updated>
    
    <content type="html">&lt;img src=&quot;/android-design-guide/android_design_elements_landing.png&quot; alt=&quot;欢迎&quot; title=&quot;欢迎&quot;&gt;
&lt;h2 id=&quot;零、前言&quot;&gt;&lt;a href=&quot;# 零、前言&quot; class=&quot;headerlink&quot; title=&quot;零、前言&quot;&gt;&lt;/a&gt;零、前言 &lt;/h2&gt;&lt;p&gt; 这是我作为一名 Android 开发者对 Android 设计的理解。在这个教程中，我主要参考 &lt;a href=&quot;http://developer.android.com/design/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; 官方的设计教程&lt;/a&gt;，同时会加入一些自己的见解，并穿插一些实用资源。其中 &lt;a href=&quot;http://www.geekpark.net/users/163712/topics&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;NovaDNG&lt;/a&gt; 的几篇文章对我影响较大，对此十分感谢。&lt;/p&gt;
&lt;p&gt;在今年，Google 已经推出了新的 &lt;a href=&quot;https://www.google.com/design/spec/material-design/introduction.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Material 设计标准&lt;/a&gt;，对真实世界进行抽象的模拟，实现了在各个平台上的统一设计标准。我对这个标准的理念认同，然而在布局等细节上有些许分歧。诸位可以学习完 Android 设计后继续学习 Material 设计，作出自己的判断。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;一、设计原则&quot;&gt;&lt;a href=&quot;# 一、设计原则&quot; class=&quot;headerlink&quot; title=&quot;一、设计原则&quot;&gt;&lt;/a&gt;一、&lt;a href=&quot;http://developer.android.com/design/get-started/principles.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;设计原则 &lt;/a&gt;&lt;/h2&gt;&lt;p&gt; 为了对设计中的问题解决提供指导，设计师结合他们所追求的设计理念和实际的设计案例，制定了一系列的设计原则。&lt;/p&gt;
&lt;p&gt;在学习 Android 设计的过程中，首先接触 Android 官方推荐的设计原则，可以在设计过程的初期就逐渐熟悉并得到运用。在这以后，经过长期的观察与设计，大家也可以渐渐总结出自己的设计原则。总而言之，有所坚持，有所变通。&lt;/p&gt;
&lt;p&gt;以下是一些官方设计原则页面上提及的设计规范，但按照我个人的设计理念，重新进行了组织。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;一致&lt;/p&gt;
&lt;p&gt; 一致性是众多原则所共同要求的特性。一致性符合人的认知习惯，无论是编程还是设计，一致性都能够带来清晰与优雅。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;保持应用界面的一致性。相似的内容应当拥有相似的布局，使得用户得以通过经验快速熟悉应用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;保持应用逻辑的一致性。相似的界面元素应当拥有相似的功能，使得用户能够举一反三，至于熟练。&lt;/p&gt;
  &lt;img src=&quot;/android-design-guide/android_principles_looks_same.png&quot; alt=&quot;一致的 ActionBar Spinner 导航&quot; title=&quot;一致的 ActionBar Spinner 导航&quot;&gt;
&lt;p&gt;  如上图 ActionBar 中的导航，都是通过点击 Spinner（下拉列表框）来更改主界面正在浏览内容的分类。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;保持与 Android 界面的一致性。其他平台（如 iOS）拥有自己的设计风格，但 Android 也有着自己的视觉语言，即拟物。Android 用户在应用中期待的是和平台一致的用户界面，因此，请不要将其他平台的设计元素强行引入，相反，寻找并使用 Android 的表现方式。所谓入乡随俗。&lt;/p&gt;
  &lt;img src=&quot;/android-design-guide/holo_everywhere.png&quot; alt=&quot;Holo 主题中的控件&quot; title=&quot;Holo 主题中的控件&quot;&gt;
&lt;p&gt;  以上是 Holo 主题中的一些控件的展示，可以注意到整体设计风格与 iOS 的不同。这在之后会继续讨论。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;简约&lt;/p&gt;
&lt;p&gt; 简约不是简陋，而是合适简化与强大功能的结合。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;使用拟真的界面元素，经过适当的抽象在实物与概念化间达到平衡，从而给用户以熟悉而优雅的体验。&lt;/p&gt;
  &lt;img src=&quot;/android-design-guide/android_principles_real_objects.png&quot; alt=&quot;通过拟真的交互方式将图标分组&quot; title=&quot;通过拟真的交互方式将图标分组&quot;&gt;
&lt;p&gt;  拟真是 Android 的核心设计理念，这在之后的 Android 风格介绍中会进行说明。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;简化界面的布局，突出常用的功能，而将不常用者隐藏于菜单等二级界面，降低用户的认知负担，加快学习进程。&lt;/p&gt;
  &lt;img src=&quot;/android-design-guide/android_principles_information_when_need_it.png&quot; alt=&quot;将功能装入 Action Overflow&quot; title=&quot;将功能装入 Action Overflow&quot;&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;适当而不过度的界面动画，可以为操作过程增加趣味，同时间接说明界面间的逻辑关系。&lt;/p&gt;
  &lt;img src=&quot;/android-design-guide/android_principles_delight.png&quot; alt=&quot;启动器（主屏幕）翻页到达边缘的动画&quot; title=&quot;启动器（主屏幕）翻页到达边缘的动画&quot;&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;友好&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;让用户能够自定义应用，同时记住用户的偏好，让用户拥有在应用中的归属感。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;为用户作出最佳的决定，但总是让用户最终确认。&lt;/p&gt;
  &lt;img src=&quot;/android-design-guide/android_principles_decide_for_me.png&quot; alt=&quot;自动打开 Beam&quot; title=&quot;自动打开 Beam&quot;&gt;
&lt;p&gt;  用户是为了方便生活而使用应用，因此，应用应当尽力简化用户的操作，根据当前的状态，提供最合理的默认值。同时，为了不让用户感到惊讶或受到侵犯，在执行决定之前总是征求他们的同意。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;只在必要时提醒用户，避免打扰。&lt;/p&gt;
  &lt;img src=&quot;/android-design-guide/android_principles_important_interruption.png&quot; alt=&quot;日历在事件即将开始时的提醒是可以接受的&quot; title=&quot;日历在事件即将开始时的提醒是可以接受的&quot;&gt;
&lt;p&gt;  Android 中的通知栏是经常被国产应用滥用的地方，常常可以见到许多广告或是不需要的信息被应用探出在此。我自己，以及一批用户对此都深恶痛绝。&lt;/p&gt;
&lt;p&gt;  通知栏中仅仅应当出现用户自己设定的内容，或者是真正具有足够重要性的内容。并且即便如此，还是应当尽量减少应用弹出的通知，避免对用户的打扰。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;友好地提示用户的错误，隐藏技术细节，突出重要信息，提供易于操作的解决方案。&lt;/p&gt;
  &lt;img src=&quot;/android-design-guide/android_principles_keep_it_brief.png&quot; alt=&quot;简洁明了的提示文本&quot; title=&quot;简洁明了的提示文本&quot;&gt;
  &lt;img src=&quot;/android-design-guide/android_principles_error.png&quot; alt=&quot;清晰详细的操作指示&quot; title=&quot;清晰详细的操作指示&quot;&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;给予用户操作及时的反馈，让用户放心，并获得成就感。&lt;/p&gt;
  &lt;img src=&quot;/android-design-guide/android_confirm_ack_acknowledge.png&quot; alt=&quot;日历应用创建事件后的提醒&quot; title=&quot;日历应用创建事件后的提醒&quot;&gt;
&lt;p&gt;  例如在修改成功后使用 Toast 提示，以及使用向导而非直接让用户填写长表单。关于进行提醒反馈的时机将会在之后进行详细讨论。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;以上设计原则中，有很多与用户体验相关，因为设计的目标之一即是对用户友好。下面是一篇来源于 Android 官方视频的文章，可供参考。&lt;/p&gt;
&lt;blockquote class=&quot;callout&quot;&gt;&lt;div class=&quot;title&quot;&gt;延伸阅读&lt;/div&gt;&lt;a href=&quot;http://www.geekpark.net/topics/188876&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Android 应用中十大常见 UX 错误&lt;/a&gt;&lt;/blockquote&gt;
&lt;h2 id=&quot;二、设计样式&quot;&gt;&lt;a href=&quot;# 二、设计样式&quot; class=&quot;headerlink&quot; title=&quot;二、设计样式&quot;&gt;&lt;/a&gt;二、设计样式 &lt;/h2&gt;&lt;h3 id=&quot;风格&quot;&gt;&lt;a href=&quot;# 风格&quot; class=&quot;headerlink&quot; title=&quot;风格&quot;&gt;&lt;/a&gt; 风格 &lt;/h3&gt;&lt;p&gt; 可以先来谈谈其他平台的设计风格。iOS 历史版本的设计风格是拟物，即尝试将实际物体的形状、材质，都在图像资源中体现，来为用户提供友好而熟悉的体验。而当前版本的  iOS 及 Windows Phone 当前的设计风格是扁平化的。其设计的目的是使用大量的纯色与矩形，减少界面元素装饰对用户精力的分散，突出交互元素的内容。&lt;/p&gt;
&lt;p&gt;Android 的设计风格可以称之为拟真。拟真与拟物相似，但又并非拟物。拟真是对显示中物体的部分抽象，即保留人们熟悉的物体外形，而去除物体的具体材质，同时加上柔和的阴影。通过拟真的设计，可以避免由于完全拟物带来的认知过载，同时防止过于抽象带来的认知困难，这就是 Android 的设计风格。&lt;/p&gt;
&lt;p&gt;顺便一提，在 Android 的设计中，一般建议阴影是从前上方 45 度角照明产生的，这在启动器图标和卡片等界面元素的设计中都有体现。&lt;/p&gt;
&lt;img src=&quot;/android-design-guide/android_iconography_launcher_example2.png&quot; alt=&quot;Android 拟真风格的图标&quot; title=&quot;Android 拟真风格的图标&quot;&gt;
&lt;h3 id=&quot;主题&quot;&gt;&lt;a href=&quot;# 主题&quot; class=&quot;headerlink&quot; title=&quot;主题&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://developer.android.com/design/style/themes.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;主题&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Android 4 原生主题的名称为 Holo，具有暗色和亮色两个风格，以及一个暗色 ActionBar，亮色界面的变种风格。通过使用原生的主题，可以让应用程序快速获得与 Android 匹配的视觉体验。&lt;/p&gt;
&lt;img src=&quot;/android-design-guide/android_themes_holo_light.png&quot; alt=&quot;Holo Light&quot; title=&quot;Holo Light&quot;&gt;
&lt;img src=&quot;/android-design-guide/android_themes_holo_dark.png&quot; alt=&quot;Holo (Dark)&quot; title=&quot;Holo (Dark)&quot;&gt;
&lt;p&gt;将原生主题使用自己的配色进行修改，使得应用同时具有自己的特色，也是一种常见的方案。修改主题的任务较为繁琐，所幸可以使用 &lt;a href=&quot;http://romannurik.github.io/AndroidAssetStudio/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Android Asset Studio&lt;/a&gt; 这个第三方工具进行主题的生成。&lt;/p&gt;
&lt;img src=&quot;/android-design-guide/android_asset_studio.png&quot; alt=&quot;Android Asset Studio&quot; title=&quot;Android Asset Studio&quot;&gt;
&lt;p&gt;Android Asset Studio 可以进行图标和主题等资源的生成，极大地简化设计的实现过程。&lt;/p&gt;
&lt;p&gt;在此之外，虽然 Holo 主题是 Android 设计的代表性元素，但也并不是 Android 设计的全部。具体的探讨，可以参考以下这篇文章。&lt;/p&gt;
&lt;blockquote class=&quot;callout&quot;&gt;&lt;div class=&quot;title&quot;&gt;延伸阅读&lt;/div&gt;&lt;a href=&quot;http://www.geekpark.net/topics/179488&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Android Design 与 Holo Theme&lt;/a&gt;&lt;/blockquote&gt;
&lt;h3 id=&quot;度量&quot;&gt;&lt;a href=&quot;# 度量&quot; class=&quot;headerlink&quot; title=&quot;度量&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://developer.android.com/design/style/metrics-grids.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;度量 &lt;/a&gt;&lt;/h3&gt;&lt;blockquote class=&quot;callout&quot;&gt;&lt;div class=&quot;title&quot;&gt; 提示 &lt;/div&gt; 这一小节部分内容与 Android 中应用程序的具体实现有所关联，设计者在初期仅需了解即可。&lt;/blockquote&gt;
&lt;p&gt;Android 的设备规格是碎片化的，因此 Android 也有专门设计的方式应对。&lt;/p&gt;
&lt;p&gt;设备使用 DPI（Dots per Inch，每英寸像素数）表示屏幕像素密度，从而在不同清晰度的设备上呈现相通的物理大小。&lt;/p&gt;
&lt;p&gt;相应地，在进行设计时，也有不同的单位可以选择。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;px（Pixel，像素）（少用）&lt;/p&gt;
&lt;p&gt; px 是图像中最基本的单位，在显示器上固定显示为一个点的大小。因此，当屏幕上的像素密度不一致时，显示在屏幕上的实际物理大小则会过大或过小。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;dp（Density-independent Pixel，曾写作 dip，密度独立像素）（用于图像）&lt;/p&gt;
&lt;p&gt; Android 设计中通常以 dp 作为图像的尺寸单位，使得同一素材在不同设备屏幕上的大小等表现能够一致。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;sp（Scale-independent Pixel，缩放独立像素）（用于文本）&lt;/p&gt;
&lt;p&gt; Android 中允许用户自定义字体的缩放级别，所以产生了 sp 。当应用使用 sp 作为文本单位时，文本大小就可以跟随用户的文本缩放级别自动改变大小，因此 Android 中推荐所有文本的大小都使用 sp 作为单位指定。在默认缩放尺寸（1x）下，1sp 等于 1dp。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;为了实现密度独立，需要为不同 DPI 的设备适配不同大小的位图资源。如果仅仅对高质量的图像资源进行缩放，可能会导致图像的失真（例如边缘处）。&lt;/p&gt;
&lt;p&gt;因此，Android 将不同的屏幕像素密度按照大小划分到了几个不同的分类（Bucket，桶）中。随着设备的更新，DPI 的分类也缓慢地随之增多。这些分类目前包括 LDPI（Low，一般已不再支持），MDPI（Medium），HDPI（High），XHDPI（eXtra High），XXHDPI（eXtra-eXtra High）（及 XXXHDPI，仅用于应用图标）。&lt;/p&gt;
&lt;img src=&quot;/android-design-guide/android_metrics_diagram.png&quot; alt=&quot;Android 设备的屏幕尺寸&quot; title=&quot;Android 设备的屏幕尺寸&quot;&gt;
&lt;p&gt;开发者为每个分类提供相应大小的图像资源，在分类内部不同的像素密度之内则由 Android 操作系统自动进行缩放，如此就完成了对不同屏幕密度的适配。&lt;/p&gt;
&lt;p&gt;这项工作较为繁琐，不过之前提到的 &lt;a href=&quot;http://romannurik.github.io/AndroidAssetStudio/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Android Asset Studio&lt;/a&gt; 中也提供了上传高品质的图像，自动使用二次立方插值算法（较为平滑，但比线性缩放耗时稍多）进行缩放生成不同 DPI 所需图片，并按目录组织打包以供下载的功能。&lt;/p&gt;
&lt;h3 id=&quot;排版&quot;&gt;&lt;a href=&quot;# 排版&quot; class=&quot;headerlink&quot; title=&quot;排版&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://developer.android.com/design/style/metrics-grids.html#48dp-rhythm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;排版&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Android 应用的界面普遍以 48dp 组织一个视觉单位，例如 ActionBar 的高度、列表的行高、文本框和按钮的高度。48dp 在物理设备上大约为 9mm 的长度，正好处于 7-10mm 的舒适触摸区域大小之内，同时可以在设备屏幕上保证合理的信息密度，更为重要的是，一致的元素高度可以让用户界面简约而优雅。&lt;/p&gt;
&lt;img src=&quot;/android-design-guide/android_metrics_forms.png&quot; alt=&quot;48dp 旋律&quot; title=&quot;48dp 旋律&quot;&gt;
&lt;p&gt;这称为 Android 的 48dp 韵律。&lt;/p&gt;
&lt;p&gt;而 Android 中部件的间距常常为 8dp。这个边距常常被原生部件已经计算在内，然而有时也需要自己指定。&lt;/p&gt;
&lt;img src=&quot;/android-design-guide/android_metrics_closeup.png&quot; alt=&quot;部件的布局&quot; title=&quot;部件的布局&quot;&gt;
&lt;p&gt;可以看出，Android 中布局常常是以 4dp 的倍数作为长度，这也是推荐的实践。&lt;/p&gt;
&lt;h3 id=&quot;文字样式&quot;&gt;&lt;a href=&quot;# 文字样式&quot; class=&quot;headerlink&quot; title=&quot;文字样式&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://developer.android.com/design/style/typography.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;文字样式 &lt;/a&gt;&lt;/h3&gt;&lt;h4 id=&quot;字体&quot;&gt;&lt;a href=&quot;# 字体&quot; class=&quot;headerlink&quot; title=&quot;字体&quot;&gt;&lt;/a&gt; 字体&lt;/h4&gt;&lt;img src=&quot;/android-design-guide/android_typography_main.png&quot; alt=&quot;英文字体排版&quot; title=&quot;英文字体排版&quot;&gt;
&lt;p&gt;Android 4.0 之后默认的英文无衬线字体 Roboto 已经具有多个变种，因此英文中也常常使用不同的字体来实现美观的排版。&lt;/p&gt;
&lt;img src=&quot;/android-design-guide/android_typography_variants@2x.png&quot; alt=&quot;Roboto 字体集&quot; title=&quot;Roboto 字体集&quot;&gt;
&lt;blockquote class=&quot;callout&quot;&gt;&lt;div class=&quot;title&quot;&gt;下载&lt;/div&gt;&lt;a href=&quot;http://developer.android.com/downloads/design/roboto-1.2.zip&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Roboto 字体集&lt;/a&gt;&lt;/blockquote&gt;
&lt;p&gt;Android 中的中文字体名为 Droid Sans Fallback，顾名思义，只是一个回退的字体，虽然作为无衬线字体在移动端小型屏幕上拥有令人满意的视觉体验，但并没有如同英文字体那样多的风格与设计考虑。因此，中文常用的字体样式只有常规和粗体两种（中文斜体由算法生成，样式并不理想）。&lt;/p&gt;
&lt;h4 id=&quot;字号&quot;&gt;&lt;a href=&quot;# 字号&quot; class=&quot;headerlink&quot; title=&quot;字号&quot;&gt;&lt;/a&gt;字号 &lt;/h4&gt;&lt;p&gt; 字号的变化可以产生对比，但过多的字号会导致界面的混乱。Android 系统提供了以下几种推荐的字号。&lt;/p&gt;
&lt;img src=&quot;/android-design-guide/android_typography_sizes.png&quot; alt=&quot;Android 系统字号&quot; title=&quot;Android 系统字号&quot;&gt;
&lt;h4 id=&quot;文字颜色&quot;&gt;&lt;a href=&quot;# 文字颜色&quot; class=&quot;headerlink&quot; title=&quot;文字颜色&quot;&gt;&lt;/a&gt;文字颜色&lt;/h4&gt;&lt;p&gt;Android 的 Holo 主题默认定义了多种字体颜色，在设计时也可以进行引用。&lt;/p&gt;
&lt;img src=&quot;/android-design-guide/android_typography_defaults.png&quot; alt=&quot;Holo 主题文字颜色&quot; title=&quot;Holo 主题文字颜色&quot;&gt;
&lt;h3 id=&quot;色彩&quot;&gt;&lt;a href=&quot;# 色彩&quot; class=&quot;headerlink&quot; title=&quot;色彩&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://developer.android.com/design/style/color.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;色彩&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Android 拥有自己的标准调色盘（Palette），包括深浅两个风格的红、黄、绿、紫、蓝五色。&lt;/p&gt;
&lt;img src=&quot;/android-design-guide/android_color_palette.png&quot; alt=&quot;Android 调色盘&quot; title=&quot;Android 调色盘&quot;&gt;
&lt;blockquote class=&quot;callout&quot;&gt;&lt;div class=&quot;title&quot;&gt;下载&lt;/div&gt;&lt;a href=&quot;http://developer.android.com/downloads/design/Android_Design_Color_Swatches_20120229.zip&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Android 调色盘&lt;/a&gt;&lt;/blockquote&gt;
&lt;p&gt;在设计应用界面时，使用系统调色盘的颜色可以简化颜色挑选，同时获得与平台的一致性。&lt;/p&gt;
&lt;p&gt;顺带一提，关于灰色，Android 制定了为人类视觉优化的两种灰色标准（猜测与人眼 Gamma 有关）。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;在亮色主题中，RGB 色彩为 #333333，不透明度为启用时 60%，禁用时 30%。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在暗色主题中，RGB 色彩为 #FFFFFF，不透明度为启用时 80%，禁用时 30%。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;img src=&quot;/android-design-guide/android_design_elements_landing.png&quot; alt=&quot;欢迎&quot; title=&quot;欢迎&quot;&gt;
&lt;h2 id=&quot;零、前言&quot;&gt;&lt;a href=&quot;#零、前言&quot; class=&quot;headerlink&quot; title=&quot;零、前言&quot;&gt;&lt;/a&gt;零、前言&lt;/h2&gt;&lt;p&gt;这是我作为一名 Android 开发者对 Android 设计的理解。在这个教程中，我主要参考&lt;a href=&quot;http://developer.android.com/design/index.html&quot;&gt;官方的设计教程&lt;/a&gt;，同时会加入一些自己的见解，并穿插一些实用资源。其中 &lt;a href=&quot;http://www.geekpark.net/users/163712/topics&quot;&gt;NovaDNG&lt;/a&gt; 的几篇文章对我影响较大，对此十分感谢。&lt;/p&gt;
&lt;p&gt;在今年，Google 已经推出了新的 &lt;a href=&quot;https://www.google.com/design/spec/material-design/introduction.html&quot;&gt;Material 设计标准&lt;/a&gt;，对真实世界进行抽象的模拟，实现了在各个平台上的统一设计标准。我对这个标准的理念认同，然而在布局等细节上有些许分歧。诸位可以学习完 Android 设计后继续学习 Material 设计，作出自己的判断。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://blog.zhanghai.me/tags/android/"/>
    
      <category term="教程" scheme="http://blog.zhanghai.me/tags/tutorial/"/>
    
      <category term="设计" scheme="http://blog.zhanghai.me/tags/design/"/>
    
  </entry>
  
  <entry>
    <title>Key Sequence Transformation in X11</title>
    <link href="http://blog.zhanghai.me/key-sequence-transformation-in-x11/"/>
    <id>http://blog.zhanghai.me/key-sequence-transformation-in-x11/</id>
    <published>2014-11-01T05:04:38.000Z</published>
    <updated>2015-03-13T07:07:44.000Z</updated>
    
    <content type="html">&lt;p&gt;This article is originally titled &lt;a href=&quot;https://github.com/DreaminginCodeZH/xkeymacs/issues/1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Abandoning treatment for X11&lt;/a&gt;, for my &lt;a href=&quot;https://github.com/DreaminginCodeZH/xkeymacs&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;xkeymacs&lt;/a&gt; project.&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;hr&gt;
&lt;p&gt;I think I’ve done all that’s possible to achieve with X11 API in this project, but there still remain a bunch of issues. This document is about what they are and why they may not be resolved as an X11 application.&lt;/p&gt;
&lt;p&gt;Before we start with the issues, we need clarify the situation first.&lt;/p&gt;
&lt;p&gt;There are three ways to grab key events in X11: &lt;code&gt;XGrabKeyboard&lt;/code&gt;, &lt;code&gt;XGrabKey&lt;/code&gt; with &lt;code&gt;GrabModeSync&lt;/code&gt; and &lt;code&gt;XGrabKey&lt;/code&gt; with &lt;code&gt;GrabModeAsync&lt;/code&gt;. In the meantime, there is only one way to send a key event in X11: &lt;code&gt;XTestFakeKeyEvent&lt;/code&gt;, while &lt;code&gt;XSendEvents&lt;/code&gt; marks events sent as synthesized and a bunch of applications (such as &lt;code&gt;xterm&lt;/code&gt;) ignore events with this flag for some security reasons, according to various sources.&lt;/p&gt;
&lt;p&gt;If you want to replay the key event you just grabbed, use &lt;code&gt;XAllowEvents&lt;/code&gt; with &lt;code&gt;ReplayKeyboard&lt;/code&gt;. This requires the key event to come from &lt;code&gt;XGrabKey&lt;/code&gt; or a previous &lt;code&gt;XAllowEvents&lt;/code&gt; with &lt;code&gt;SyncKeyboard&lt;/code&gt;, but not from a &lt;code&gt;XGrabKeyboard&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You cannot use &lt;code&gt;XGrabKeyboard&lt;/code&gt; along with &lt;code&gt;XTestFakeKeyEvent&lt;/code&gt; because the former sets an active grab and it will receive the key event faked by yourself. If you want to &lt;code&gt;XUngrabKeyboard&lt;/code&gt; and wait for &lt;code&gt;XTestFakeKeyEvent&lt;/code&gt; to accomplish, sadly there seems to be no way. &lt;code&gt;XFlush&lt;/code&gt; flushes your own request to X server, while &lt;code&gt;XSync&lt;/code&gt; flushes and make X server process all requests and generate events, but &lt;strong&gt;not handling&lt;/strong&gt; them, according to &lt;a href=&quot;https://motif.ics.com/forum/xsync-xflush&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;this thread&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;XGrabKey&lt;/code&gt; is called a passive grab. It is activated and then behaves like &lt;code&gt;XGrabKeyboard&lt;/code&gt; when the registered key and modifier combination is found, and actually ungrabbed after the &lt;code&gt;KeyRelease&lt;/code&gt; event of that combination (see &lt;a href=&quot;http://lists.freedesktop.org/archives/xorg/2006-May/015090.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;this mail&lt;/a&gt;). So if you send a key in &lt;code&gt;KeyPress&lt;/code&gt; event, you &lt;em&gt;will&lt;/em&gt; intercept the key you just sent. To workaround this issue, you can do &lt;code&gt;XUngrabKeyboard&lt;/code&gt; before you send the key. This results in garbage &lt;code&gt;KeyRelease&lt;/code&gt; events sent to the focused window, however it is normally ignored. Another workaround would be sending the key in &lt;code&gt;KeyRelease&lt;/code&gt; event, which works, but is not the desired behavior.&lt;/p&gt;
&lt;p&gt;Note that if you replay a key event with &lt;code&gt;XAllowEvents&lt;/code&gt; in &lt;code&gt;KeyPress&lt;/code&gt;, It will also result in garbage &lt;code&gt;KeyRelease&lt;/code&gt; events, because according to the documentation the replayed event will ignore any key grabs set by any client.&lt;/p&gt;
&lt;p&gt;So here is the first issue.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Grabbed keys sent by &lt;code&gt;XTestFakeKeyEvent&lt;/code&gt; cannot be replayed&lt;/p&gt;
&lt;p&gt;  When testing the application, I was surprised to find that when I sent keys that are also grabbed by myself and deliberately do the replay in &lt;code&gt;KeyPress&lt;/code&gt;, I still receive &lt;code&gt;KeyRelease&lt;/code&gt; events for them. That is to say the &lt;code&gt;XAllowEvent&lt;/code&gt; replay failed. I guess this is because &lt;code&gt;XTestFakeKeyEvent&lt;/code&gt; is part of the &lt;code&gt;XTest&lt;/code&gt; extension and is aimed for automating testing, so the internal implementation did not take this situation into consideration. So there may be no workaround for this.&lt;/p&gt;
&lt;p&gt;  An example for this issue can be when I grabbed &lt;code&gt;Control+X&lt;/code&gt; for C-x mode and I send &lt;code&gt;Control+X&lt;/code&gt; inside the handling of &lt;code&gt;Control+W&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When sending some key combination, one have to know the status of the modifier keys and adjust them, send the key, and then restore them. This is expected to happen in a very short period of time so the user won’t notice. To accomplish this, &lt;code&gt;XQueryKeymap&lt;/code&gt; and multiple &lt;code&gt;XTestFakeKeyEvent&lt;/code&gt; is used.&lt;/p&gt;
&lt;p&gt;And the second issue.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Sending keys containing &lt;code&gt;F1&lt;/code&gt;~&lt;code&gt;F8&lt;/code&gt; causes user to be switched to &lt;code&gt;tty&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;  When sending keys containing &lt;code&gt;F3&lt;/code&gt; or &lt;code&gt;F4&lt;/code&gt;, sometimes I got switched to &lt;code&gt;tty&lt;/code&gt; by an unexpected &lt;code&gt;Control+Alt+F3/4&lt;/code&gt; combination. This happens for most of the time when I send &lt;code&gt;Control+F4&lt;/code&gt; for &lt;code&gt;(Control+X) k&lt;/code&gt;. You can see that there is nothing about &lt;code&gt;Alt&lt;/code&gt;, but still I was almost always switched to &lt;code&gt;tty4&lt;/code&gt;, however &lt;code&gt;xev&lt;/code&gt; reported the expected key sequence for this situation. The underlying logic is unknown, it may have something to do with &lt;code&gt;tty&lt;/code&gt; switching hot key implementation.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And some other issues.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Auto repeat cannot work if we intercept the &lt;code&gt;KeyPress&lt;/code&gt; event&lt;/p&gt;
&lt;p&gt;  X server generates continuous paired &lt;code&gt;KeyPress&lt;/code&gt; and &lt;code&gt;KeyRelease&lt;/code&gt; event for clients if a key is physically held for a long time. However if we intercept the first &lt;code&gt;KeyPress&lt;/code&gt; event, and send another key event, then the auto repeat just disappears. There doesn’t seem to be a solution for this issue.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Efficiency&lt;/p&gt;
&lt;p&gt;  There is a perceptible (annoying but bearable) pause when using the above stated approach to implement keyboard macros. Seems no way to resolve either.&lt;/p&gt;
&lt;p&gt;  Note that using &lt;code&gt;GrabModeAsync&lt;/code&gt; helps to improve the performance a little bit, but it results in various problems that I haven’t investigated yet.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So the conclusion is that, while X11 provided some API for keyboard event operations, it is  vague in documentation and working mechanism, and clearly not designed, nor suitable for translating key sequences into others. This may be the reason why almost no such project like this is known.&lt;/p&gt;
&lt;p&gt;For an alternative API, some people in a mailing list suggested &lt;a href=&quot;https://developer.gnome.org/libatspi/stable/libatspi-atspi-registry.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Atspi&lt;/a&gt;, which I haven’t tried out myself.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;UPDATE:&lt;/p&gt;
&lt;p&gt;Later I found out that this can be achieved with &lt;code&gt;evdev&lt;/code&gt; and &lt;code&gt;uinput&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For a python implementation, see my &lt;a href=&quot;https://github.com/DreaminginCodeZH/pykeymacs&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;pykeymacs&lt;/a&gt;.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;This article is originally titled &lt;a href=&quot;https://github.com/DreaminginCodeZH/xkeymacs/issues/1&quot;&gt;Abandoning treatment for X11&lt;/a&gt;, for my &lt;a href=&quot;https://github.com/DreaminginCodeZH/xkeymacs&quot;&gt;xkeymacs&lt;/a&gt; project.&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://blog.zhanghai.me/tags/linux/"/>
    
      <category term="Programming" scheme="http://blog.zhanghai.me/tags/programming/"/>
    
  </entry>
  
  <entry>
    <title>你好，世界！</title>
    <link href="http://blog.zhanghai.me/hello-world/"/>
    <id>http://blog.zhanghai.me/hello-world/</id>
    <published>2014-10-31T05:45:52.000Z</published>
    <updated>2015-03-02T08:59:18.000Z</updated>
    
    <content type="html">&lt;p&gt; 你好，世界！&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt; 你好，世界！&lt;/p&gt;

    
    </summary>
    
      <category term="其他" scheme="http://blog.zhanghai.me/categories/other/"/>
    
    
  </entry>
  
</feed>
